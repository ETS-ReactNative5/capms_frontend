{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\src\\\\components\\\\Manage\\\\Team.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Input } from \"reactstrap\";\nimport moment from 'moment';\nimport axios from \"axios\"; // import { Cookies } from \"react-cookie\";\n\nimport { useCookies } from 'react-cookie'; // const cookies = new Cookies();\n\nvar Team = function Team() {\n  var _useCookies = useCookies(['token']),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      cookies = _useCookies2[0],\n      removeCookie = _useCookies2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      teams = _useState2[0],\n      setTeams = _useState2[1];\n\n  var _useState3 = useState({\n    teamname: '',\n    firstorder: '',\n    firstsale: '',\n    lastorder: '',\n    lastsale: '',\n    num: '',\n    year: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      team = _useState4[0],\n      setTeam = _useState4[1];\n\n  var _useState5 = useState(moment(new Date()).format('YYYY')),\n      _useState6 = _slicedToArray(_useState5, 2),\n      year = _useState6[0],\n      setYear = _useState6[1];\n\n  var onChangeInput = function onChangeInput(e) {\n    setTeam(_objectSpread(_objectSpread({}, team), {}, _defineProperty({}, e.target.id, e.target.value)));\n  };\n\n  useEffect(function () {\n    return findAllInfo();\n  }, []);\n\n  var findAllInfo = function findAllInfo() {\n    axios.defaults.headers.common['Authorization'] = cookies.token;\n    axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/teams\")).then(function (res) {\n      setTeams(res.data);\n      console.log(res.data);\n    }).catch(function (err) {\n      if (cookies.token) {\n        removeCookie('token');\n      }\n\n      alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n      window.location.href = \"/\";\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"team\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 0.5 + 'rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: 700,\n      fontSize: 1.5 + 'rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"\\uD300\\uAD00\\uB9AC\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    style: {\n      width: 8 + 'rem'\n    },\n    id: \"year\",\n    value: year,\n    onChange: function onChange(e) {\n      setYear(e.target.value);\n      setTeam(_objectSpread(_objectSpread({}, team), {}, {\n        year: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, _toConsumableArray(Array(moment(new Date()).format('YYYY') - 2018).keys()).map(function (i) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: moment(new Date()).format('YYYY') - i + 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, moment(new Date()).format('YYYY') - i + 1);\n  }))), /*#__PURE__*/React.createElement(Table, {\n    className: \"manage__table table-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"col-md-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"\\uC6B0\\uC120\\uC21C\\uC704\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"col-md-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"\\uD300\\uBA85\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"teamname\",\n    value: team.teamname,\n    onChange: onChangeInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 54\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"col-md-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"\\uC0C1\\uBC18\\uAE30 \\uBAA9\\uD45C\\uC218\\uC8FC\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 54\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"firstorder\",\n    value: team.firstorder,\n    onChange: onChangeInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 60\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"col-md-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"\\uC0C1\\uBC18\\uAE30 \\uBAA9\\uD45C\\uB9E4\\uCD9C\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 54\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"firstsale\",\n    value: team.firstsale,\n    onChange: onChangeInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 60\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"col-md-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"\\uD558\\uBC18\\uAE30 \\uBAA9\\uD45C\\uC218\\uC8FC\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 54\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"lastorder\",\n    value: team.lastorder,\n    onChange: onChangeInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 60\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"col-md-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"\\uD558\\uBC18\\uAE30 \\uBAA9\\uD45C\\uB9E4\\uCD9C\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 54\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"lastsale\",\n    value: team.lastsale,\n    onChange: onChangeInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 60\n    }\n  })))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, teams ? teams.map(function (c, index) {\n    if (c.year == year) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }, c.num), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }, c.teamname), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }\n      }, c.firstorder), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }\n      }, c.firstsale), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, c.lastorder), /*#__PURE__*/React.createElement(\"td\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, c.lastsale));\n    }\n  }) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"7\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  }, \"\\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"))))));\n}; // class Team extends React.Component{\n//     constructor(props){\n//       super(props);\n//       this.state={\n//         teams:\"\", \n//         num:\"\",\n//         teamname:\"\",\n//         saveDate:\"\",\n//         updateEdit :[],\n//         onEdit : this.onEdit,\n//         onDelete : this.onDelete,\n//         updateValue : this.updateValue,\n//         onSave : this.onSave,\n//         year: moment(new Date()).format(\"YYYY\"),\n//       };\n//     }\n//     getRecord = (num) => {\n//       const product = this.state.teams.find(item => item.num === num);\n//       return product;\n//     }\n//     onEdit = (num) =>{\n//       const tempProduct = this.state.teams;\n//       const index  = tempProduct.indexOf(this.getRecord(num));\n//       const selectedRecord = tempProduct[index];\n//       this.setState({\n//         num : selectedRecord['num'],\n//         teamname : selectedRecord['teamname'],\n//         firstorder : selectedRecord['firstorder'],\n//         firstsale : selectedRecord['firstsale'],\n//         lastorder : selectedRecord['lastorder'],\n//         lastsale : selectedRecord['lastsale'],\n//         year : selectedRecord['year'],\n//       })\n//     }\n//     updateValue= (e,test) =>{\n//       if(test === \"teamname\"){\n//         this.state.teamname = e.target.value;\n//       }\n//       if(test === \"firstorder\"){\n//         this.state.firstorder = e.target.value;\n//       }\n//       if(test === \"firstsale\"){\n//         this.state.firstsale = e.target.value;\n//       }\n//       if(test === \"lastorder\"){\n//         this.state.lastorder = e.target.value;\n//       }\n//       if(test === \"lastsale\"){\n//         this.state.lastsale = e.target.value;\n//       }\n//       if(test === \"year\"){\n//         this.state.year = e.target.value;\n//       }\n//       const tempArr = [this.state.teamname, this.state.firstorder, this.state.firstsale, this.state.lastorder, this.state.lastsale, this.state.year];\n//       this.setState({\n//         updateEdit : tempArr\n//       })\n//     }\n//     onSave = (num) =>{\n//       if(num!==''){ // Update 조건문\n//         const SaveRecord = this.state.teams;\n//         const index = SaveRecord.indexOf(this.getRecord(num));\n//         const Record = SaveRecord[index];\n//         Record['num'] = this.state.updateEdit[0];\n//         Record['teamname'] = this.state.updateEdit[1];\n//         Record['firstorder'] = this.state.updateEdit[2];\n//         Record['firstsale'] = this.state.updateEdit[3];\n//         Record['lastorder'] = this.state.updateEdit[4];\n//         Record['lastsale'] = this.state.updateEdit[5];\n//         Record['year'] = this.state.updateEdit[6];\n//         this.setState({\n//           teams : [...this.state.teams],\n//           num :\"\" , teamname:\"\", firstorder:\"\", firstsale:\"\", lastorder:\"\", lastsale:\"\", year: \"\",\n//         })\n//         axios.post(`http://${process.env.REACT_APP_API_URL}/teams/update`, //DB연동\n//         {num: this.state.num, teamname: this.state.teamname, firstorder: this.state.firstorder, firstsale: this.state.firstsale, lastorder: this.state.lastorder, lastsale: this.state.lastsale, year: this.state.year})\n//         .then((response)=>{\n//           console.log(response);\n//         })\n//         .catch(err => {\n//           if (cookies.get(\"token\")) {\n//             cookies.remove(\"token\");\n//           }\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n//           window.location.href = \"/\";\n//         });\n//         window.location.reload();\n//       }\n//       // Insert 조건문\n//       else{ \n//         const MaxNum = Math.max(...this.state.teams.map(item=>item.num))\n//         const num = MaxNum + 1;\n//         const newArr = [];\n//         newArr['teamname'] = this.state.updateEdit[0];\n//         newArr['firstorder'] = this.state.updateEdit[1];\n//         newArr['firstsale'] = this.state.updateEdit[2];\n//         newArr['lastorder'] = this.state.updateEdit[3];\n//         newArr['lastsale'] = this.state.updateEdit[4];\n//         newArr['year'] = this.state.updateEdit[5];\n//         this.setState({\n//           teams : [...this.state.teams, newArr],\n//           num :\"\" , teamname:\"\", firstorder:\"\", firstsale:\"\", lastorder:\"\", lastsale:\"\", year:\"\",\n//         })\n//         axios.post(`http://${process.env.REACT_APP_API_URL}/teams/add`, //DB연동\n//         {num: MaxNum+1, teamname: this.state.teamname, firstorder: this.state.firstorder, firstsale: this.state.firstsale, lastorder: this.state.lastorder, lastsale: this.state.lastsale, year: this.state.year})\n//         .then((response)=>{\n//           console.log(response);\n//         })\n//         .catch(err => {\n//           if (cookies.get(\"token\")) {\n//             cookies.remove(\"token\");\n//           }\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n//           window.location.href = \"/\";\n//         });\n//         window.location.reload();\n//       }\n//     }\n//      //DELETE 하기 \n//      onDelete = (num) => {\n//       if (window.confirm(\"정말 삭제하시겠습니까??\") == true){    //확인\n//         const tempProduct = this.state.teams.filter(item=> item.num !== num);\n//       this.setState({\n//         members : tempProduct,\n//         num :\"\" , id:\"\", password:\"\", name:\"\",\n//       })\n//       axios.post(`http://${process.env.REACT_APP_API_URL}/teams/delete`, //DB연동\n//         {num: num})\n//         .then((response)=>{})\n//         .catch(err => {\n//           if (cookies.get(\"token\")) {\n//             cookies.remove(\"token\");\n//           }\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n//           window.location.href = \"/\";\n//         });\n//         window.location.reload();\n//       }else{   //취소\n//         return;\n//       }\n//     }\n//     componentDidMount(){\n//       axios.defaults.headers.common['Authorization'] = cookies.get(\"token\");\n//       this.findAllTeams();\n//     }\n//     findAllTeams(){\n//       axios.get(`http://${process.env.REACT_APP_API_URL}/teams`)\n//       .then(res=>res.data)\n//       .then((data)=>{\n//         this.setState({teams:data});\n//       })\n//       .catch(err => {\n//         if (cookies.get(\"token\")) {\n//           cookies.remove(\"token\");\n//         }\n//         alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n//         window.location.href = \"/\";\n//       });\n//     }\n//     render(){\n//         return(\n// <>\n//   <div className=\"team\">\n//     <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: 0.5+'rem'}}>\n//       <p style={{ fontWeight: 700, fontSize: 1.5+'rem' }}>팀관리</p>\n//       <select className=\"form-control\" style={{width: 8+'rem'}} id=\"Year\" value={this.state.year} onChange={(e) => {this.state.updateValue(e,\"year\")}}>\n//         <option key={2020} value=\"2020\">2020</option>\n//         <option key={2021} value=\"2021\">2021</option>\n//         <option key={2022} value=\"2022\">2022</option>\n//         <option key={2023} value=\"2023\">2023</option>\n//       </select>\n//     </div>\n//     <Table className=\"manage__table table-sm\">\n//         <thead>\n//           <tr>\n//             <th>팀명<br /><br /><Input type=\"text\" value={this.state.teamname} onChange={(e) => {this.state.updateValue(e,\"teamname\")}}/></th>\n//             <th>상반기 목표수주<br /><br /><Input type=\"text\" value={this.state.firstorder} onChange={(e) => {this.state.updateValue(e,\"firstorder\")}}/></th>\n//             <th>상반기 목표매출<br /><br /><Input type=\"text\" value={this.state.firstsale} onChange={(e) => {this.state.updateValue(e,\"firstsale\")}}/></th>\n//             <th>하반기 목표수주<br /><br /><Input type=\"text\" value={this.state.lastorder} onChange={(e) => {this.state.updateValue(e,\"lastorder\")}}/></th>\n//             <th>하반기 목표매출<br /><br /><Input type=\"text\" value={this.state.lastsale} onChange={(e) => {this.state.updateValue(e,\"lastsale\")}}/></th>\n//             <th>Action<br /><br /><Button size=\"sm\" onClick={()=>{this.state.onSave(this.state.num)}}>{this.state.num ? \"변경\" : \"추가\"}</Button></th>\n//           </tr>\n//         </thead>\n//         <tbody>  \n//           {this.state.teams ? this.state.teams.map(c => {\n//             if(c.year == this.state.year){\n//               return( \n//               <tr key={c.num}>\n//                 <td style={{ textAlign: \"center\" }}>{c.teamname}</td> \n//                 <td style={{ textAlign: \"center\" }}>{c.firstorder}</td> \n//                 <td style={{ textAlign: \"center\" }}>{c.firstsale}</td>\n//                 <td style={{ textAlign: \"center\" }}>{c.lastorder}</td>\n//                 <td style={{ textAlign: \"center\" }}>{c.lastsale}</td>\n//                 <td><Button color={\"warning\"} className=\"UpdateBtn\" size=\"sm\" variant=\"primary\" onClick={()=>{this.state.onEdit(c.num)}}>수정</Button>&nbsp;&nbsp;\n//                   <Button color={\"default\"} className=\"UpdateBtn\" size=\"sm\" variant=\"danger\"onClick={()=>{this.state.onDelete(c.num)}}>삭제</Button></td>\n//               </tr> \n//               );\n//           }})  :<tr><td colSpan=\"7\">데이터가 없습니다.</td></tr>}\n//         </tbody>\n//       </Table>\n//     </div>\n//   </>\n//         )\n//     }\n// }\n\n\nexport default Team;","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/components/Manage/Team.js"],"names":["React","useState","useEffect","Table","Button","Input","moment","axios","useCookies","Team","cookies","removeCookie","teams","setTeams","teamname","firstorder","firstsale","lastorder","lastsale","num","year","team","setTeam","Date","format","setYear","onChangeInput","e","target","id","value","findAllInfo","defaults","headers","common","token","get","process","env","REACT_APP_API_URL","then","res","data","console","log","catch","err","alert","window","location","href","display","flexDirection","justifyContent","marginBottom","fontWeight","fontSize","width","Array","keys","map","i","c","index","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Table,\r\n    Button,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport moment from 'moment';\r\nimport axios from \"axios\";\r\n// import { Cookies } from \"react-cookie\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\n// const cookies = new Cookies();\r\n\r\nconst Team = () => {\r\n  const [cookies, removeCookie ] = useCookies(['token']);\r\n  const [teams, setTeams] = useState([]);\r\n  const [team, setTeam] = useState({\r\n    teamname: '',\r\n    firstorder: '',\r\n    firstsale: '',\r\n    lastorder: '',\r\n    lastsale: '',\r\n    num: '',\r\n    year: '',\r\n  });\r\n  const [year, setYear] = useState(moment(new Date()).format('YYYY'));\r\n\r\n  const onChangeInput = (e) => {\r\n    setTeam({\r\n      ...team,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => findAllInfo(), []);\r\n\r\n  const findAllInfo = () => {\r\n    axios.defaults.headers.common['Authorization'] = cookies.token;\r\n    axios.get(`http://${process.env.REACT_APP_API_URL}/teams`)\r\n    .then((res) => {\r\n      setTeams(res.data);\r\n      console.log(res.data);\r\n    })\r\n    .catch(err => {\r\n      if (cookies.token) {\r\n        removeCookie('token');\r\n      }\r\n      alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n      window.location.href = \"/\";\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"team\">\r\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: 0.5+'rem'}}>\r\n          <p style={{ fontWeight: 700, fontSize: 1.5+'rem' }}>팀관리</p>\r\n          <select className=\"form-control\" style={{width: 8+'rem'}} id=\"year\" value={year} onChange={(e) => {setYear(e.target.value); setTeam({...team, year: e.target.value})}}>\r\n            {[...Array(moment(new Date()).format('YYYY') - 2018).keys()].map((i) => (\r\n              <option key={i} value={moment(new Date()).format('YYYY') - i + 1}>{moment(new Date()).format('YYYY') - i + 1}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <Table className=\"manage__table table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"col-md-1\">우선순위</th>\r\n              <th className=\"col-md-4\">팀명<br /><br /><Input type=\"text\" id=\"teamname\" value={team.teamname} onChange={onChangeInput}/></th>\r\n              <th className=\"col-md-2\">상반기 목표수주<br /><br /><Input type=\"text\" id=\"firstorder\" value={team.firstorder} onChange={onChangeInput}/></th>\r\n              <th className=\"col-md-2\">상반기 목표매출<br /><br /><Input type=\"text\" id=\"firstsale\" value={team.firstsale} onChange={onChangeInput}/></th>\r\n              <th className=\"col-md-2\">하반기 목표수주<br /><br /><Input type=\"text\" id=\"lastorder\" value={team.lastorder} onChange={onChangeInput}/></th>\r\n              <th className=\"col-md-2\">하반기 목표매출<br /><br /><Input type=\"text\" id=\"lastsale\" value={team.lastsale} onChange={onChangeInput}/></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>  \r\n            {teams ? teams.map((c, index) => {\r\n              if(c.year == year){\r\n                return( \r\n                <tr key={index}>\r\n                  <td style={{ textAlign: \"center\" }}>{c.num}</td> \r\n                  <td style={{ textAlign: \"center\" }}>{c.teamname}</td> \r\n                  <td style={{ textAlign: \"center\" }}>{c.firstorder}</td> \r\n                  <td style={{ textAlign: \"center\" }}>{c.firstsale}</td>\r\n                  <td style={{ textAlign: \"center\" }}>{c.lastorder}</td>\r\n                  <td style={{ textAlign: \"center\" }}>{c.lastsale}</td>\r\n                </tr> \r\n                );\r\n            }})  :<tr><td colSpan=\"7\">데이터가 없습니다.</td></tr>}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// class Team extends React.Component{\r\n     \r\n//     constructor(props){\r\n//       super(props);\r\n\r\n//       this.state={\r\n//         teams:\"\", \r\n//         num:\"\",\r\n//         teamname:\"\",\r\n//         saveDate:\"\",\r\n//         updateEdit :[],\r\n//         onEdit : this.onEdit,\r\n//         onDelete : this.onDelete,\r\n//         updateValue : this.updateValue,\r\n//         onSave : this.onSave,\r\n//         year: moment(new Date()).format(\"YYYY\"),\r\n//       };\r\n//     }\r\n\r\n//     getRecord = (num) => {\r\n//       const product = this.state.teams.find(item => item.num === num);\r\n//       return product;\r\n//     }\r\n\r\n//     onEdit = (num) =>{\r\n//       const tempProduct = this.state.teams;\r\n//       const index  = tempProduct.indexOf(this.getRecord(num));\r\n//       const selectedRecord = tempProduct[index];\r\n//       this.setState({\r\n//         num : selectedRecord['num'],\r\n//         teamname : selectedRecord['teamname'],\r\n//         firstorder : selectedRecord['firstorder'],\r\n//         firstsale : selectedRecord['firstsale'],\r\n//         lastorder : selectedRecord['lastorder'],\r\n//         lastsale : selectedRecord['lastsale'],\r\n//         year : selectedRecord['year'],\r\n//       })\r\n//     }\r\n\r\n//     updateValue= (e,test) =>{\r\n//       if(test === \"teamname\"){\r\n//         this.state.teamname = e.target.value;\r\n//       }\r\n//       if(test === \"firstorder\"){\r\n//         this.state.firstorder = e.target.value;\r\n//       }\r\n//       if(test === \"firstsale\"){\r\n//         this.state.firstsale = e.target.value;\r\n//       }\r\n//       if(test === \"lastorder\"){\r\n//         this.state.lastorder = e.target.value;\r\n//       }\r\n//       if(test === \"lastsale\"){\r\n//         this.state.lastsale = e.target.value;\r\n//       }\r\n//       if(test === \"year\"){\r\n//         this.state.year = e.target.value;\r\n//       }\r\n//       const tempArr = [this.state.teamname, this.state.firstorder, this.state.firstsale, this.state.lastorder, this.state.lastsale, this.state.year];\r\n//       this.setState({\r\n//         updateEdit : tempArr\r\n//       })\r\n//     }\r\n\r\n//     onSave = (num) =>{\r\n//       if(num!==''){ // Update 조건문\r\n//         const SaveRecord = this.state.teams;\r\n//         const index = SaveRecord.indexOf(this.getRecord(num));\r\n//         const Record = SaveRecord[index];\r\n//         Record['num'] = this.state.updateEdit[0];\r\n//         Record['teamname'] = this.state.updateEdit[1];\r\n//         Record['firstorder'] = this.state.updateEdit[2];\r\n//         Record['firstsale'] = this.state.updateEdit[3];\r\n//         Record['lastorder'] = this.state.updateEdit[4];\r\n//         Record['lastsale'] = this.state.updateEdit[5];\r\n//         Record['year'] = this.state.updateEdit[6];\r\n//         this.setState({\r\n//           teams : [...this.state.teams],\r\n//           num :\"\" , teamname:\"\", firstorder:\"\", firstsale:\"\", lastorder:\"\", lastsale:\"\", year: \"\",\r\n//         })\r\n\r\n//         axios.post(`http://${process.env.REACT_APP_API_URL}/teams/update`, //DB연동\r\n//         {num: this.state.num, teamname: this.state.teamname, firstorder: this.state.firstorder, firstsale: this.state.firstsale, lastorder: this.state.lastorder, lastsale: this.state.lastsale, year: this.state.year})\r\n//         .then((response)=>{\r\n//           console.log(response);\r\n//         })\r\n//         .catch(err => {\r\n//           if (cookies.get(\"token\")) {\r\n//             cookies.remove(\"token\");\r\n//           }\r\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n//           window.location.href = \"/\";\r\n//         });\r\n//         window.location.reload();\r\n//       }\r\n//       // Insert 조건문\r\n//       else{ \r\n//         const MaxNum = Math.max(...this.state.teams.map(item=>item.num))\r\n//         const num = MaxNum + 1;\r\n//         const newArr = [];\r\n//         newArr['teamname'] = this.state.updateEdit[0];\r\n//         newArr['firstorder'] = this.state.updateEdit[1];\r\n//         newArr['firstsale'] = this.state.updateEdit[2];\r\n//         newArr['lastorder'] = this.state.updateEdit[3];\r\n//         newArr['lastsale'] = this.state.updateEdit[4];\r\n//         newArr['year'] = this.state.updateEdit[5];\r\n//         this.setState({\r\n//           teams : [...this.state.teams, newArr],\r\n//           num :\"\" , teamname:\"\", firstorder:\"\", firstsale:\"\", lastorder:\"\", lastsale:\"\", year:\"\",\r\n//         })\r\n\r\n//         axios.post(`http://${process.env.REACT_APP_API_URL}/teams/add`, //DB연동\r\n//         {num: MaxNum+1, teamname: this.state.teamname, firstorder: this.state.firstorder, firstsale: this.state.firstsale, lastorder: this.state.lastorder, lastsale: this.state.lastsale, year: this.state.year})\r\n//         .then((response)=>{\r\n//           console.log(response);\r\n//         })\r\n//         .catch(err => {\r\n//           if (cookies.get(\"token\")) {\r\n//             cookies.remove(\"token\");\r\n//           }\r\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n//           window.location.href = \"/\";\r\n//         });\r\n//         window.location.reload();\r\n//       }\r\n//     }\r\n\r\n//      //DELETE 하기 \r\n//      onDelete = (num) => {\r\n//       if (window.confirm(\"정말 삭제하시겠습니까??\") == true){    //확인\r\n//         const tempProduct = this.state.teams.filter(item=> item.num !== num);\r\n//       this.setState({\r\n//         members : tempProduct,\r\n//         num :\"\" , id:\"\", password:\"\", name:\"\",\r\n//       })\r\n//       axios.post(`http://${process.env.REACT_APP_API_URL}/teams/delete`, //DB연동\r\n//         {num: num})\r\n//         .then((response)=>{})\r\n//         .catch(err => {\r\n//           if (cookies.get(\"token\")) {\r\n//             cookies.remove(\"token\");\r\n//           }\r\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n//           window.location.href = \"/\";\r\n//         });\r\n//         window.location.reload();\r\n//       }else{   //취소\r\n//         return;\r\n//       }\r\n//     }\r\n//     componentDidMount(){\r\n//       axios.defaults.headers.common['Authorization'] = cookies.get(\"token\");\r\n//       this.findAllTeams();\r\n//     }\r\n\r\n//     findAllTeams(){\r\n//       axios.get(`http://${process.env.REACT_APP_API_URL}/teams`)\r\n//       .then(res=>res.data)\r\n//       .then((data)=>{\r\n//         this.setState({teams:data});\r\n//       })\r\n//       .catch(err => {\r\n//         if (cookies.get(\"token\")) {\r\n//           cookies.remove(\"token\");\r\n//         }\r\n//         alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n//         window.location.href = \"/\";\r\n//       });\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n        // <>\r\n        //   <div className=\"team\">\r\n        //     <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: 0.5+'rem'}}>\r\n        //       <p style={{ fontWeight: 700, fontSize: 1.5+'rem' }}>팀관리</p>\r\n        //       <select className=\"form-control\" style={{width: 8+'rem'}} id=\"Year\" value={this.state.year} onChange={(e) => {this.state.updateValue(e,\"year\")}}>\r\n        //         <option key={2020} value=\"2020\">2020</option>\r\n        //         <option key={2021} value=\"2021\">2021</option>\r\n        //         <option key={2022} value=\"2022\">2022</option>\r\n        //         <option key={2023} value=\"2023\">2023</option>\r\n        //       </select>\r\n        //     </div>\r\n        //     <Table className=\"manage__table table-sm\">\r\n        //         <thead>\r\n        //           <tr>\r\n        //             <th>팀명<br /><br /><Input type=\"text\" value={this.state.teamname} onChange={(e) => {this.state.updateValue(e,\"teamname\")}}/></th>\r\n        //             <th>상반기 목표수주<br /><br /><Input type=\"text\" value={this.state.firstorder} onChange={(e) => {this.state.updateValue(e,\"firstorder\")}}/></th>\r\n        //             <th>상반기 목표매출<br /><br /><Input type=\"text\" value={this.state.firstsale} onChange={(e) => {this.state.updateValue(e,\"firstsale\")}}/></th>\r\n        //             <th>하반기 목표수주<br /><br /><Input type=\"text\" value={this.state.lastorder} onChange={(e) => {this.state.updateValue(e,\"lastorder\")}}/></th>\r\n        //             <th>하반기 목표매출<br /><br /><Input type=\"text\" value={this.state.lastsale} onChange={(e) => {this.state.updateValue(e,\"lastsale\")}}/></th>\r\n        //             <th>Action<br /><br /><Button size=\"sm\" onClick={()=>{this.state.onSave(this.state.num)}}>{this.state.num ? \"변경\" : \"추가\"}</Button></th>\r\n        //           </tr>\r\n        //         </thead>\r\n        //         <tbody>  \r\n        //           {this.state.teams ? this.state.teams.map(c => {\r\n        //             if(c.year == this.state.year){\r\n        //               return( \r\n        //               <tr key={c.num}>\r\n        //                 <td style={{ textAlign: \"center\" }}>{c.teamname}</td> \r\n        //                 <td style={{ textAlign: \"center\" }}>{c.firstorder}</td> \r\n        //                 <td style={{ textAlign: \"center\" }}>{c.firstsale}</td>\r\n        //                 <td style={{ textAlign: \"center\" }}>{c.lastorder}</td>\r\n        //                 <td style={{ textAlign: \"center\" }}>{c.lastsale}</td>\r\n        //                 <td><Button color={\"warning\"} className=\"UpdateBtn\" size=\"sm\" variant=\"primary\" onClick={()=>{this.state.onEdit(c.num)}}>수정</Button>&nbsp;&nbsp;\r\n        //                   <Button color={\"default\"} className=\"UpdateBtn\" size=\"sm\" variant=\"danger\"onClick={()=>{this.state.onDelete(c.num)}}>삭제</Button></td>\r\n        //               </tr> \r\n        //               );\r\n        //           }})  :<tr><td colSpan=\"7\">데이터가 없습니다.</td></tr>}\r\n        //         </tbody>\r\n        //       </Table>\r\n        //     </div>\r\n        //   </>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default Team;"]},"metadata":{},"sourceType":"module"}