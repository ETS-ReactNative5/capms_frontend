{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\src\\\\pages\\\\organization\\\\Organization.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useCookies } from \"react-cookie\";\nimport './Organization.scss';\nimport Widget from \"../../components/Widget/Widget\";\nvar ranks = ['수석(부장)', '책임', '선임', '전임'];\n\nvar Organization = function Organization() {\n  var _useCookies = useCookies(['token']),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      cookies = _useCookies2[0],\n      removeCookie = _useCookies2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      teams = _useState2[0],\n      setTeams = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      members = _useState4[0],\n      setMembers = _useState4[1];\n\n  useEffect(function () {\n    return findAllInfo();\n  }, []);\n\n  var findAllInfo = function findAllInfo() {\n    axios.defaults.headers.common['Authorization'] = cookies.token;\n    axios.all([axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/members\")), axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/teams\"))]).then(axios.spread(function (res1, res2) {\n      setMembers(res1.data);\n      setTeams(res2.data.filter(function (team) {\n        return team.year === new Date().getFullYear() && team.teamname.charAt(team.teamname.length - 1) == '팀';\n      }).sort(function (a, b) {\n        return a.num - b.num;\n      }));\n    })).catch(function (err) {\n      console.log(err); // if (cookies.token) {\n      //   removeCookie('token');\n      // }\n      // alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n      // window.location.href = \"/\";\n    });\n  };\n\n  var getHead = function getHead() {\n    if (members.length > 0) {\n      var head = members.find(function (member) {\n        return member.직책 == '실장';\n      });\n      return head.name + \" \" + head.직책;\n    }\n  };\n\n  var getTeamMembers = function getTeamMembers(team) {\n    var _members = members.filter(function (member) {\n      return member.team === team && member.직급 !== '인턴';\n    }).sort(function (a, b) {\n      return a.name.localeCompare(b.name);\n    }).sort(function (a, b) {\n      return ranks.indexOf(a.직급) - ranks.indexOf(b.직급);\n    });\n\n    var data = [];\n\n    _members.forEach(function (member) {\n      if (member.직책 == '팀장') {\n        data.unshift( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"organization__team_head\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 22\n          }\n        }, member.name, \" \", member.직책));\n      } else {\n        data.push( /*#__PURE__*/React.createElement(\"div\", {\n          key: member.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"organization__team_\" + ranks.indexOf(member.직급),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, member.name, \" \", member.직급)));\n      }\n    });\n\n    return data;\n  };\n\n  return /*#__PURE__*/React.createElement(Widget, {\n    title: /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 30,\n        fontWeight: 700\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }\n    }, \"\\uC870\\uC9C1\\uB3C4\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"organization__wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"organization__title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"organization__title_main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"\\uBBF8\\uB798\\uCC28\\uAC80\\uC99D\\uC804\\uB7B5\\uC2E4\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"organization__title_sub\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, getHead())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"organization__calculate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"숫자 계산 예정\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"organization__teams\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, teams.map(function (team) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      className: \"organization__team_name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, team.teamname);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, teams.map(function (team) {\n    return /*#__PURE__*/React.createElement(\"td\", {\n      className: \"organization__team_members\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, getTeamMembers(team.teamname));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"organization__interns\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"organization__interns_title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"\\uC778\\uD134\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"organization__interns_list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, members.filter(function (member) {\n    return member.직급 === '인턴';\n  }).map(function (member) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: member.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"organization__interns_0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, member.name));\n  })))));\n};\n\nexport default Organization;","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/pages/organization/Organization.js"],"names":["React","useState","useEffect","axios","useCookies","Widget","ranks","Organization","cookies","removeCookie","teams","setTeams","members","setMembers","findAllInfo","defaults","headers","common","token","all","get","process","env","REACT_APP_API_URL","then","spread","res1","res2","data","filter","team","year","Date","getFullYear","teamname","charAt","length","sort","a","b","num","catch","err","console","log","getHead","head","find","member","직책","name","getTeamMembers","_members","직급","localeCompare","indexOf","forEach","unshift","push","id","fontSize","fontWeight","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,qBAAP;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,IAAMC,KAAK,GAAG,CAAC,QAAD,EAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB,CAAd;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,oBAAiCH,UAAU,CAAC,CAAC,OAAD,CAAD,CAA3C;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,YAAhB;;AACA,kBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BV,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOW,OAAP;AAAA,MAAgBC,UAAhB;;AAEAX,EAAAA,SAAS,CAAC;AAAA,WAAMY,WAAW,EAAjB;AAAA,GAAD,EAAsB,EAAtB,CAAT;;AAEA,MAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBX,IAAAA,KAAK,CAACY,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDT,OAAO,CAACU,KAAzD;AACAf,IAAAA,KAAK,CACJgB,GADD,CACK,CACHhB,KAAK,CAACiB,GAAN,kBAAoBC,OAAO,CAACC,GAAR,CAAYC,iBAAhC,cADG,EAEHpB,KAAK,CAACiB,GAAN,kBAAoBC,OAAO,CAACC,GAAR,CAAYC,iBAAhC,YAFG,CADL,EAKCC,IALD,CAKMrB,KAAK,CAACsB,MAAN,CAAa,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACjCd,MAAAA,UAAU,CAACa,IAAI,CAACE,IAAN,CAAV;AACAjB,MAAAA,QAAQ,CAACgB,IAAI,CAACC,IAAL,CACNC,MADM,CACC,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,KAAc,IAAIC,IAAJ,GAAWC,WAAX,EAAd,IAA0CH,IAAI,CAACI,QAAL,CAAcC,MAAd,CAAqBL,IAAI,CAACI,QAAL,CAAcE,MAAd,GAAuB,CAA5C,KAAkD,GAAhG;AAAA,OADL,EAENC,IAFM,CAED,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAUD,CAAC,CAACE,GAAF,GAAQD,CAAC,CAACC,GAApB;AAAA,OAFC,CAAD,CAAR;AAGD,KALK,CALN,EAWCC,KAXD,CAWO,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADY,CAEZ;AACA;AACA;AACA;AACA;AACD,KAlBD;AAmBD,GArBD;;AAuBA,MAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAIjC,OAAO,CAACwB,MAAR,GAAiB,CAArB,EAAwB;AACtB,UAAMU,IAAI,GAAGlC,OAAO,CAACmC,IAAR,CAAa,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACC,EAAP,IAAa,IAAjB;AAAA,OAAnB,CAAb;AACA,aAAQH,IAAI,CAACI,IAAL,GAAY,GAAZ,GAAkBJ,IAAI,CAACG,EAA/B;AACD;AACF,GALD;;AAOA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACrB,IAAD,EAAU;AAC/B,QAAMsB,QAAQ,GAAGxC,OAAO,CAACiB,MAAR,CAAe,UAAAmB,MAAM;AAAA,aAAIA,MAAM,CAAClB,IAAP,KAAgBA,IAAhB,IAAwBkB,MAAM,CAACK,EAAP,KAAc,IAA1C;AAAA,KAArB,EAChBhB,IADgB,CACX,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUD,CAAC,CAACY,IAAF,CAAOI,aAAP,CAAqBf,CAAC,CAACW,IAAvB,CAAV;AAAA,KADW,EAEhBb,IAFgB,CAEX,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUjC,KAAK,CAACiD,OAAN,CAAcjB,CAAC,CAACe,EAAhB,IAAsB/C,KAAK,CAACiD,OAAN,CAAchB,CAAC,CAACc,EAAhB,CAAhC;AAAA,KAFW,CAAjB;;AAGA,QAAIzB,IAAI,GAAG,EAAX;;AACAwB,IAAAA,QAAQ,CAACI,OAAT,CAAiB,UAAAR,MAAM,EAAI;AACzB,UAAIA,MAAM,CAACC,EAAP,IAAa,IAAjB,EAAuB;AACrBrB,QAAAA,IAAI,CAAC6B,OAAL,eAAa;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0CT,MAAM,CAACE,IAAjD,OAAwDF,MAAM,CAACC,EAA/D,CAAb;AACD,OAFD,MAGK;AACHrB,QAAAA,IAAI,CAAC8B,IAAL,eACE;AAAK,UAAA,GAAG,EAAEV,MAAM,CAACW,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAE,wBAAsBrD,KAAK,CAACiD,OAAN,CAAcP,MAAM,CAACK,EAArB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiEL,MAAM,CAACE,IAAxE,OAA+EF,MAAM,CAACK,EAAtF,CADF,CADF;AAKD;AACF,KAXD;;AAYA,WAAOzB,IAAP;AACD,GAlBD;;AAoBA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,eAAE;AAAG,MAAA,KAAK,EAAE;AAAEgC,QAAAA,QAAQ,EAAC,EAAX;AAAeC,QAAAA,UAAU,EAAE;AAA3B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADF,eAEE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0ChB,OAAO,EAAjD,CAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UADH,CALF,eAQE;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnC,KAAK,CACLoD,GADA,CACI,UAAAhC,IAAI;AAAA,wBACP;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCA,IAAI,CAACI,QAA9C,CADO;AAAA,GADR,CADH,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,KAAK,CACLoD,GADA,CACI,UAAAhC,IAAI;AAAA,wBACP;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGqB,cAAc,CAACrB,IAAI,CAACI,QAAN,CADjB,CADO;AAAA,GADR,CADH,CADF,CATF,CARF,eA4BE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCtB,OAAO,CAACiB,MAAR,CAAe,UAAAmB,MAAM;AAAA,WAAIA,MAAM,CAACK,EAAP,KAAc,IAAlB;AAAA,GAArB,EAA6CS,GAA7C,CAAiD,UAAAd,MAAM;AAAA,wBACtD;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACW,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CX,MAAM,CAACE,IAAjD,CADF,CADsD;AAAA,GAAvD,CADD,CAFF,CA5BF,CADF,CADF;AA2CD,CApGD;;AAsGA,eAAe3C,YAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport './Organization.scss'\r\nimport Widget from \"../../components/Widget/Widget\";\r\n\r\nconst ranks = ['수석(부장)', '책임', '선임', '전임']\r\n\r\nconst Organization = () => {\r\n  const [cookies, removeCookie ] = useCookies(['token']);\r\n  const [teams, setTeams] = useState([]);\r\n  const [members, setMembers] = useState([]);\r\n\r\n  useEffect(() => findAllInfo(), []);\r\n\r\n  const findAllInfo = () => {\r\n    axios.defaults.headers.common['Authorization'] = cookies.token;\r\n    axios\r\n    .all([\r\n      axios.get(`http://${process.env.REACT_APP_API_URL}/members`),\r\n      axios.get(`http://${process.env.REACT_APP_API_URL}/teams`),\r\n    ])\r\n    .then(axios.spread((res1, res2) => {\r\n      setMembers(res1.data);\r\n      setTeams(res2.data\r\n        .filter(team => team.year === new Date().getFullYear() && team.teamname.charAt(team.teamname.length - 1) == '팀')\r\n        .sort((a, b) => a.num - b.num));\r\n    }))\r\n    .catch(err => {\r\n      console.log(err);\r\n      // if (cookies.token) {\r\n      //   removeCookie('token');\r\n      // }\r\n      // alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n      // window.location.href = \"/\";\r\n    });\r\n  };\r\n\r\n  const getHead = () => {\r\n    if (members.length > 0) {\r\n      const head = members.find(member => member.직책 == '실장');\r\n      return (head.name + \" \" + head.직책);\r\n    }\r\n  };\r\n\r\n  const getTeamMembers = (team) => {\r\n    const _members = members.filter(member => member.team === team && member.직급 !== '인턴')\r\n    .sort((a, b) => a.name.localeCompare(b.name))\r\n    .sort((a, b) => ranks.indexOf(a.직급) - ranks.indexOf(b.직급));\r\n    let data = [];\r\n    _members.forEach(member => {\r\n      if (member.직책 == '팀장') {\r\n        data.unshift(<div className=\"organization__team_head\">{member.name} {member.직책}</div>);\r\n      }\r\n      else {\r\n        data.push(\r\n          <div key={member.id}>\r\n            <div className={\"organization__team_\"+ranks.indexOf(member.직급)}>{member.name} {member.직급}</div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Widget title={<p style={{ fontSize:30, fontWeight: 700 }}>조직도</p>}>\r\n      <div className=\"organization__wrapper\">\r\n        <div className=\"organization__title\">\r\n          <div className=\"organization__title_main\">미래차검증전략실</div>\r\n          <div className=\"organization__title_sub\">{getHead()}</div>\r\n        </div>\r\n        <div className=\"organization__calculate\">\r\n          {\"숫자 계산 예정\"}\r\n        </div>\r\n        <table className=\"organization__teams\">\r\n          <thead>\r\n            <tr>\r\n              {teams\r\n              .map(team => (\r\n                <td className=\"organization__team_name\">{team.teamname}</td>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              {teams\r\n              .map(team => (\r\n                <td className=\"organization__team_members\">\r\n                  {getTeamMembers(team.teamname)}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"organization__interns\">\r\n          <div className=\"organization__interns_title\">인턴</div>\r\n          <div className=\"organization__interns_list\">\r\n          {members.filter(member => member.직급 === '인턴').map(member => (\r\n            <div key={member.id}>\r\n              <div className=\"organization__interns_0\">{member.name}</div>\r\n            </div>\r\n          ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Widget>\r\n  );\r\n}\r\n\r\nexport default Organization;"]},"metadata":{},"sourceType":"module"}