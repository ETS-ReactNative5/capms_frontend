{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\src\\\\components\\\\Manage\\\\Member.js\";\n\nimport React from 'react';\nimport { Row, Col, Table, Progress, Button, UncontrolledButtonDropdown, DropdownMenu, DropdownToggle, DropdownItem, Alert, Input, Label, Badge } from \"reactstrap\";\nimport Widget from \"../../components/Widget\";\nimport axios from \"axios\";\nimport \"./Member.modules.scss\";\n/* class Member extends React.Component{\r\n     \r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.state={\r\n        teams:\"\",\r\n        members:\"\", \r\n        num:\"\",\r\n        id:\"\",\r\n        password:\"\",\r\n        name:\"\",\r\n        team:\"\",\r\n        division:\"\",\r\n        ranks:\"\",\r\n        authority:\"\",\r\n        updateEdit :[],\r\n        onEdit : this.onEdit,\r\n        onDelete : this.onDelete,\r\n        updateValue : this.updateValue,\r\n        onSave : this.onSave,\r\n        goAlert : this.goAlert,\r\n      };\r\n    }\r\n\r\n    getRecord = (num) => {\r\n      const product = this.state.members.find(item => item.num === num);\r\n      return product;\r\n    }\r\n\r\n    onEdit = (num) =>{\r\n      const tempProduct = this.state.members;\r\n      const index  = tempProduct.indexOf(this.getRecord(num));\r\n      const selectedRecord = tempProduct[index];\r\n      this.setState({\r\n        num : selectedRecord['num'],\r\n        id : selectedRecord['id'],\r\n        password : selectedRecord['password'],\r\n        name : selectedRecord['name'],\r\n        division : selectedRecord['division'],\r\n        team : selectedRecord['team'],\r\n        ranks : selectedRecord['ranks'],\r\n        authority : selectedRecord['authority'],\r\n      })\r\n    }\r\n\r\n    updateValue= (e,test) =>{\r\n      if(test === \"id\"){\r\n        this.state.id = e.target.value;\r\n      }\r\n      if(test === \"password\"){\r\n        this.state.password = e.target.value;\r\n      }\r\n      if(test === \"name\"){\r\n        this.state.name = e.target.value;\r\n      }\r\n      if(test === \"team\"){\r\n        this.state.team = e.target.value;\r\n      }\r\n      if(test === \"division\"){\r\n        this.state.division = e.target.value;\r\n      }\r\n      if(test === \"ranks\"){\r\n        this.state.ranks = e.target.value;\r\n      }\r\n      if(test === \"authority\"){\r\n        this.state.authority = e.target.value;\r\n      }\r\n      const tempArr = [this.state.id, this.state.password, this.state.name, this.state.division, this.state.team, this.state.ranks, this.state.authority];\r\n      this.setState({\r\n        updateEdit : tempArr\r\n      })\r\n    }\r\n\r\n    onSave = (num) =>{\r\n      if(num!==''){ // Update 조건문\r\n        const SaveRecord = this.state.members;\r\n        const index = SaveRecord.indexOf(this.getRecord(num));\r\n        const Record = SaveRecord[index];\r\n        const deleteConfirm = () => console.log(\"삭제했습니다.\")\r\n        Record['id'] = this.state.updateEdit[0];\r\n        Record['password'] = this.state.updateEdit[1];\r\n        Record['name'] = this.state.updateEdit[2];\r\n        Record['division'] = this.state.updateEdit[3];\r\n        Record['team'] = this.state.updateEdit[4];\r\n        Record['ranks'] = this.state.updateEdit[5];\r\n        Record['authority'] = this.state.updateEdit[6];\r\n        this.setState({\r\n          members : [...this.state.members],\r\n          num :\"\" , id:\"\", password:\"\", name:\"\", team:\"\", division:\"\", ranks:\"\", authority:\"\",\r\n        })\r\n\r\n        axios.post(`http://${process.env.REACT_APP_API_URL}/members/update`, //DB연동\r\n        {num: this.state.num, id: this.state.id, password: this.state.password, name: this.state.name, team: this.state.team,\r\n         division: this.state.division, ranks: this.state.ranks , authority: this.state.authority }).then((response)=>{\r\n        console.log(response);\r\n         });\r\n         window.location.reload();\r\n      }\r\n      // Insert 조건문\r\n      else{ \r\n        const MaxNum = Math.max(...this.state.members.map(item=>item.num))\r\n        const num = MaxNum + 1;\r\n        const newArr = [];\r\n        newArr['id'] = this.state.updateEdit[0];\r\n        newArr['password'] = this.state.updateEdit[1];\r\n        newArr['name'] = this.state.updateEdit[2];\r\n        newArr['division'] = this.state.updateEdit[3];\r\n        newArr['team'] = this.state.updateEdit[4];\r\n        newArr['ranks'] = this.state.updateEdit[5];\r\n        newArr['authority'] = this.state.updateEdit[6];\r\n\r\n        this.setState({\r\n          members : [...this.state.members, newArr],\r\n          num :\"\" , id:\"\", password:\"\", name:\"\",  team:\"\", division:\"\", ranks:\"\", authority:\"\",\r\n        })\r\n\r\n        axios.post(`http://${process.env.REACT_APP_API_URL}/members/add`, //DB연동\r\n        {num: MaxNum+1, id: this.state.id, password: this.state.password, name: this.state.name, team: this.state.team,\r\n          division: this.state.division, ranks: this.state.ranks , authority: this.state.authority}).then((response)=>{\r\n        console.log(response);\r\n        });\r\n\r\n        window.location.reload();\r\n      }\r\n    }\r\n\r\n    //DELETE 하기 \r\n    onDelete = (num) => {\r\n      if (window.confirm(\"정말 삭제하시겠습니까??\") == true){    //확인\r\n        const tempProduct = this.state.members.filter(item=> item.num !== num);\r\n      this.setState({\r\n        members : tempProduct,\r\n        num :\"\" , id:\"\", password:\"\", name:\"\",  team:\"\", division:\"\", ranks:\"\", authority:\"\",\r\n      })\r\n      axios.post(`http://${process.env.REACT_APP_API_URL}/members/delete`, //DB연동\r\n        {num: num}).then((response)=>{\r\n        console.log(response);\r\n        });\r\n        window.location.reload();\r\n      }else{   //취소\r\n        return;\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.findAllMembers();\r\n    } \r\n\r\n    findAllMembers(){\r\n      axios\r\n      .all([axios.get(`http://${process.env.REACT_APP_API_URL}/members`),axios.get(`http://${process.env.REACT_APP_API_URL}/teams`) ])\r\n      .then(axios.spread((res1,res2)=>{\r\n             this.setState({members:res1.data});\r\n             this.setState({teams:res2.data});\r\n          })\r\n      )\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        return(\r\n        <div>\r\n          <div>\r\n            <Widget\r\n              title={<p style={{ fontWeight: 700 }}>미래차검증전략실 직원 목록</p>}\r\n            >\r\n            <div>\r\n              <Table size=\"sm\" responsive>\r\n                  <thead>\r\n                    <tr >\r\n                      <th rowSpan=\"2\">ID<br /><br /><Input type=\"text\" value={this.state.id} onChange={(e) => {this.state.updateValue(e,\"id\")}}/></th>\r\n                      <th rowSpan=\"2\">Password<br /><br /><Input type=\"text\" value={this.state.password} onChange={(e) => {this.state.updateValue(e,\"password\")}}/></th>\r\n                      <th rowSpan=\"2\">이름<br /><br /><Input type=\"text\" value={this.state.name} onChange={(e) => {this.state.updateValue(e,\"name\")}}/></th>\r\n                      <th rowSpan=\"2\">실<br /><br /><Input type=\"text\" value={this.state.division} onChange={(e) => {this.state.updateValue(e,\"division\")}}/></th>\r\n                      <th rowSpan=\"2\">팀<br /><br />\r\n                        <Input type=\"select\" value={this.state.team} onChange={(e) => {this.state.updateValue(e,\"team\")}}>\r\n                          <option value=\"\"> </option>\r\n                          {this.state.teams ? this.state.teams.map(c => {\r\n                          return( \r\n                            <option value={c.teamname}>{c.teamname}</option>     \r\n                              );\r\n                          })  :\"\"}\r\n                        </Input>\r\n                      </th>\r\n                      <th rowSpan=\"2\">직급<br /><br /><Input type=\"text\" value={this.state.ranks} onChange={(e) => {this.state.updateValue(e,\"ranks\")}}/></th>\r\n                      <th rowSpan=\"2\">권한<br /><br /><Input type=\"text\" value={this.state.authority} onChange={(e) => {this.state.updateValue(e,\"authority\")}}/></th>\r\n                      <th rowSpan=\"2\">Action<br /><br /><Button size=\"sm\" onClick={()=>{this.state.onSave(this.state.num)}}>{this.state.num ? \"변경\" : \"추가\"}</Button></th>\r\n                    </tr>\r\n                  </thead>\r\n                  \r\n                  <tbody>  \r\n                  {this.state.members ? this.state.members.map(c => {\r\n                      return( <tr key={c.num}>\r\n                        <td style={{ textAlign: \"center\" }}>{c.id}</td> \r\n                        <td style={{ textAlign: \"center\" }}>{c.password}</td> \r\n                        <td style={{ textAlign: \"center\" }}>{c.name}</td>\r\n                        <td style={{ textAlign: \"center\" }}>{c.division}</td>\r\n                        <td style={{ textAlign: \"center\" }}>{c.team}</td>\r\n                        <td style={{ textAlign: \"center\" }}>{c.ranks}</td>\r\n                        <td style={{ textAlign: \"center\" }}>{c.authority}</td>\r\n                        <td><Button color={\"warning\"} className=\"UpdateBtn\" size=\"sm\" variant=\"primary\" onClick={()=>{this.state.onEdit(c.num)}}>수정</Button>\r\n                        &nbsp;\r\n                        <Button color={\"default\"} className=\"UpdateBtn\" size=\"sm\" variant=\"danger\"onClick={()=>{this.state.onDelete(c.num)}}>삭제</Button></td>\r\n                      </tr>\r\n                        );\r\n                    })  :\"\"}\r\n              </tbody>\r\n              </Table>\r\n            </div>\r\n\r\n            </Widget>\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n} */\n\nvar Member = function Member() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"member\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Widget, {\n    title: \"Member\",\n    className: \"member-widget\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, \"Member\")));\n};\n\nexport default Member;","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/components/Manage/Member.js"],"names":["React","Row","Col","Table","Progress","Button","UncontrolledButtonDropdown","DropdownMenu","DropdownToggle","DropdownItem","Alert","Input","Label","Badge","Widget","axios","Member"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,GADJ,EAEIC,GAFJ,EAGIC,KAHJ,EAIIC,QAJJ,EAKIC,MALJ,EAMIC,0BANJ,EAOIC,YAPJ,EAQIC,cARJ,EASIC,YATJ,EAUIC,KAVJ,EAWIC,KAXJ,EAYIC,KAZJ,EAaIC,KAbJ,QAcS,YAdT;AAeA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,unB,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,SAAS,EAAC,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CADF;AAOD,CARD;;AAUA,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Table,\r\n    Progress,\r\n    Button,\r\n    UncontrolledButtonDropdown,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    DropdownItem,\r\n    Alert,\r\n    Input,\r\n    Label,\r\n    Badge\r\n  } from \"reactstrap\";\r\nimport Widget from \"../../components/Widget\";\r\nimport axios from \"axios\";\r\nimport \"./Member.modules.scss\";\r\n\r\n\r\n/* class Member extends React.Component{\r\n     \r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.state={\r\n        teams:\"\",\r\n        members:\"\", \r\n        num:\"\",\r\n        id:\"\",\r\n        password:\"\",\r\n        name:\"\",\r\n        team:\"\",\r\n        division:\"\",\r\n        ranks:\"\",\r\n        authority:\"\",\r\n        updateEdit :[],\r\n        onEdit : this.onEdit,\r\n        onDelete : this.onDelete,\r\n        updateValue : this.updateValue,\r\n        onSave : this.onSave,\r\n        goAlert : this.goAlert,\r\n      };\r\n    }\r\n\r\n    getRecord = (num) => {\r\n      const product = this.state.members.find(item => item.num === num);\r\n      return product;\r\n    }\r\n\r\n    onEdit = (num) =>{\r\n      const tempProduct = this.state.members;\r\n      const index  = tempProduct.indexOf(this.getRecord(num));\r\n      const selectedRecord = tempProduct[index];\r\n      this.setState({\r\n        num : selectedRecord['num'],\r\n        id : selectedRecord['id'],\r\n        password : selectedRecord['password'],\r\n        name : selectedRecord['name'],\r\n        division : selectedRecord['division'],\r\n        team : selectedRecord['team'],\r\n        ranks : selectedRecord['ranks'],\r\n        authority : selectedRecord['authority'],\r\n      })\r\n    }\r\n\r\n    updateValue= (e,test) =>{\r\n      if(test === \"id\"){\r\n        this.state.id = e.target.value;\r\n      }\r\n      if(test === \"password\"){\r\n        this.state.password = e.target.value;\r\n      }\r\n      if(test === \"name\"){\r\n        this.state.name = e.target.value;\r\n      }\r\n      if(test === \"team\"){\r\n        this.state.team = e.target.value;\r\n      }\r\n      if(test === \"division\"){\r\n        this.state.division = e.target.value;\r\n      }\r\n      if(test === \"ranks\"){\r\n        this.state.ranks = e.target.value;\r\n      }\r\n      if(test === \"authority\"){\r\n        this.state.authority = e.target.value;\r\n      }\r\n      const tempArr = [this.state.id, this.state.password, this.state.name, this.state.division, this.state.team, this.state.ranks, this.state.authority];\r\n      this.setState({\r\n        updateEdit : tempArr\r\n      })\r\n    }\r\n\r\n    onSave = (num) =>{\r\n      if(num!==''){ // Update 조건문\r\n        const SaveRecord = this.state.members;\r\n        const index = SaveRecord.indexOf(this.getRecord(num));\r\n        const Record = SaveRecord[index];\r\n        const deleteConfirm = () => console.log(\"삭제했습니다.\")\r\n        Record['id'] = this.state.updateEdit[0];\r\n        Record['password'] = this.state.updateEdit[1];\r\n        Record['name'] = this.state.updateEdit[2];\r\n        Record['division'] = this.state.updateEdit[3];\r\n        Record['team'] = this.state.updateEdit[4];\r\n        Record['ranks'] = this.state.updateEdit[5];\r\n        Record['authority'] = this.state.updateEdit[6];\r\n        this.setState({\r\n          members : [...this.state.members],\r\n          num :\"\" , id:\"\", password:\"\", name:\"\", team:\"\", division:\"\", ranks:\"\", authority:\"\",\r\n        })\r\n\r\n        axios.post(`http://${process.env.REACT_APP_API_URL}/members/update`, //DB연동\r\n        {num: this.state.num, id: this.state.id, password: this.state.password, name: this.state.name, team: this.state.team,\r\n         division: this.state.division, ranks: this.state.ranks , authority: this.state.authority }).then((response)=>{\r\n        console.log(response);\r\n         });\r\n         window.location.reload();\r\n      }\r\n      // Insert 조건문\r\n      else{ \r\n        const MaxNum = Math.max(...this.state.members.map(item=>item.num))\r\n        const num = MaxNum + 1;\r\n        const newArr = [];\r\n        newArr['id'] = this.state.updateEdit[0];\r\n        newArr['password'] = this.state.updateEdit[1];\r\n        newArr['name'] = this.state.updateEdit[2];\r\n        newArr['division'] = this.state.updateEdit[3];\r\n        newArr['team'] = this.state.updateEdit[4];\r\n        newArr['ranks'] = this.state.updateEdit[5];\r\n        newArr['authority'] = this.state.updateEdit[6];\r\n\r\n        this.setState({\r\n          members : [...this.state.members, newArr],\r\n          num :\"\" , id:\"\", password:\"\", name:\"\",  team:\"\", division:\"\", ranks:\"\", authority:\"\",\r\n        })\r\n\r\n        axios.post(`http://${process.env.REACT_APP_API_URL}/members/add`, //DB연동\r\n        {num: MaxNum+1, id: this.state.id, password: this.state.password, name: this.state.name, team: this.state.team,\r\n          division: this.state.division, ranks: this.state.ranks , authority: this.state.authority}).then((response)=>{\r\n        console.log(response);\r\n        });\r\n\r\n        window.location.reload();\r\n      }\r\n    }\r\n\r\n    //DELETE 하기 \r\n    onDelete = (num) => {\r\n      if (window.confirm(\"정말 삭제하시겠습니까??\") == true){    //확인\r\n        const tempProduct = this.state.members.filter(item=> item.num !== num);\r\n      this.setState({\r\n        members : tempProduct,\r\n        num :\"\" , id:\"\", password:\"\", name:\"\",  team:\"\", division:\"\", ranks:\"\", authority:\"\",\r\n      })\r\n      axios.post(`http://${process.env.REACT_APP_API_URL}/members/delete`, //DB연동\r\n        {num: num}).then((response)=>{\r\n        console.log(response);\r\n        });\r\n        window.location.reload();\r\n      }else{   //취소\r\n        return;\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.findAllMembers();\r\n    } \r\n\r\n    findAllMembers(){\r\n      axios\r\n      .all([axios.get(`http://${process.env.REACT_APP_API_URL}/members`),axios.get(`http://${process.env.REACT_APP_API_URL}/teams`) ])\r\n      .then(axios.spread((res1,res2)=>{\r\n             this.setState({members:res1.data});\r\n             this.setState({teams:res2.data});\r\n          })\r\n      )\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        return(\r\n        <div>\r\n          <div>\r\n            <Widget\r\n              title={<p style={{ fontWeight: 700 }}>미래차검증전략실 직원 목록</p>}\r\n            >\r\n            <div>\r\n              <Table size=\"sm\" responsive>\r\n                  <thead>\r\n                    <tr >\r\n                      <th rowSpan=\"2\">ID<br /><br /><Input type=\"text\" value={this.state.id} onChange={(e) => {this.state.updateValue(e,\"id\")}}/></th>\r\n                      <th rowSpan=\"2\">Password<br /><br /><Input type=\"text\" value={this.state.password} onChange={(e) => {this.state.updateValue(e,\"password\")}}/></th>\r\n                      <th rowSpan=\"2\">이름<br /><br /><Input type=\"text\" value={this.state.name} onChange={(e) => {this.state.updateValue(e,\"name\")}}/></th>\r\n                      <th rowSpan=\"2\">실<br /><br /><Input type=\"text\" value={this.state.division} onChange={(e) => {this.state.updateValue(e,\"division\")}}/></th>\r\n                      <th rowSpan=\"2\">팀<br /><br />\r\n                        <Input type=\"select\" value={this.state.team} onChange={(e) => {this.state.updateValue(e,\"team\")}}>\r\n                          <option value=\"\"> </option>\r\n                          {this.state.teams ? this.state.teams.map(c => {\r\n                          return( \r\n                            <option value={c.teamname}>{c.teamname}</option>     \r\n                              );\r\n                          })  :\"\"}\r\n                        </Input>\r\n                      </th>\r\n                      <th rowSpan=\"2\">직급<br /><br /><Input type=\"text\" value={this.state.ranks} onChange={(e) => {this.state.updateValue(e,\"ranks\")}}/></th>\r\n                      <th rowSpan=\"2\">권한<br /><br /><Input type=\"text\" value={this.state.authority} onChange={(e) => {this.state.updateValue(e,\"authority\")}}/></th>\r\n                      <th rowSpan=\"2\">Action<br /><br /><Button size=\"sm\" onClick={()=>{this.state.onSave(this.state.num)}}>{this.state.num ? \"변경\" : \"추가\"}</Button></th>\r\n                    </tr>\r\n                  </thead>\r\n                  \r\n                  <tbody>  \r\n                  {this.state.members ? this.state.members.map(c => {\r\n                      return( <tr key={c.num}>\r\n                        <td style={{ textAlign: \"center\" }}>{c.id}</td> \r\n                        <td style={{ textAlign: \"center\" }}>{c.password}</td> \r\n                        <td style={{ textAlign: \"center\" }}>{c.name}</td>\r\n                        <td style={{ textAlign: \"center\" }}>{c.division}</td>\r\n                        <td style={{ textAlign: \"center\" }}>{c.team}</td>\r\n                        <td style={{ textAlign: \"center\" }}>{c.ranks}</td>\r\n                        <td style={{ textAlign: \"center\" }}>{c.authority}</td>\r\n                        <td><Button color={\"warning\"} className=\"UpdateBtn\" size=\"sm\" variant=\"primary\" onClick={()=>{this.state.onEdit(c.num)}}>수정</Button>\r\n                        &nbsp;\r\n                        <Button color={\"default\"} className=\"UpdateBtn\" size=\"sm\" variant=\"danger\"onClick={()=>{this.state.onDelete(c.num)}}>삭제</Button></td>\r\n                      </tr>\r\n                        );\r\n                    })  :\"\"}\r\n              </tbody>\r\n              </Table>\r\n            </div>\r\n\r\n            </Widget>\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n} */\r\n\r\nconst Member = () => {\r\n  return (\r\n    <div className=\"member\">\r\n      <Widget title=\"Member\" className=\"member-widget\">\r\n        <h1>Member</h1>\r\n      </Widget>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Member;"]},"metadata":{},"sourceType":"module"}