{"ast":null,"code":"/*!\nFullCalendar Scheduler v5.10.1\nDocs & License: https://fullcalendar.io/scheduler\n(c) 2021 Adam Shaw\n*/\nimport { createRef, mapHash, createElement, DateComponent, memoize, createPlugin } from '@fullcalendar/common';\nimport premiumCommonPlugin from '@fullcalendar/premium-common';\nimport resourceCommonPlugin, { VResourceJoiner, VResourceSplitter, flattenResources, DEFAULT_RESOURCE_ORDER, ResourceDayHeader, DayResourceTableModel, ResourceDayTableModel } from '@fullcalendar/resource-common';\nimport dayGridPlugin, { DayTableSlicer, Table, TableView, buildDayTableModel } from '@fullcalendar/daygrid';\nimport { __extends, __assign } from 'tslib';\n\nvar ResourceDayTableJoiner =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayTableJoiner, _super);\n\n  function ResourceDayTableJoiner() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ResourceDayTableJoiner.prototype.transformSeg = function (seg, resourceDayTableModel, resourceI) {\n    var colRanges = resourceDayTableModel.computeColRanges(seg.firstCol, seg.lastCol, resourceI);\n    return colRanges.map(function (colRange) {\n      return __assign(__assign(__assign({}, seg), colRange), {\n        isStart: seg.isStart && colRange.isStart,\n        isEnd: seg.isEnd && colRange.isEnd\n      });\n    });\n  };\n\n  return ResourceDayTableJoiner;\n}(VResourceJoiner);\n\nvar ResourceDayTable =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayTable, _super);\n\n  function ResourceDayTable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.splitter = new VResourceSplitter();\n    _this.slicers = {};\n    _this.joiner = new ResourceDayTableJoiner();\n    _this.tableRef = createRef();\n\n    _this.isHitComboAllowed = function (hit0, hit1) {\n      var allowAcrossResources = _this.props.resourceDayTableModel.dayTableModel.colCnt === 1;\n      return allowAcrossResources || hit0.dateSpan.resourceId === hit1.dateSpan.resourceId;\n    };\n\n    return _this;\n  }\n\n  ResourceDayTable.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var resourceDayTableModel = props.resourceDayTableModel,\n        nextDayThreshold = props.nextDayThreshold,\n        dateProfile = props.dateProfile;\n    var splitProps = this.splitter.splitProps(props);\n    this.slicers = mapHash(splitProps, function (split, resourceId) {\n      return _this.slicers[resourceId] || new DayTableSlicer();\n    });\n    var slicedProps = mapHash(this.slicers, function (slicer, resourceId) {\n      return slicer.sliceProps(splitProps[resourceId], dateProfile, nextDayThreshold, context, resourceDayTableModel.dayTableModel);\n    });\n    return createElement(Table, __assign({\n      forPrint: props.forPrint,\n      ref: this.tableRef\n    }, this.joiner.joinProps(slicedProps, resourceDayTableModel), {\n      cells: resourceDayTableModel.cells,\n      dateProfile: dateProfile,\n      colGroupNode: props.colGroupNode,\n      tableMinWidth: props.tableMinWidth,\n      renderRowIntro: props.renderRowIntro,\n      dayMaxEvents: props.dayMaxEvents,\n      dayMaxEventRows: props.dayMaxEventRows,\n      showWeekNumbers: props.showWeekNumbers,\n      expandRows: props.expandRows,\n      headerAlignElRef: props.headerAlignElRef,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      isHitComboAllowed: this.isHitComboAllowed\n    }));\n  };\n\n  return ResourceDayTable;\n}(DateComponent);\n\nvar ResourceDayTableView =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayTableView, _super);\n\n  function ResourceDayTableView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.flattenResources = memoize(flattenResources);\n    _this.buildResourceDayTableModel = memoize(buildResourceDayTableModel);\n    _this.headerRef = createRef();\n    _this.tableRef = createRef();\n    return _this;\n  }\n\n  ResourceDayTableView.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var options = context.options;\n    var resourceOrderSpecs = options.resourceOrder || DEFAULT_RESOURCE_ORDER;\n    var resources = this.flattenResources(props.resourceStore, resourceOrderSpecs);\n    var resourceDayTableModel = this.buildResourceDayTableModel(props.dateProfile, context.dateProfileGenerator, resources, options.datesAboveResources, context);\n    var headerContent = options.dayHeaders && createElement(ResourceDayHeader, {\n      ref: this.headerRef,\n      resources: resources,\n      dateProfile: props.dateProfile,\n      dates: resourceDayTableModel.dayTableModel.headerDates,\n      datesRepDistinctDays: true\n    });\n\n    var bodyContent = function bodyContent(contentArg) {\n      return createElement(ResourceDayTable, {\n        ref: _this.tableRef,\n        dateProfile: props.dateProfile,\n        resourceDayTableModel: resourceDayTableModel,\n        businessHours: props.businessHours,\n        eventStore: props.eventStore,\n        eventUiBases: props.eventUiBases,\n        dateSelection: props.dateSelection,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        nextDayThreshold: options.nextDayThreshold,\n        tableMinWidth: contentArg.tableMinWidth,\n        colGroupNode: contentArg.tableColGroupNode,\n        dayMaxEvents: options.dayMaxEvents,\n        dayMaxEventRows: options.dayMaxEventRows,\n        showWeekNumbers: options.weekNumbers,\n        expandRows: !props.isHeightAuto,\n        headerAlignElRef: _this.headerElRef,\n        clientWidth: contentArg.clientWidth,\n        clientHeight: contentArg.clientHeight,\n        forPrint: props.forPrint\n      });\n    };\n\n    return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, resourceDayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n  };\n\n  return ResourceDayTableView;\n}(TableView);\n\nfunction buildResourceDayTableModel(dateProfile, dateProfileGenerator, resources, datesAboveResources, context) {\n  var dayTable = buildDayTableModel(dateProfile, dateProfileGenerator);\n  return datesAboveResources ? new DayResourceTableModel(dayTable, resources, context) : new ResourceDayTableModel(dayTable, resources, context);\n}\n\nvar main = createPlugin({\n  deps: [premiumCommonPlugin, resourceCommonPlugin, dayGridPlugin],\n  initialView: 'resourceDayGridDay',\n  views: {\n    resourceDayGrid: {\n      type: 'dayGrid',\n      component: ResourceDayTableView,\n      needsResourceData: true\n    },\n    resourceDayGridDay: {\n      type: 'resourceDayGrid',\n      duration: {\n        days: 1\n      }\n    },\n    resourceDayGridWeek: {\n      type: 'resourceDayGrid',\n      duration: {\n        weeks: 1\n      }\n    },\n    resourceDayGridMonth: {\n      type: 'resourceDayGrid',\n      duration: {\n        months: 1\n      },\n      // TODO: wish we didn't have to C&P from dayGrid's file\n      monthMode: true,\n      fixedWeekCount: true\n    }\n  }\n});\nexport default main;\nexport { ResourceDayTable, ResourceDayTableView };","map":null,"metadata":{},"sourceType":"module"}