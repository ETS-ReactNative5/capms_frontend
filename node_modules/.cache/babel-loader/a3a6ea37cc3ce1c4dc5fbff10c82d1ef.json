{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\src\\\\pages\\\\reservation\\\\Reservation.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // import { formatDate } from \"@fullcalendar/common\";\n\nimport Widget from \"../../components/Widget/Widget\";\nimport interactionPlugin from '@fullcalendar/interaction';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport moment from 'moment';\n\nvar Reservation = function Reservation() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalMenu = _useState4[0],\n      setModalMenu = _useState4[1];\n\n  var _useState5 = useState({\n    id: \"\",\n    title: \"\",\n    start: \"\",\n    end: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalData = _useState6[0],\n      setModalData = _useState6[1];\n\n  var _useState7 = useState([{\n    title: '프로젝트1',\n    start: '2021-12-01T15:30',\n    end: '2021-12-01T18:30',\n    id: '19',\n    예약자: '예약자1'\n  }, {\n    title: '프로젝트2',\n    start: '2021-12-02T15:30',\n    end: '2021-12-02T18:30',\n    id: '20',\n    예약자: '예약자2'\n  }, {\n    title: '프로젝트3',\n    start: '2021-12-03T15:30',\n    end: '2021-12-03T18:30',\n    id: '30',\n    예약자: '예약자3'\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      events = _useState8[0],\n      setEvents = _useState8[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Widget, {\n    title: /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 30,\n        fontWeight: 700\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 22\n      }\n    }, \"\\uD504\\uB85C\\uC81D\\uD2B8\\uB8F8\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: \"timeGridWeek\",\n    timeZone: \"Asia/Seoul\",\n    locale: \"ko\",\n    nowIndicator: true,\n    weekends: false,\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,timeGridWeek,timeGridDay'\n    },\n    slotMinTime: \"06:00:00\",\n    slotMaxTime: \"22:00:00\",\n    events: events,\n    allDaySlot: false,\n    eventClick: function eventClick(info) {\n      console.log(info.event._def);\n      setModalMenu(\"updateEvent\");\n      setModalData({\n        id: info.event._def.publicId,\n        title: info.event._def.title,\n        start: info.event._instance.range.start.toISOString().slice(0, -1),\n        end: info.event._instance.range.end.toISOString().slice(0, -1)\n      });\n      setIsOpen(true);\n    },\n    selectable: true,\n    selectMirror: true,\n    selectOverlap: false,\n    select: function select(selectInfo) {\n      console.log(selectInfo);\n      setModalMenu(\"createEvent\");\n      setModalData({\n        title: \"\",\n        start: selectInfo.startStr,\n        end: selectInfo.endStr\n      });\n      setIsOpen(true);\n    },\n    scrollTime: \"08:00:00\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: function toggle() {\n      return setIsOpen(!isOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: function toggle() {\n      return setIsOpen(!isOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"\\uC608\\uC57D\\uC815\\uBCF4\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, modalMenu === \"updateEvent\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"\\uC608\\uC57D\\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"\\uC608\\uC57D\\uC790 : \", modalData.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"\\uC2DC\\uC791\\uC2DC\\uAC04 : \", moment(new Date(modalData.start)).format(\"YYYY-MM-DD HH:mm\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"\\uC885\\uB8CC\\uC2DC\\uAC04 : \", moment(new Date(modalData.end)).format(\"YYYY-MM-DD HH:mm\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"ID : \", modalData.id)), modalMenu === \"createEvent\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"\\uC608\\uC57D\\uD558\\uAE30\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"\\uC608\\uC57D\\uC790 : \", modalData.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"\\uC2DC\\uC791\\uC2DC\\uAC04 : \", moment(new Date(modalData.start)).format(\"YYYY-MM-DD HH:mm\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"\\uC885\\uB8CC\\uC2DC\\uAC04 : \", moment(new Date(modalData.end)).format(\"YYYY-MM-DD HH:mm\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, modalMenu === \"createEvent\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      setEvents([].concat(_toConsumableArray(events), [{\n        title: \"테스트\" + events.length,\n        start: modalData.start,\n        end: modalData.end,\n        id: Math.random().toString(36).substr(2, 9)\n      }]));\n      setIsOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"\\uC608\\uC57D\\uD558\\uAE30\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return setIsOpen(!isOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"\\uD655\\uC778\"))));\n};\n\nexport default Reservation;","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/pages/reservation/Reservation.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","Widget","interactionPlugin","timeGridPlugin","Modal","ModalHeader","ModalBody","ModalFooter","moment","Reservation","isOpen","setIsOpen","modalMenu","setModalMenu","id","title","start","end","modalData","setModalData","예약자","events","setEvents","fontSize","fontWeight","left","center","right","info","console","log","event","_def","publicId","_instance","range","toISOString","slice","selectInfo","startStr","endStr","Date","format","length","Math","random","toString","substr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\n// import { formatDate } from \"@fullcalendar/common\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport moment from 'moment';\r\n\r\nconst Reservation = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [modalMenu, setModalMenu] = useState(\"\");\r\n  const [modalData, setModalData] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n  });\r\n  const [events, setEvents] = useState([\r\n    { title: '프로젝트1', start: '2021-12-01T15:30', end: '2021-12-01T18:30', id: '19', 예약자: '예약자1' },\r\n    { title: '프로젝트2', start: '2021-12-02T15:30', end: '2021-12-02T18:30', id: '20', 예약자: '예약자2' },\r\n    { title: '프로젝트3', start: '2021-12-03T15:30', end: '2021-12-03T18:30', id: '30', 예약자: '예약자3' },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Widget title={<p style={{ fontSize:30, fontWeight: 700 }}>프로젝트룸</p>}>\r\n        <FullCalendar plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]} initialView=\"timeGridWeek\"\r\n          timeZone=\"Asia/Seoul\"\r\n          locale=\"ko\"\r\n          nowIndicator={true}\r\n          weekends={false}\r\n          headerToolbar= {{\r\n            left: 'prev,next today',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n          }}\r\n          slotMinTime=\"06:00:00\"\r\n          slotMaxTime=\"22:00:00\"\r\n          events={events}\r\n          allDaySlot={false}\r\n          eventClick={(info) => {\r\n            console.log(info.event._def);\r\n            setModalMenu(\"updateEvent\");\r\n            setModalData({\r\n              id: info.event._def.publicId,\r\n              title:info.event._def.title,\r\n              start: info.event._instance.range.start.toISOString().slice(0,-1),\r\n              end: info.event._instance.range.end.toISOString().slice(0,-1),\r\n            });\r\n            setIsOpen(true);\r\n          }}\r\n          selectable={true}\r\n          selectMirror={true}\r\n          selectOverlap={false}\r\n          select={(selectInfo) => {\r\n            console.log(selectInfo);\r\n            setModalMenu(\"createEvent\");\r\n            setModalData({\r\n              title: \"\",\r\n              start: selectInfo.startStr,\r\n              end: selectInfo.endStr,\r\n            });\r\n            setIsOpen(true);\r\n          }}\r\n          scrollTime=\"08:00:00\"\r\n        />\r\n      </Widget>\r\n      <Modal isOpen={isOpen} toggle={() => setIsOpen(!isOpen)}>\r\n        <ModalHeader toggle={() => setIsOpen(!isOpen)}>예약정보</ModalHeader>\r\n        <ModalBody>\r\n          {modalMenu === \"updateEvent\" && (\r\n            <>\r\n              <p>예약수정</p>\r\n              <p>예약자 : {modalData.title}</p>\r\n              <p>시작시간 : {moment(new Date(modalData.start)).format(\"YYYY-MM-DD HH:mm\")}</p>\r\n              <p>종료시간 : {moment(new Date(modalData.end)).format(\"YYYY-MM-DD HH:mm\")}</p>\r\n              <p>ID : {modalData.id}</p>\r\n            </>\r\n          )}\r\n          {modalMenu === \"createEvent\" && (\r\n            <>\r\n              <h3>예약하기</h3>\r\n              <p>예약자 : {modalData.title}</p>\r\n              <p>시작시간 : {moment(new Date(modalData.start)).format(\"YYYY-MM-DD HH:mm\")}</p>\r\n              <p>종료시간 : {moment(new Date(modalData.end)).format(\"YYYY-MM-DD HH:mm\")}</p>\r\n            </>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {modalMenu === \"createEvent\" && (\r\n            <>\r\n              <button\r\n                onClick={() => {\r\n                  setEvents([\r\n                    ...events,\r\n                    {\r\n                      title: \"테스트\" + events.length,\r\n                      start: modalData.start,\r\n                      end: modalData.end,\r\n                      id: Math.random().toString(36).substr(2, 9),\r\n                    },\r\n                  ]);\r\n                  setIsOpen(false);\r\n                }}\r\n              >\r\n                예약하기\r\n              </button>\r\n            </>\r\n          )}\r\n          <button className=\"btn btn-primary\" onClick={() => setIsOpen(!isOpen)}>확인</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reservation;\r\n"]},"metadata":{},"sourceType":"module"}