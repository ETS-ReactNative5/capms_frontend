{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\src\\\\components\\\\WBS\\\\Scheduler.js\";\nimport React, { Component } from 'react';\nimport { DayPilot, DayPilotScheduler } from \"daypilot-pro-react\";\nimport Zoom from \"./Zoom\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport Flatpickr from \"react-flatpickr\";\nimport \"flatpickr/dist/themes/confetti.css\";\n\nvar Scheduler = /*#__PURE__*/function (_Component) {\n  _inherits(Scheduler, _Component);\n\n  var _super = _createSuper(Scheduler);\n\n  function Scheduler(props) {\n    var _this;\n\n    _classCallCheck(this, Scheduler);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      start_date: new Date(),\n      end_date: new Date(),\n      autoScroll: \"Always\",\n      startDate: new DayPilot.Date.today().firstDayOfMonth(),\n      days: new DayPilot.Date.today().daysInMonth(),\n      scale: \"Day\",\n      timeHeaders: [{\n        groupBy: \"Month\"\n      }, {\n        groupBy: \"Day\",\n        format: \"d\"\n      }],\n      cellWidthSpec: \"Auto\",\n      cellWidth: 30,\n      durationBarVisible: false,\n      // 이벤트 셀의 윗부분\n      treeEnabled: true,\n      rowHeaderColumns: [{\n        name: \"요소\",\n        width: 200\n      }, {\n        name: \"담당자\",\n        display: \"Ename\",\n        width: 80\n      }, {\n        name: \"투입 인원\",\n        display: \"Ecnt\",\n        width: 70\n      }],\n      updateEdit: [],\n      updateValue: _this.updateValue,\n      resources: [],\n      events: [],\n      // rowMoveHandling: \"Update\",\n      timeRangeSelectedHandling: \"Enabled\",\n      // 메뉴 펼치기 아이콘\n      // 현재 안됨\n      // 그룹 생성\n      rowCreateHandling: \"Enabled\",\n      rowCreateText: \"  New\",\n      onRowCreate: function onRowCreate(args) {\n        var row = {\n          id: \"\",\n          name: args.text,\n          expanded: 1\n        };\n        axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/group/add', //DB연동\n        {\n          name: row.name,\n          expanded: row.expanded,\n          project_id: _this.props.id\n        }).then(function (response) {\n          row.id = \"G\" + response.data.insertId;\n\n          _this.scheduler.rows.add(row);\n\n          _this.scheduler.update();\n        });\n      },\n      // 그룹, 리소스 메뉴\n      contextMenuResource: new DayPilot.Menu({\n        onShow: function onShow(args) {\n          var row = args.source;\n          var isParent = row.level === 0;\n          args.menu.items[3].disabled = !isParent;\n        },\n        items: [{\n          text: \"수정하기\",\n          onClick: function onClick(args) {\n            return _this.edit(args);\n          }\n        }, {\n          text: \"삭제하기\",\n          onClick: function onClick(args) {\n            return _this.delete(args);\n          }\n        }, {\n          text: \"-\"\n        }, {\n          text: \"세부 요소 추가하기\",\n          onClick: function onClick(args) {\n            return _this.add(args);\n          }\n        }]\n      }),\n      // 이벤트 메뉴\n      contextMenu: new DayPilot.Menu({\n        items: [{\n          text: \"수정하기\",\n          onClick: function onClick(args) {\n            return _this.editEvent(args);\n          }\n        }, {\n          text: \"삭제하기\",\n          onClick: function onClick(args) {\n            return _this.deleteEvent(args);\n          } // {\n          //   const e = args.source;\n          //   const params = {\n          //     id: e.data.id,\n          //   };\n          //   // await axios.post(\"/api/deleteEvent\", params);\n          //   // this.scheduler.events.remove(e.data.id);\n          //   this.scheduler.message(\"Event deleted: \" + e.text());\n          // }\n\n        }]\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Scheduler, [{\n    key: \"zoomChange\",\n    value: function zoomChange(args) {\n      switch (args.level) {\n        case \"year\":\n          this.setState({\n            startDate: new DayPilot.Date.today().firstDayOfYear(),\n            days: 365,\n            scale: \"Day\"\n          });\n          break;\n\n        case \"month\":\n          this.setState({\n            startDate: new DayPilot.Date.today().firstDayOfMonth(),\n            days: new DayPilot.Date.today().daysInMonth(),\n            scale: \"Day\"\n          });\n          break;\n\n        case \"week\":\n          this.setState({\n            startDate: new DayPilot.Date.today().firstDayOfWeek(),\n            days: 7,\n            scale: \"Day\"\n          });\n          break;\n\n        case \"select\":\n          this.setState({\n            startDate: this.state.start_date,\n            days: new Date(this.state.end_date).getTime() / (24 * 60 * 60 * 1000) - new Date(this.state.start_date).getTime() / (24 * 60 * 60 * 1000) + 1,\n            scale: \"Day\"\n          });\n          break;\n\n        default:\n          throw new Error(\"Invalid zoom level\");\n      }\n    }\n  }, {\n    key: \"handleChangeStart\",\n    value: function handleChangeStart(date) {\n      this.setState({\n        start_date: date[0]\n      });\n    }\n  }, {\n    key: \"handleChangeEnd\",\n    value: function handleChangeEnd(date) {\n      this.setState({\n        end_date: date[0]\n      });\n    }\n  }, {\n    key: \"cellWidthChange\",\n    value: function cellWidthChange(ev) {\n      var checked = ev.target.checked;\n      this.setState({\n        cellWidthSpec: checked ? \"Auto\" : \"Fixed\"\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.findAllWBS();\n    }\n  }, {\n    key: \"findAllWBS\",\n    value: function findAllWBS() {\n      var _this2 = this;\n\n      axios.all([axios.get(\"http://process.env.REACT_APP_API_URL/wbs/resources/group?id=\".concat(this.props.id)), axios.get('http://process.env.REACT_APP_API_URL/wbs/resources/resource'), axios.get('http://process.env.REACT_APP_API_URL/wbs/resources/events')]).then(axios.spread(function (res1, res2, res3) {\n        var get_resources = [];\n        var get_evnets = [];\n        res1.data.map(function (d) {\n          get_resources.push({\n            id: \"G\" + d.id,\n            name: d.name,\n            expanded: d.expanded\n          });\n        });\n        get_resources.forEach(function (r) {\n          var get_children = res2.data.filter(function (c) {\n            return \"G\" + c.group_id === r.id;\n          });\n          get_children.map(function (c) {\n            c.parent_id = \"G\" + c.group_id;\n          });\n          r.children = get_children;\n        });\n\n        _this2.setState({\n          resources: get_resources\n        });\n\n        res3.data.map(function (d) {\n          get_evnets.push({\n            id: d.id,\n            text: d.text,\n            start: d.start,\n            end: d.end,\n            resource: d.resource,\n            backColor: d.backColor\n          });\n        });\n\n        _this2.setState({\n          events: get_evnets\n        }); // 각 갯수 할당\n\n\n        _this2.setState({\n          cntChild: res2.data.length\n        });\n\n        _this2.setState({\n          cntGroup: res1.data.length\n        });\n      }));\n    }\n  }, {\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(args) {\n        var _this3 = this;\n\n        var parent, form, data, modal, row;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                parent = args.source;\n                form = [{\n                  name: \"세부 요소\",\n                  id: \"name\"\n                }, {\n                  name: \"담당자\",\n                  id: \"Ename\"\n                }, {\n                  name: \"투입 인원\",\n                  id: \"Ecnt\"\n                }];\n                data = {\n                  id: 0,\n                  name: \"\",\n                  Ecnt: \"\",\n                  Ename: \"\",\n                  group_id: Number(parent.data.id.substring(1)),\n                  parent_id: parent.data.id\n                };\n                _context.next = 5;\n                return DayPilot.Modal.form(form, data);\n\n              case 5:\n                modal = _context.sent;\n\n                if (!modal.canceled) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 8:\n                row = modal.result;\n                row.Ecnt = Number(row.Ecnt); // row.group_id = Number(parent.data.id.substring(1));\n                // row.parent_id = parent.data.id;\n\n                axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/resource/add', //DB연동\n                {\n                  name: row.name,\n                  Ecnt: row.Ecnt,\n                  Ename: row.Ename,\n                  group_id: row.group_id\n                }).then(function (response) {\n                  row.id = response.data.insertId;\n\n                  _this3.scheduler.rows.addChild(parent, row);\n\n                  _this3.scheduler.update();\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function add(_x) {\n        return _add.apply(this, arguments);\n      }\n\n      return add;\n    }()\n  }, {\n    key: \"edit\",\n    value: function () {\n      var _edit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(args) {\n        var isGroup, form_group, form_child, row, data, modal, col, _col;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                isGroup = !!!args.source.data.group_id;\n                form_group = [{\n                  name: \"요소\",\n                  id: \"name\"\n                }];\n                form_child = [{\n                  name: \"세부 요소\",\n                  id: \"name\"\n                }, {\n                  name: \"담당자\",\n                  id: \"Ename\"\n                }, {\n                  name: \"투입 인원\",\n                  id: \"Ecnt\"\n                }];\n                row = args.source;\n                data = row.data;\n\n                if (!isGroup) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.next = 8;\n                return DayPilot.Modal.form(form_group, data);\n\n              case 8:\n                _context2.t0 = _context2.sent;\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.next = 13;\n                return DayPilot.Modal.form(form_child, data);\n\n              case 13:\n                _context2.t0 = _context2.sent;\n\n              case 14:\n                modal = _context2.t0;\n\n                if (!modal.canceled) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 17:\n                if (isGroup == 1) {\n                  // parents\n                  axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/group/update', //DB연동\n                  {\n                    name: modal.result.name,\n                    id: Number(row.id.substring(1))\n                  });\n                  col = this.scheduler.rows.find(data.id);\n                  col.data.name = modal.result.name;\n                  this.scheduler.update();\n                } else if (isGroup == 0) {\n                  //children\n                  axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/resource/update', //DB연동\n                  {\n                    name: modal.result.name,\n                    Ecnt: modal.result.Ecnt,\n                    Ename: modal.result.Ename,\n                    group_id: modal.result.group_id,\n                    id: row.id\n                  });\n                  _col = this.scheduler.rows.find(data.id);\n                  _col.data.name = modal.result.name;\n                  _col.data.Ename = modal.result.Ename;\n                  _col.data.Ecnt = Number(modal.result.Ecnt);\n                  this.scheduler.update();\n                }\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function edit(_x2) {\n        return _edit.apply(this, arguments);\n      }\n\n      return edit;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(args) {\n        var isGroup, row, modal;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                isGroup = !!!args.source.data.group_id;\n                row = args.source;\n                _context3.next = 4;\n                return DayPilot.Modal.confirm(\"\\uC815\\uB9D0\\uB85C '\".concat(row.name, \"' \\uB97C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"));\n\n              case 4:\n                modal = _context3.sent;\n\n                if (!modal.canceled) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                if (isGroup == 1) {\n                  // parents\n                  axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/group/delete', {\n                    id: Number(row.data.id.substring(1))\n                  });\n                } else if (isGroup == 0) {\n                  //children\n                  axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/resource/delete', {\n                    id: row.data.id\n                  });\n                }\n\n                this.scheduler.rows.remove(row);\n                this.scheduler.update();\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _delete(_x3) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"editEvent\",\n    value: function () {\n      var _editEvent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(args) {\n        var color, form, row, data, modal, col;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                color = [{\n                  name: \"빨강색\",\n                  id: \"#ff0000\"\n                }, {\n                  name: \"주황색\",\n                  id: \"#ff7f00\"\n                }, {\n                  name: \"노랑색\",\n                  id: \"#ffd400\"\n                }, {\n                  name: \"초록색\",\n                  id: \"#009900\"\n                }, {\n                  name: \"파랑색\",\n                  id: \"#0067a3\"\n                }, {\n                  name: \"남색색\",\n                  id: \"#000080\"\n                }, {\n                  name: \"보라색\",\n                  id: \"#8b00ff\"\n                }];\n                form = [{\n                  name: \"내용\",\n                  id: \"text\"\n                }, {\n                  name: \"색상\",\n                  id: \"backColor\",\n                  options: color\n                }];\n                row = args.source;\n                data = row.data;\n                _context4.next = 6;\n                return DayPilot.Modal.form(form, data);\n\n              case 6:\n                modal = _context4.sent;\n\n                if (!modal.canceled) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 9:\n                axios.post(\"http://process.env.REACT_APP_API_URL/wbs/resources/event/update\", {\n                  id: modal.result.id,\n                  text: modal.result.text,\n                  backColor: modal.result.backColor\n                });\n                col = this.scheduler.events.find(data.id);\n                col.data.text = modal.result.text;\n                col.data.backColor = modal.result.backColor;\n                this.scheduler.update();\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function editEvent(_x4) {\n        return _editEvent.apply(this, arguments);\n      }\n\n      return editEvent;\n    }()\n  }, {\n    key: \"deleteEvent\",\n    value: function () {\n      var _deleteEvent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(args) {\n        var row, modal;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                row = args.source;\n                _context5.next = 3;\n                return DayPilot.Modal.confirm(\"\\uC815\\uB9D0\\uB85C '\".concat(row.data.text, \"' \\uB97C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"));\n\n              case 3:\n                modal = _context5.sent;\n\n                if (!modal.canceled) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 6:\n                axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/event/delete', {\n                  id: row.data.id\n                });\n                this.scheduler.events.remove(row);\n                this.scheduler.update();\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function deleteEvent(_x5) {\n        return _deleteEvent.apply(this, arguments);\n      }\n\n      return deleteEvent;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var config = Object.assign({}, this.state);\n      var start_date = this.state.start_date;\n      var end_date = this.state.end_date;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Zoom, {\n        onChange: function onChange(args) {\n          return _this4.zoomChange(args);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"toolbar-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Flatpickr, {\n        value: start_date,\n        options: {\n          dateFormat: \"Y-m-d\"\n        },\n        onChange: function onChange(start_date) {\n          _this4.handleChangeStart(start_date);\n\n          _this4.state.start_date = moment(_this4.state.start_date).format(\"YYYY-MM-DD\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Flatpickr, {\n        value: end_date,\n        options: {\n          dateFormat: \"Y-m-d\"\n        },\n        onChange: function onChange(end_date) {\n          _this4.handleChangeEnd(end_date);\n\n          _this4.state.end_date = moment(_this4.state.end_date).format(\"YYYY-MM-DD\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: this.state.cellWidthSpec === \"Auto\",\n        onChange: function onChange(ev) {\n          return _this4.cellWidthChange(ev);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }\n      }), \" Auto width\"))), /*#__PURE__*/React.createElement(DayPilotScheduler, Object.assign({}, config, {\n        onEventMoved: function onEventMoved(args) {\n          if (Number.isInteger(args.newResource) == 0) {\n            alert(\"부모 값으로 Event 를 옮길 수 없습니다\");\n            args.e.data.start = args.e.cache.start;\n            args.e.data.end = args.e.cache.end;\n            args.e.data.resource = args.e.cache.resource;\n\n            _this4.scheduler.update();\n\n            return;\n          }\n\n          _this4.scheduler.message(\"Event moved: \" + args.e.data.text);\n\n          axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/event/move', //DB연동\n          {\n            start: moment(args.newStart.value).format(\"YYYY-MM-DD\"),\n            end: moment(args.newEnd.value).format(\"YYYY-MM-DD\"),\n            resource: args.newResource,\n            id: args.e.data.id\n          });\n        },\n        onEventResized: function onEventResized(args) {\n          _this4.scheduler.message(\"Event resized: \" + args.e.data.text);\n\n          axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/event/resize', //DB연동\n          {\n            start: moment(args.newStart.value).format(\"YYYY-MM-DD\"),\n            end: moment(args.newEnd.value).format(\"YYYY-MM-DD\"),\n            id: args.e.data.id\n          });\n        },\n        onTimeRangeSelected: function onTimeRangeSelected(args) {\n          if (Number.isInteger(args.resource) == 0) {\n            alert(\"부모값으로 Event를 생성할 수 없습니다\");\n\n            _this4.scheduler.clearSelection();\n\n            return;\n          }\n\n          DayPilot.Modal.prompt(\"새로운 일정 등록\", \"\").then(function (modal) {\n            _this4.scheduler.clearSelection();\n\n            if (modal.canceled) {\n              return;\n            }\n\n            var row = {\n              id: 0,\n              start: moment(args.start.value).format(\"YYYY-MM-DD\"),\n              end: moment(args.end.value).format(\"YYYY-MM-DD\"),\n              text: modal.result,\n              resource: args.resource,\n              backColor: \"#ff7f00\"\n            };\n            axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/event/add', //DB연동\n            {\n              start: row.start,\n              end: row.end,\n              text: row.text,\n              resource: row.resource,\n              backColor: row.backColor\n            }).then(function (response) {\n              row.id = response.data.insertId;\n            });\n\n            _this4.scheduler.events.add(row);\n\n            _this4.scheduler.update();\n          });\n        },\n        onBeforeEventRender: function onBeforeEventRender(args) {\n          if (!args.data.backColor) {\n            args.data.backColor = \"#ff7f00\"; // 이벤트 셀 디폴트 컬러\n          }\n\n          args.data.borderColor = \"darker\";\n          args.data.fontColor = \"white\";\n        },\n        ref: function ref(component) {\n          _this4.scheduler = component && component.control;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return Scheduler;\n}(Component);\n\nexport default Scheduler;","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/components/WBS/Scheduler.js"],"names":["React","Component","DayPilot","DayPilotScheduler","Zoom","axios","moment","Flatpickr","Scheduler","props","state","start_date","Date","end_date","autoScroll","startDate","today","firstDayOfMonth","days","daysInMonth","scale","timeHeaders","groupBy","format","cellWidthSpec","cellWidth","durationBarVisible","treeEnabled","rowHeaderColumns","name","width","display","updateEdit","updateValue","resources","events","timeRangeSelectedHandling","rowCreateHandling","rowCreateText","onRowCreate","args","row","id","text","expanded","post","project_id","then","response","data","insertId","scheduler","rows","add","update","contextMenuResource","Menu","onShow","source","isParent","level","menu","items","disabled","onClick","edit","delete","contextMenu","editEvent","deleteEvent","setState","firstDayOfYear","firstDayOfWeek","getTime","Error","date","ev","checked","target","findAllWBS","all","get","spread","res1","res2","res3","get_resources","get_evnets","map","d","push","forEach","r","get_children","filter","c","group_id","parent_id","children","start","end","resource","backColor","cntChild","length","cntGroup","parent","form","Ecnt","Ename","Number","substring","Modal","modal","canceled","result","addChild","isGroup","form_group","form_child","col","find","confirm","remove","color","options","config","zoomChange","dateFormat","handleChangeStart","handleChangeEnd","cellWidthChange","isInteger","newResource","alert","e","cache","message","newStart","value","newEnd","clearSelection","prompt","borderColor","fontColor","component","control"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {DayPilot, DayPilotScheduler} from \"daypilot-pro-react\";\r\nimport Zoom from \"./Zoom\";\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/confetti.css\";\r\n\r\nclass Scheduler extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      start_date: new Date(),\r\n      end_date: new Date(),\r\n\r\n      autoScroll: \"Always\",\r\n      startDate: new DayPilot.Date.today().firstDayOfMonth(),\r\n      days: new DayPilot.Date.today().daysInMonth(),\r\n      scale: \"Day\",\r\n\r\n      timeHeaders: [\r\n        {groupBy: \"Month\"},\r\n        {groupBy: \"Day\", format: \"d\"}\r\n      ],\r\n      cellWidthSpec: \"Auto\",\r\n      cellWidth: 30,\r\n\r\n      durationBarVisible: false, // 이벤트 셀의 윗부분\r\n      treeEnabled: true,\r\n\r\n      rowHeaderColumns: [\r\n        {name: \"요소\", width: 200},\r\n        {name: \"담당자\", display: \"Ename\", width: 80},\r\n        {name: \"투입 인원\", display: \"Ecnt\", width: 70},\r\n      ],\r\n\r\n      updateEdit :[],\r\n      updateValue : this.updateValue,\r\n\r\n      resources: [],\r\n      events: [],\r\n\r\n      // rowMoveHandling: \"Update\",\r\n      timeRangeSelectedHandling: \"Enabled\",\r\n      \r\n      // 메뉴 펼치기 아이콘\r\n      // 현재 안됨\r\n      \r\n      // 그룹 생성\r\n      rowCreateHandling: \"Enabled\",\r\n      rowCreateText: \"  New\",\r\n\r\n      onRowCreate: args => {\r\n        const row = {\r\n          id: \"\",\r\n          name: args.text,\r\n          expanded: 1\r\n        }\r\n        \r\n        \r\n        axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/group/add', //DB연동\r\n        {name: row.name, expanded: row.expanded , project_id:this.props.id}).then((response)=>{\r\n          row.id = \"G\" + response.data.insertId;\r\n\r\n          this.scheduler.rows.add(row);\r\n          this.scheduler.update();\r\n        });\r\n      },\r\n\r\n      // 그룹, 리소스 메뉴\r\n      contextMenuResource: new DayPilot.Menu({\r\n        onShow: args => {\r\n          const row = args.source;\r\n          const isParent = row.level === 0;\r\n          args.menu.items[3].disabled = !isParent;\r\n        },\r\n\r\n        items: [\r\n          {text: \"수정하기\", onClick: args => this.edit(args)},\r\n          {text: \"삭제하기\", onClick: args => this.delete(args)},\r\n          {text: \"-\"},\r\n          {text: \"세부 요소 추가하기\", onClick: args => this.add(args)}\r\n        ]\r\n      }),\r\n\r\n      // 이벤트 메뉴\r\n      contextMenu: new DayPilot.Menu({\r\n        items: [\r\n          {text: \"수정하기\", onClick: args => this.editEvent(args)},\r\n          {text: \"삭제하기\", onClick: args => this.deleteEvent(args)\r\n            // {\r\n            //   const e = args.source;\r\n            //   const params = {\r\n            //     id: e.data.id,\r\n            //   };\r\n            //   // await axios.post(\"/api/deleteEvent\", params);\r\n            //   // this.scheduler.events.remove(e.data.id);\r\n            //   this.scheduler.message(\"Event deleted: \" + e.text());\r\n            // }\r\n          }\r\n        ]\r\n      }),      \r\n\r\n    };\r\n\r\n  }\r\n\r\n  zoomChange(args) {\r\n    switch (args.level) {\r\n      case \"year\":\r\n        this.setState({\r\n          startDate: new DayPilot.Date.today().firstDayOfYear(),\r\n          days: 365,\r\n          scale: \"Day\"\r\n        });\r\n        break;\r\n      case \"month\":\r\n        this.setState({\r\n          startDate: new DayPilot.Date.today().firstDayOfMonth(),\r\n          days: new DayPilot.Date.today().daysInMonth(),\r\n          scale: \"Day\"\r\n        });\r\n        break;\r\n      case \"week\":\r\n        this.setState({\r\n          startDate: new DayPilot.Date.today().firstDayOfWeek(),\r\n          days: 7,\r\n          scale: \"Day\"\r\n        });\r\n        break;\r\n      case \"select\":\r\n        this.setState({\r\n        startDate: this.state.start_date, \r\n        days: ( new Date(this.state.end_date).getTime()/( 24*60*60*1000) )- ( new Date(this.state.start_date)).getTime()/( 24*60*60*1000)+1,\r\n        scale: \"Day\"\r\n        });\r\n        break;\r\n      default:\r\n        throw new Error(\"Invalid zoom level\");\r\n    }\r\n  }\r\n\r\n  handleChangeStart(date) {\r\n    this.setState({\r\n      start_date: date[0]\r\n    });\r\n  };\r\n\r\n  handleChangeEnd(date) {\r\n    this.setState({\r\n      end_date: date[0]\r\n    });\r\n  };\r\n\r\n  cellWidthChange(ev) {\r\n    const checked = ev.target.checked;\r\n    this.setState({\r\n      cellWidthSpec: checked ? \"Auto\" : \"Fixed\"\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.findAllWBS();\r\n  }\r\n\r\n  findAllWBS() {\r\n  \r\n    axios\r\n    .all([\r\n      axios.get(`http://process.env.REACT_APP_API_URL/wbs/resources/group?id=${this.props.id}`),\r\n      axios.get('http://process.env.REACT_APP_API_URL/wbs/resources/resource'),\r\n      axios.get('http://process.env.REACT_APP_API_URL/wbs/resources/events')\r\n    ])\r\n    .then(axios.spread((res1,res2,res3)=>{\r\n      const get_resources = [];\r\n      const get_evnets = [];\r\n     \r\n      res1.data.map(function(d) {\r\n        get_resources.push({id: \"G\"+d.id, name: d.name, expanded: d.expanded});\r\n      });\r\n\r\n      get_resources.forEach(r => {\r\n        const get_children = res2.data.filter(c => \"G\"+c.group_id === r.id);\r\n        get_children.map(function(c) {\r\n          c.parent_id = \"G\"+c.group_id;\r\n        });\r\n        r.children = get_children;\r\n      });\r\n      \r\n      this.setState({ resources: get_resources });\r\n      \r\n      res3.data.map(function(d) {\r\n        get_evnets.push({id: d.id, text: d.text, start: d.start, end: d.end, resource: d.resource, backColor: d.backColor});\r\n      });\r\n      \r\n      this.setState({ events: get_evnets });\r\n      \r\n      // 각 갯수 할당\r\n      this.setState({ cntChild: res2.data.length });\r\n      this.setState({ cntGroup: res1.data.length });\r\n\r\n      }\r\n    ))\r\n    \r\n  }\r\n\r\n  async add(args) {\r\n\r\n    const parent = args.source;\r\n    const form = [\r\n      {name: \"세부 요소\", id: \"name\"},\r\n      {name: \"담당자\", id: \"Ename\"},\r\n      {name: \"투입 인원\", id: \"Ecnt\"}\r\n    ];\r\n    \r\n    const data = {\r\n      id: 0,\r\n      name: \"\",\r\n      Ecnt: \"\",\r\n      Ename: \"\",\r\n      group_id: Number(parent.data.id.substring(1)),\r\n      parent_id: parent.data.id\r\n    }\r\n  \r\n    const modal = await DayPilot.Modal.form(form, data);\r\n    if (modal.canceled) {\r\n      return;\r\n    }\r\n  \r\n    const row = modal.result;\r\n\r\n    row.Ecnt = Number(row.Ecnt);\r\n    // row.group_id = Number(parent.data.id.substring(1));\r\n    // row.parent_id = parent.data.id;\r\n    \r\n    axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/resource/add', //DB연동\r\n    {name: row.name , Ecnt: row.Ecnt , Ename: row.Ename, group_id: row.group_id}).then((response)=>{\r\n      row.id = response.data.insertId;\r\n\r\n      this.scheduler.rows.addChild(parent, row);\r\n      this.scheduler.update();\r\n    });\r\n  \r\n  }\r\n  \r\n  async edit(args) {\r\n    \r\n    const isGroup = !!!args.source.data.group_id;\r\n    \r\n    const form_group = [\r\n      {name: \"요소\", id: \"name\"},\r\n    ];\r\n    \r\n    const form_child = [\r\n      {name: \"세부 요소\", id: \"name\"},\r\n      {name: \"담당자\", id: \"Ename\"},\r\n      {name: \"투입 인원\", id: \"Ecnt\"},\r\n    ];\r\n    \r\n    const row = args.source;\r\n    const data = row.data;\r\n    \r\n    const modal = isGroup ? await DayPilot.Modal.form(form_group, data) : await DayPilot.Modal.form(form_child, data) ;\r\n    \r\n    if (modal.canceled) {\r\n      return;\r\n    }\r\n    \r\n    if(isGroup==1){ // parents\r\n      axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/group/update', //DB연동\r\n      {name: modal.result.name , id:Number(row.id.substring(1))});\r\n      const col = this.scheduler.rows.find(data.id);\r\n      col.data.name = modal.result.name;\r\n      this.scheduler.update();\r\n    }\r\n    else if(isGroup==0){ //children\r\n      axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/resource/update', //DB연동\r\n      {name: modal.result.name , Ecnt: modal.result.Ecnt, Ename: modal.result.Ename, group_id: modal.result.group_id, id:row.id});\r\n      const col = this.scheduler.rows.find(data.id);\r\n      col.data.name = modal.result.name;\r\n      col.data.Ename = modal.result.Ename;\r\n      col.data.Ecnt = Number(modal.result.Ecnt);\r\n      this.scheduler.update();\r\n    }\r\n\r\n  }\r\n  \r\n  async delete(args) {\r\n    const isGroup = !!!args.source.data.group_id;\r\n    const row = args.source;\r\n    const modal = await DayPilot.Modal.confirm(`정말로 '${row.name}' 를 삭제하시겠습니까?`);\r\n    if (modal.canceled) {\r\n      return;\r\n    }\r\n\r\n  \r\n    if (isGroup==1) { // parents\r\n      axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/group/delete', {id: Number(row.data.id.substring(1))});\r\n    }\r\n    else if (isGroup==0) { //children\r\n      axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/resource/delete', {id: row.data.id});\r\n    }\r\n\r\n    this.scheduler.rows.remove(row);\r\n    this.scheduler.update();\r\n\r\n  }\r\n\r\n  async editEvent(args) {\r\n\r\n    const color = [\r\n      {name: \"빨강색\", id: \"#ff0000\"},\r\n      {name: \"주황색\", id: \"#ff7f00\"},\r\n      {name: \"노랑색\", id: \"#ffd400\"},\r\n      {name: \"초록색\", id: \"#009900\"},\r\n      {name: \"파랑색\", id: \"#0067a3\"},\r\n      {name: \"남색색\", id: \"#000080\"},\r\n      {name: \"보라색\", id: \"#8b00ff\"}\r\n    ]\r\n\r\n    const form = [\r\n      { name: \"내용\", id: \"text\"},\r\n      { name: \"색상\", id: \"backColor\", options: color},\r\n    ];\r\n    \r\n    const row = args.source;\r\n    const data = row.data;\r\n    \r\n    const modal = await DayPilot.Modal.form(form, data);\r\n\r\n    if (modal.canceled) {\r\n      return;\r\n    }\r\n\r\n    axios.post(\"http://process.env.REACT_APP_API_URL/wbs/resources/event/update\",\r\n    {id: modal.result.id, text: modal.result.text, backColor: modal.result.backColor});\r\n    const col = this.scheduler.events.find(data.id);\r\n    col.data.text = modal.result.text;\r\n    col.data.backColor = modal.result.backColor;\r\n    this.scheduler.update();\r\n  }\r\n\r\n  async deleteEvent(args) {\r\n    const row = args.source;\r\n    const modal = await DayPilot.Modal.confirm(`정말로 '${row.data.text}' 를 삭제하시겠습니까?`);\r\n    if (modal.canceled) {\r\n      return;\r\n    }\r\n\r\n    axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/event/delete', {id: row.data.id});\r\n\r\n    this.scheduler.events.remove(row);\r\n    this.scheduler.update();\r\n\r\n  }\r\n\r\n  render() {\r\n    const { ...config } = this.state;\r\n    const { start_date } = this.state;\r\n    const { end_date } = this.state;\r\n\r\n    return (\r\n\r\n      <div>\r\n\r\n        <div className=\"toolbar\">\r\n\r\n          <Zoom onChange={args => this.zoomChange(args)}/>\r\n\r\n          <span className=\"toolbar-item\">\r\n\r\n            <Flatpickr\r\n              value={start_date}\r\n              options={\r\n                {dateFormat: \"Y-m-d\"}\r\n              }\r\n              onChange={start_date => {\r\n                this.handleChangeStart(start_date);\r\n                this.state.start_date = moment(this.state.start_date).format(\"YYYY-MM-DD\");\r\n              }}\r\n            />\r\n\r\n            <Flatpickr\r\n              value={end_date}\r\n              options={\r\n                {dateFormat: \"Y-m-d\"}\r\n              }\r\n              onChange={end_date => {\r\n                this.handleChangeEnd(end_date);\r\n                this.state.end_date = moment(this.state.end_date).format(\"YYYY-MM-DD\");\r\n              }}\r\n            />\r\n\r\n            <label>\r\n              <input type=\"checkbox\" checked={this.state.cellWidthSpec === \"Auto\"} \r\n                onChange={ev => this.cellWidthChange(ev)}/> Auto width\r\n            </label>\r\n\r\n          </span>\r\n\r\n        </div>\r\n\r\n        <DayPilotScheduler\r\n          {...config}\r\n\r\n          onEventMoved = {args => {\r\n\r\n            if (Number.isInteger(args.newResource)==0) {\r\n              alert(\"부모 값으로 Event 를 옮길 수 없습니다\");\r\n\r\n              args.e.data.start = args.e.cache.start;\r\n              args.e.data.end = args.e.cache.end;\r\n              args.e.data.resource = args.e.cache.resource;\r\n              \r\n              this.scheduler.update();\r\n\r\n              return;\r\n            }\r\n          \r\n            this.scheduler.message(\"Event moved: \" + args.e.data.text);\r\n            \r\n            axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/event/move', //DB연동\r\n            {start: moment(args.newStart.value).format(\"YYYY-MM-DD\"), end: moment(args.newEnd.value).format(\"YYYY-MM-DD\"), resource: args.newResource, id: args.e.data.id})\r\n          }}\r\n\r\n          onEventResized = {args => {\r\n            this.scheduler.message(\"Event resized: \" + args.e.data.text);\r\n\r\n            axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/event/resize', //DB연동\r\n              {start: moment(args.newStart.value).format(\"YYYY-MM-DD\"), end: moment(args.newEnd.value).format(\"YYYY-MM-DD\"), id: args.e.data.id})\r\n          }}\r\n\r\n          onTimeRangeSelected = {args => {\r\n            if (Number.isInteger(args.resource) == 0) {\r\n              alert(\"부모값으로 Event를 생성할 수 없습니다\");\r\n              this.scheduler.clearSelection();\r\n              return;\r\n            }\r\n\r\n            DayPilot.Modal.prompt(\"새로운 일정 등록\", \"\").then(modal => {\r\n              this.scheduler.clearSelection();\r\n              if (modal.canceled) {\r\n                return;\r\n              }\r\n\r\n              const row = {\r\n                id: 0,\r\n                start: moment(args.start.value).format(\"YYYY-MM-DD\"),\r\n                end: moment(args.end.value).format(\"YYYY-MM-DD\"),\r\n                text: modal.result,\r\n                resource: args.resource,\r\n                backColor: \"#ff7f00\"\r\n              };\r\n\r\n\r\n              axios.post('http://process.env.REACT_APP_API_URL/wbs/resources/event/add', //DB연동\r\n              {start: row.start, end: row.end, text: row.text, resource: row.resource, backColor: row.backColor}).then((response)=>{\r\n                row.id = response.data.insertId;\r\n              });\r\n\r\n              this.scheduler.events.add(row);\r\n              this.scheduler.update();\r\n\r\n            });\r\n            \r\n          }}\r\n          \r\n          onBeforeEventRender = {args => {\r\n            if (!args.data.backColor) {\r\n              args.data.backColor = \"#ff7f00\"; // 이벤트 셀 디폴트 컬러\r\n            }\r\n            args.data.borderColor = \"darker\";\r\n            args.data.fontColor = \"white\";\r\n          }}\r\n\r\n          ref={component => {\r\n            this.scheduler = component && component.control;\r\n          }}\r\n\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scheduler;\r\n\r\n"]},"metadata":{},"sourceType":"module"}