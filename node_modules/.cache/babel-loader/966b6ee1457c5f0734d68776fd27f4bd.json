{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\src\\\\pages\\\\reservation\\\\Reservation.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // import { formatDate } from \"@fullcalendar/common\";\n\nimport Widget from \"../../components/Widget/Widget\";\nimport interactionPlugin from '@fullcalendar/interaction';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Input } from \"reactstrap\";\nimport moment from 'moment';\nimport axios from \"axios\";\nimport { useCookies } from 'react-cookie';\n\nvar Reservation = function Reservation() {\n  var user = JSON.parse(localStorage.getItem('userInfo')) ? JSON.parse(localStorage.getItem('userInfo')).id : {};\n\n  var _useCookies = useCookies(['token']),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      cookies = _useCookies2[0],\n      removeCookie = _useCookies2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      members = _useState2[0],\n      setMembers = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalMenu = _useState6[0],\n      setModalMenu = _useState6[1];\n\n  var _useState7 = useState({\n    id: \"\",\n    title: \"\",\n    start: \"\",\n    end: \"\",\n    예약자: \"\",\n    특이사항: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalData = _useState8[0],\n      setModalData = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      events = _useState10[0],\n      setEvents = _useState10[1];\n\n  useEffect(function () {\n    return findAllInfo();\n  }, []); // 전체 데이터 로드\n\n  var findAllInfo = function findAllInfo() {\n    axios.defaults.headers.common['Authorization'] = cookies.token;\n    axios.all([axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/reservations\")), axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/members\"))]).then(axios.spread(function (res1, res2) {\n      setEvents(res1.data);\n      setMembers(res2.data);\n    })).catch(function (err) {\n      if (cookies.token) {\n        removeCookie('token');\n      }\n\n      alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n      window.location.href = \"/\";\n    });\n  };\n\n  var onClickCreate = function onClickCreate() {\n    if (modalData.title === \"\" || modalData.start === \"\" || modalData.end === \"\") return alert(\"내용을 입력해주세요\");\n    axios.post(\"http://\".concat(process.env.REACT_APP_API_URL, \"/reservations/add\"), {\n      modalData: modalData\n    }).then(function (res) {\n      console.log(res);\n    }).catch(function (err) {\n      if (cookies.token) {\n        removeCookie('token');\n      }\n\n      alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n      window.location.href = \"/\";\n    });\n    window.location.reload();\n  };\n\n  var onClickDelete = function onClickDelete(id) {\n    window.confirm(\"정말 삭제하시겠습니까?\") && axios.post(\"http://\".concat(process.env.REACT_APP_API_URL, \"/reservations/delete\"), {\n      id: modalData.id\n    }).then(function (res) {\n      console.log(res);\n    }).catch(function (err) {\n      if (cookies.token) {\n        removeCookie('token');\n      }\n\n      alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n      window.location.href = \"/\";\n    });\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Widget, {\n    title: /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 30,\n        fontWeight: 700\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 22\n      }\n    }, \"\\uD504\\uB85C\\uC81D\\uD2B8\\uB8F8\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: \"timeGridWeek\",\n    timeZone: \"Asia/Seoul\",\n    locale: \"ko\",\n    nowIndicator: true,\n    weekends: false,\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,timeGridWeek,timeGridDay'\n    },\n    slotMinTime: \"06:00:00\",\n    slotMaxTime: \"22:00:00\",\n    events: events,\n    allDaySlot: false,\n    eventClick: function eventClick(info) {\n      setModalMenu(\"updateEvent\");\n      setModalData({\n        id: info.event._def.publicId,\n        title: info.event._def.title,\n        start: info.event._instance.range.start.toISOString().slice(0, -1),\n        end: info.event._instance.range.end.toISOString().slice(0, -1),\n        예약자: info.event._def.extendedProps.예약자,\n        특이사항: info.event._def.extendedProps.특이사항\n      });\n      setIsOpen(true);\n    },\n    selectable: true,\n    selectMirror: true,\n    selectOverlap: false,\n    select: function select(selectInfo) {\n      setModalMenu(\"createEvent\");\n      setModalData({\n        title: \"\",\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        예약자: user,\n        특이사항: \"\"\n      });\n      setIsOpen(true);\n    },\n    scrollTime: \"08:00:00\",\n    eventDisplay: \"background\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: function toggle() {\n      return setIsOpen(!isOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: function toggle() {\n      return setIsOpen(!isOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, modalMenu === \"createEvent\" ? \"새로운 일정 추가\" : \"일정 수정\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, modalMenu === \"updateEvent\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"\\uB0B4\\uC6A9 : \", modalData.title), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"\\uC2DC\\uC791\\uC2DC\\uAC04 : \", moment(new Date(modalData.start)).format(\"YYYY-MM-DD HH:mm\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, \"\\uC885\\uB8CC\\uC2DC\\uAC04 : \", moment(new Date(modalData.end)).format(\"YYYY-MM-DD HH:mm\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \"\\uC608\\uC57D\\uC790 : \", members.find(function (_ref) {\n    var id = _ref.id;\n    return id === modalData.예약자;\n  }) ? members.find(function (_ref2) {\n    var id = _ref2.id;\n    return id === modalData.예약자;\n  }).name : modalData.예약자), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"\\uD2B9\\uC774\\uC0AC\\uD56D : \", modalData.특이사항)), modalMenu === \"createEvent\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, \"\\uB0B4\\uC6A9\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: modalData.title,\n    onChange: function onChange(e) {\n      return setModalData(_objectSpread(_objectSpread({}, modalData), {}, {\n        title: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 20\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"\\uC2DC\\uC791\\uC2DC\\uAC04 : \", moment(new Date(modalData.start)).format(\"YYYY-MM-DD HH:mm\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, \"\\uC885\\uB8CC\\uC2DC\\uAC04 : \", moment(new Date(modalData.end)).format(\"YYYY-MM-DD HH:mm\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"\\uD2B9\\uC774\\uC0AC\\uD56D\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: modalData.특이사항,\n    onChange: function onChange(e) {\n      return setModalData(_objectSpread(_objectSpread({}, modalData), {}, {\n        특이사항: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 20\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, modalMenu === \"createEvent\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: function onClick() {\n      onClickCreate();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"\\uC608\\uC57D\\uD558\\uAE30\")), modalMenu === \"updateEvent\" && user === modalData.예약자 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: function onClick() {\n      onClickDelete();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"\\uC0AD\\uC81C\\uD558\\uAE30\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    onClick: function onClick() {\n      return setIsOpen(!isOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"\\uB2EB\\uAE30\"))));\n};\n\nexport default Reservation;","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/pages/reservation/Reservation.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","Widget","interactionPlugin","timeGridPlugin","Modal","ModalHeader","ModalBody","ModalFooter","Input","moment","axios","useCookies","Reservation","user","JSON","parse","localStorage","getItem","id","cookies","removeCookie","members","setMembers","isOpen","setIsOpen","modalMenu","setModalMenu","title","start","end","예약자","특이사항","modalData","setModalData","events","setEvents","findAllInfo","defaults","headers","common","token","all","get","process","env","REACT_APP_API_URL","then","spread","res1","res2","data","catch","err","alert","window","location","href","onClickCreate","post","res","console","log","reload","onClickDelete","confirm","fontSize","fontWeight","left","center","right","info","event","_def","publicId","_instance","range","toISOString","slice","extendedProps","selectInfo","startStr","endStr","Date","format","find","name","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\n// import { formatDate } from \"@fullcalendar/common\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport moment from 'moment';\r\nimport axios from \"axios\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst Reservation = () => {\r\n  const user = JSON.parse(localStorage.getItem('userInfo')) ? JSON.parse(localStorage.getItem('userInfo')).id : {};\r\n  const [cookies, removeCookie ] = useCookies(['token']);\r\n  const [members, setMembers] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [modalMenu, setModalMenu] = useState(\"\");\r\n  const [modalData, setModalData] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n    예약자: \"\",\r\n    특이사항: \"\",\r\n  });\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => findAllInfo(), []);\r\n\r\n  // 전체 데이터 로드\r\n  const findAllInfo = () => {\r\n    axios.defaults.headers.common['Authorization'] = cookies.token;\r\n    axios\r\n    .all([\r\n      axios.get(`http://${process.env.REACT_APP_API_URL}/reservations`),\r\n      axios.get(`http://${process.env.REACT_APP_API_URL}/members`)\r\n    ])\r\n    .then(axios.spread((res1, res2) => {\r\n      setEvents(res1.data);\r\n      setMembers(res2.data);\r\n    }))\r\n    .catch(err => {\r\n      if (cookies.token) {\r\n        removeCookie('token');\r\n      }\r\n      alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n      window.location.href = \"/\";\r\n    });\r\n  }\r\n\r\n  const onClickCreate = () => {\r\n    if (modalData.title === \"\" || modalData.start === \"\" || modalData.end === \"\")\r\n      return alert(\"내용을 입력해주세요\");\r\n    axios.post(`http://${process.env.REACT_APP_API_URL}/reservations/add`, {modalData})\r\n    .then(res => {\r\n      console.log(res);\r\n    })\r\n    .catch(err => {\r\n      if (cookies.token) {\r\n        removeCookie('token');\r\n      }\r\n      alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n      window.location.href = \"/\";\r\n    });\r\n    window.location.reload();\r\n  }\r\n\r\n  const onClickDelete = (id) => {\r\n    window.confirm(\"정말 삭제하시겠습니까?\") &&\r\n    axios.post(`http://${process.env.REACT_APP_API_URL}/reservations/delete`, {id: modalData.id})\r\n    .then(res => {\r\n      console.log(res);\r\n    })\r\n    .catch(err => {\r\n      if (cookies.token) {\r\n        removeCookie('token');\r\n      }\r\n      alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n      window.location.href = \"/\";\r\n    });\r\n    window.location.reload();\r\n  }\r\n      \r\n\r\n  return (\r\n    <>\r\n      <Widget title={<p style={{ fontSize:30, fontWeight: 700 }}>프로젝트룸</p>}>\r\n        <FullCalendar plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]} initialView=\"timeGridWeek\"\r\n          timeZone=\"Asia/Seoul\"\r\n          locale=\"ko\"\r\n          nowIndicator={true}\r\n          weekends={false}\r\n          headerToolbar= {{\r\n            left: 'prev,next today',\r\n            center: 'title',\r\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n          }}\r\n          slotMinTime=\"06:00:00\"\r\n          slotMaxTime=\"22:00:00\"\r\n          events={events}\r\n          allDaySlot={false}\r\n          eventClick={(info) => {\r\n            setModalMenu(\"updateEvent\");\r\n            setModalData({\r\n              id: info.event._def.publicId,\r\n              title:info.event._def.title,\r\n              start: info.event._instance.range.start.toISOString().slice(0,-1),\r\n              end: info.event._instance.range.end.toISOString().slice(0,-1),\r\n              예약자: info.event._def.extendedProps.예약자,\r\n              특이사항: info.event._def.extendedProps.특이사항,\r\n            });\r\n            setIsOpen(true);\r\n          }}\r\n          selectable={true}\r\n          selectMirror={true}\r\n          selectOverlap={false}\r\n          select={(selectInfo) => {\r\n            setModalMenu(\"createEvent\");\r\n            setModalData({\r\n              title: \"\",\r\n              start: selectInfo.startStr,\r\n              end: selectInfo.endStr,\r\n              예약자: user,\r\n              특이사항: \"\",\r\n            });\r\n            setIsOpen(true);\r\n          }}\r\n          scrollTime=\"08:00:00\"\r\n          eventDisplay=\"background\"\r\n        />\r\n      </Widget>\r\n      <Modal isOpen={isOpen} toggle={() => setIsOpen(!isOpen)}>\r\n        <ModalHeader toggle={() => setIsOpen(!isOpen)}>\r\n          {modalMenu === \"createEvent\" ? \"새로운 일정 추가\" : \"일정 수정\"}\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {modalMenu === \"updateEvent\" && (\r\n            <>\r\n              <div>내용 : {modalData.title}</div>\r\n              <div>시작시간 : {moment(new Date(modalData.start)).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n              <div>종료시간 : {moment(new Date(modalData.end)).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n              <div>예약자 : {members.find(({id}) => id === modalData.예약자) ? members.find(({id}) => id === modalData.예약자).name : modalData.예약자}</div>\r\n              <div>특이사항 : {modalData.특이사항}</div>\r\n            </>\r\n          )}\r\n          {modalMenu === \"createEvent\" && (\r\n            <>\r\n              <div>내용</div>\r\n              <div><Input type=\"text\" value={modalData.title} onChange={(e) => setModalData({...modalData, title: e.target.value})} /></div>\r\n              <div>시작시간 : {moment(new Date(modalData.start)).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n              <div>종료시간 : {moment(new Date(modalData.end)).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n              <div>특이사항</div>\r\n              <div><Input type=\"text\" value={modalData.특이사항} onChange={(e) => setModalData({...modalData, 특이사항: e.target.value})} /></div>\r\n            </>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          {modalMenu === \"createEvent\" && (\r\n            <>\r\n              <button\r\n                className=\"btn btn-warning\"\r\n                onClick={() => {\r\n                  onClickCreate();\r\n                }}\r\n              >\r\n                예약하기\r\n              </button>\r\n            </>\r\n          )}\r\n          {modalMenu === \"updateEvent\" && user === modalData.예약자 && (\r\n            <>\r\n              <button\r\n                className=\"btn btn-warning\"\r\n                onClick={() => {\r\n                  onClickDelete();\r\n                }}\r\n              >\r\n                삭제하기\r\n              </button>\r\n            </>\r\n          )}\r\n          <button className=\"btn btn-secondary\" onClick={() => setIsOpen(!isOpen)}>닫기</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reservation;\r\n"]},"metadata":{},"sourceType":"module"}