{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\src\\\\pages\\\\charts\\\\highcharts\\\\HighCharts.js\";\nimport React, { PureComponent } from 'react';\nimport { Row, Col } from 'reactstrap';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport variablePie from 'highcharts/modules/variable-pie';\nimport exporting from 'highcharts/modules/exporting';\nimport exportData from 'highcharts/modules/export-data';\nimport accessibility from 'highcharts/modules/accessibility';\nimport highcharts3d from 'highcharts/highcharts-3d';\nimport sunburst from 'highcharts/modules/sunburst';\nimport vector from 'highcharts/modules/vector';\nimport wordcloud from 'highcharts/modules/wordcloud'; // import gantt from 'highcharts/modules/gantt';\n\nimport highchartsGantt from \"highcharts/modules/gantt\";\nimport Widget from '../../../components/Widget';\nimport chartsData from './mock';\nvariablePie(Highcharts);\nexporting(Highcharts);\nexportData(Highcharts);\naccessibility(Highcharts);\nhighcharts3d(Highcharts);\nsunburst(Highcharts);\nvector(Highcharts);\nwordcloud(Highcharts); // gantt(Highcharts);\n\nhighchartsGantt(Highcharts);\nvar today = new Date(),\n    day = 1000 * 60 * 60 * 24,\n    map = Highcharts.map,\n    dateFormat = Highcharts.dateFormat,\n    series,\n    cars; // Set to 00:00:00:000 today\n\ntoday.setUTCHours(0);\ntoday.setUTCMinutes(0);\ntoday.setUTCSeconds(0);\ntoday.setUTCMilliseconds(0);\ntoday = today.getTime();\ncars = [{\n  model: 'Nissan Leaf',\n  current: 0,\n  deals: [{\n    rentedTo: 'Lisa Star',\n    from: today - 1 * day,\n    to: today + 2 * day\n  }, {\n    rentedTo: 'Shane Long',\n    from: today - 3 * day,\n    to: today - 2 * day\n  }, {\n    rentedTo: 'Jack Coleman',\n    from: today + 5 * day,\n    to: today + 6 * day\n  }]\n}, {\n  model: 'Jaguar E-type',\n  current: 0,\n  deals: [{\n    rentedTo: 'Martin Hammond',\n    from: today - 2 * day,\n    to: today + 1 * day\n  }, {\n    rentedTo: 'Linda Jackson',\n    from: today - 2 * day,\n    to: today + 1 * day\n  }, {\n    rentedTo: 'Robert Sailor',\n    from: today + 2 * day,\n    to: today + 6 * day\n  }]\n}, {\n  model: 'Volvo V60',\n  current: 0,\n  deals: [{\n    rentedTo: 'Mona Ricci',\n    from: today + 0 * day,\n    to: today + 3 * day\n  }, {\n    rentedTo: 'Jane Dockerman',\n    from: today + 3 * day,\n    to: today + 4 * day\n  }, {\n    rentedTo: 'Bob Shurro',\n    from: today + 6 * day,\n    to: today + 8 * day\n  }]\n}, {\n  model: 'Volkswagen Golf',\n  current: 0,\n  deals: [{\n    rentedTo: 'Hailie Marshall',\n    from: today - 1 * day,\n    to: today + 1 * day\n  }, {\n    rentedTo: 'Morgan Nicholson',\n    from: today - 3 * day,\n    to: today - 2 * day\n  }, {\n    rentedTo: 'William Harriet',\n    from: today + 2 * day,\n    to: today + 3 * day\n  }]\n}, {\n  model: 'Peugeot 208',\n  current: 0,\n  deals: [{\n    rentedTo: 'Harry Peterson',\n    from: today - 1 * day,\n    to: today + 2 * day\n  }, {\n    rentedTo: 'Emma Wilson',\n    from: today + 3 * day,\n    to: today + 4 * day\n  }, {\n    rentedTo: 'Ron Donald',\n    from: today + 5 * day,\n    to: today + 6 * day\n  }]\n}]; // Parse car data into series.\n\nseries = cars.map(function (car, i) {\n  var data = car.deals.map(function (deal) {\n    return {\n      id: 'deal-' + i,\n      rentedTo: deal.rentedTo,\n      start: deal.from,\n      end: deal.to,\n      // color: '#' + Highcharts.getOptions().colors[i],\n      parent: 'car-' + 0,\n      y: i\n    };\n  });\n  return {\n    name: car.model,\n    data: data,\n    current: car.deals[car.current]\n  };\n});\n\nvar HighChartsPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(HighChartsPage, _PureComponent);\n\n  var _super = _createSuper(HighChartsPage);\n\n  function HighChartsPage() {\n    var _this;\n\n    _classCallCheck(this, HighChartsPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      cd: chartsData\n    });\n\n    return _this;\n  }\n\n  _createClass(HighChartsPage, [{\n    key: \"render\",\n    value: function render() {\n      var _ref;\n\n      var cd = this.state.cd;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"page-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, \"Visual - \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fw-semi-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 45\n        }\n      }, \"Highcharts\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, \"For more information please read full \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"https://github.com/highcharts/highcharts-vue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 50\n        }\n      }, \"documentation\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Widget, {\n        title: /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 22\n          }\n        }, \"Highcharts \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fw-semi-bold\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 37\n          }\n        }, \"Line Chart\")),\n        close: true,\n        collapse: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(HighchartsReact, {\n        highcharts: Highcharts,\n        constructorType: \"ganttChart\",\n        options: (_ref = {\n          title: {\n            text: 'Gantt Vertical Axis.grid'\n          },\n          yAxis: {\n            type: 'category',\n            grid: {\n              borderColor: '#3a5d96',\n              columns: [{\n                title: {\n                  text: 'Tasks',\n                  rotation: 45,\n                  y: -15,\n                  x: -15\n                },\n                labels: {\n                  format: '{point.assignee}'\n                }\n              }, {\n                title: {\n                  text: 'Assignee',\n                  rotation: 45,\n                  y: -15,\n                  x: -15\n                },\n                labels: {\n                  format: '{point.assignee}'\n                }\n              }, {\n                title: {\n                  text: 'Duration',\n                  rotation: 45,\n                  y: -15,\n                  x: -15\n                },\n                labels: {\n                  formatter: function formatter() {\n                    var point = this.point,\n                        days = 1000 * 60 * 60 * 24,\n                        number = (point.end - point.start) / days;\n                    return Math.round(number * 100) / 100;\n                  }\n                }\n              }]\n            }\n          },\n          series: [{\n            name: 'Project 1',\n            data: [{\n              id: 'Start prototype',\n              name: 'Start prototype',\n              start: Date.UTC(2014, 10, 18),\n              end: Date.UTC(2014, 10, 25),\n              // completed: 0.25,\n              assignee: 'Richards',\n              color: '#3a5d96',\n              y: 0\n            }, {\n              name: 'Test prototype',\n              start: Date.UTC(2014, 10, 27),\n              end: Date.UTC(2014, 10, 29),\n              assignee: 'Richards',\n              parent: 'Start prototype',\n              color: '#3a5d96',\n              y: 1\n            }, {\n              name: 'Develop',\n              start: Date.UTC(2014, 10, 20),\n              end: Date.UTC(2014, 10, 25),\n              assignee: 'Richards',\n              color: '#497248',\n              y: 2\n            }, {\n              name: 'Run acceptance tests',\n              start: Date.UTC(2014, 10, 23),\n              end: Date.UTC(2014, 10, 26),\n              assignee: 'Richards',\n              color: '#497248',\n              y: 3\n            }]\n          }],\n          plotOptions: {\n            series: {\n              animation: false,\n              // Do not animate dependency connectors\n              dragDrop: {\n                draggableX: true,\n                draggableY: true,\n                dragMinY: 0,\n                dragMaxY: 2,\n                dragPrecisionX: day // Snap to eight hours\n\n              },\n              dataLabels: {\n                enabled: true,\n                format: '{point.name}',\n                style: {\n                  cursor: 'default',\n                  pointerEvents: 'none'\n                }\n              }\n            }\n          }\n        }, _defineProperty(_ref, \"title\", {\n          text: '프로젝트 명'\n        }), _defineProperty(_ref, \"navigator\", {\n          enabled: true,\n          liveRedraw: true,\n          series: {\n            type: 'gantt',\n            pointPlacement: 0.5,\n            pointPadding: 0.25\n          }\n        }), _defineProperty(_ref, \"rangeSelector\", {\n          //1개월, 3개월, 6개월, 1년 바꿀수 있음\n          enabled: true,\n          selected: 0,\n          inputDateFormat: '%Y-%m-%d',\n          buttons: [{\n            type: 'month',\n            count: 1,\n            text: '1m',\n            title: '1개월 보기'\n          }, {\n            type: 'month',\n            count: 3,\n            text: '3m',\n            title: '3개월 보기'\n          }, {\n            type: 'month',\n            count: 6,\n            text: '6m',\n            title: '6개월 보기'\n          }, {\n            type: 'ytd',\n            text: 'YTD',\n            title: '연초부터 현재까지'\n          }, {\n            type: 'year',\n            count: 1,\n            text: '1y',\n            title: '1년 보기'\n          }, {\n            type: 'all',\n            text: 'All',\n            title: '전체보기'\n          }]\n        }), _ref),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Widget, {\n        title: /*#__PURE__*/React.createElement(\"h5\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 22\n          }\n        }, \"Highcharts \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fw-semi-bold\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 37\n          }\n        }, \"Line Chart\")),\n        close: true,\n        collapse: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(HighchartsReact, {\n        highcharts: Highcharts,\n        constructorType: \"ganttChart\",\n        options: {\n          chart: {\n            spacingLeft: 1\n          },\n          title: {\n            text: 'Interactive Gantt Chart'\n          },\n          subtitle: {\n            text: 'Drag and drop points to edit'\n          },\n          plotOptions: {\n            series: {\n              animation: false,\n              // Do not animate dependency connectors\n              dragDrop: {\n                draggableX: true,\n                draggableY: true,\n                dragMinY: 0,\n                dragMaxY: 2,\n                dragPrecisionX: day // Snap to eight hours\n\n              },\n              dataLabels: {\n                enabled: true,\n                format: '{point.nick}',\n                style: {\n                  cursor: 'default',\n                  pointerEvents: 'none'\n                }\n              }\n            }\n          },\n          // yAxis: {\n          //   type: 'category',\n          //   categories: ['Tech', 'Marketing', 'Sales'],\n          //   min: 0,\n          //   max: 2\n          // },\n          xAxis: {\n            currentDateIndicator: true\n          },\n          tooltip: {\n            xDateFormat: '%a %b %d'\n          },\n          series: [{\n            name: 'Project 1',\n            data: [{\n              start: today + 2 * day,\n              end: today + day * 5,\n              name: 'Prototype',\n              id: 'prototype',\n              nick: 'hi',\n              y: 0\n            }, {\n              start: today + day * 7,\n              end: today + day * 11,\n              name: 'Testing',\n              y: 0\n            }, {\n              start: today + day * 5,\n              end: today + day * 8,\n              name: 'Product pages',\n              nick: 'hello',\n              y: 1\n            }, {\n              start: today + day * 9,\n              end: today + day * 10,\n              name: 'Newsletter',\n              y: 1\n            }, {\n              start: today + day * 9,\n              end: today + day * 11,\n              name: 'Licensing',\n              id: 'testing',\n              y: 2\n            }, {\n              start: today + day * 11.5,\n              end: today + day * 12.5,\n              name: 'Publish',\n              parent: 'testing',\n              y: 2\n            }]\n          }],\n          // title: {\n          //   text: 'Gantt Vertical Axis.grid'\n          // },\n          // yAxis: {\n          //   // type: 'category',\n          //   grid: {      \n          //     borderColor: '#3a5d96',      \n          //     columns: [{\n          //       title: {\n          //         text: 'Tasks',\n          //         rotation: 45,\n          //         y: -15,\n          //         x: -15\n          //       }\n          //     }, {\n          //       title: {\n          //         text: 'Assignee',\n          //         rotation: 45,\n          //         y: -15,\n          //         x: -15\n          //       },\n          //       labels: {\n          //         format: '{point.assignee}'\n          //       }\n          //     }, {\n          //       title: {\n          //         text: 'Duration',\n          //         rotation: 45,\n          //         y: -15,\n          //         x: -15\n          //       },\n          //       labels: {\n          //         formatter: function() {\n          //           var point = this.point,\n          //             days = (1000 * 60 * 60 * 24),\n          //             number = (point.end - point.start) / days;\n          //           return Math.round(number * 100) / 100;\n          //         }\n          //       }\n          //     }]\n          //   }\n          // },\n          // series: [{\n          //   name: 'Project 1',\n          //   data: [{\n          //     id: 'Start prototype',\n          //     name: 'Start prototype',\n          //     start: Date.UTC(2014, 10, 18),\n          //     end: Date.UTC(2014, 10, 25),\n          //     completed: 0.25,\n          //     assignee: 'Richards',\n          //     y: 0\n          //   }, {\n          //     name: 'Test prototype',\n          //     start: Date.UTC(2014, 10, 27),\n          //     end: Date.UTC(2014, 10, 29),\n          //     assignee: 'Richards',\n          //     parent: 'Start prototype',\n          //     y: 1\n          //   }, {\n          //     name: 'Develop',\n          //     start: Date.UTC(2014, 10, 20),\n          //     end: Date.UTC(2014, 10, 25),\n          //     assignee: 'Richards',\n          //     y: 2\n          //   }, {\n          //     name: 'Run acceptance tests',\n          //     start: Date.UTC(2014, 10, 23),\n          //     end: Date.UTC(2014, 10, 26),\n          //     assignee: 'Richards',\n          //     y: 3\n          //   }]\n          // }]\n          // title: {\n          //   text: '프로젝트 명'\n          // },\n          navigator: {\n            enabled: true,\n            liveRedraw: true,\n            series: {\n              type: 'gantt',\n              pointPlacement: 0.5,\n              pointPadding: 0.25\n            }\n          },\n          rangeSelector: {\n            //1개월, 3개월, 6개월, 1년 바꿀수 있음\n            enabled: true,\n            selected: 0,\n            inputDateFormat: '%Y-%m-%d',\n            buttons: [{\n              type: 'month',\n              count: 1,\n              text: '1m',\n              title: '1개월 보기'\n            }, {\n              type: 'month',\n              count: 3,\n              text: '3m',\n              title: '3개월 보기'\n            }, {\n              type: 'month',\n              count: 6,\n              text: '6m',\n              title: '6개월 보기'\n            }, {\n              type: 'ytd',\n              text: 'YTD',\n              title: '연초부터 현재까지'\n            }, {\n              type: 'year',\n              count: 1,\n              text: '1y',\n              title: '1년 보기'\n            }, {\n              type: 'all',\n              text: 'All',\n              title: '전체보기'\n            }]\n          } // yAxis: {\n          //   title: {\n          //     text: '프로젝트'\n          //   }\n          // },\n          // series: [{\n          //   name: 'Project 1',\n          //   data: [{\n          //     id: 's',\n          //     name: 'Start prototype',\n          //     start: Date.UTC(2021, 10, 18),\n          //     end: Date.UTC(2021, 10, 20)\n          //   }, {\n          //     id: 'b',\n          //     name: 'Develop',\n          //     start: Date.UTC(2021, 10, 20),\n          //     end: Date.UTC(2021, 10, 25),\n          //     dependency: 's'\n          //   }, {\n          //     id: 'a',\n          //     name: 'Run acceptance tests',\n          //     start: Date.UTC(2021, 10, 23),\n          //     end: Date.UTC(2021, 10, 26)\n          //   }, {\n          //     name: 'Test prototype',\n          //     start: Date.UTC(2021, 10, 27),\n          //     end: Date.UTC(2021, 10, 29),\n          //     dependency: ['a', 'b']\n          //   }]\n          //   }, {\n          //     name: 'Project 2',\n          //     data: [{\n          //     id: 'ss',\n          //     name: '대분류',\n          //     pointWidth: 0,\n          //   }, {\n          //     name: 'Requirements',\n          //     id: 'requirements',\n          //     parent: 'ss',\n          //     start: new Date(2021, 10, 19).getTime(),\n          //     end: new Date(2021, 10, 30).getTime(),\n          //   }, {\n          //     name: 'playing',\n          //     id: 'playing',\n          //     parent: 'ss',\n          //     start: new Date(2021, 11, 1).getTime(),\n          //     end: new Date(2021, 11, 10).getTime()\n          //   }, {\n          //     name: '레이어',\n          //     start: new Date(2021, 10, 20),\n          //     end: new Date(2021, 10, 25),\n          //   }, {\n          //     name: '아이콘',\n          //     start: new Date(2021, 10, 23),\n          //     end: new Date(2021, 10, 26)\n          //   }, {\n          //     name: '애니메이션',\n          //     start: new Date(2021, 10, 27),\n          //     end: new Date(2021, 10, 29),\n          //   }]\n          // }]\n\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return HighChartsPage;\n}(PureComponent);\n\nexport default HighChartsPage;","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/pages/charts/highcharts/HighCharts.js"],"names":["React","PureComponent","Row","Col","Highcharts","HighchartsReact","variablePie","exporting","exportData","accessibility","highcharts3d","sunburst","vector","wordcloud","highchartsGantt","Widget","chartsData","today","Date","day","map","dateFormat","series","cars","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","getTime","model","current","deals","rentedTo","from","to","car","i","data","deal","id","start","end","parent","y","name","HighChartsPage","cd","state","title","text","yAxis","type","grid","borderColor","columns","rotation","x","labels","format","formatter","point","days","number","Math","round","UTC","assignee","color","plotOptions","animation","dragDrop","draggableX","draggableY","dragMinY","dragMaxY","dragPrecisionX","dataLabels","enabled","style","cursor","pointerEvents","liveRedraw","pointPlacement","pointPadding","selected","inputDateFormat","buttons","count","chart","spacingLeft","subtitle","xAxis","currentDateIndicator","tooltip","xDateFormat","nick","navigator","rangeSelector"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport variablePie from 'highcharts/modules/variable-pie';\r\nimport exporting from 'highcharts/modules/exporting';\r\nimport exportData from 'highcharts/modules/export-data';\r\nimport accessibility from 'highcharts/modules/accessibility';\r\nimport highcharts3d from 'highcharts/highcharts-3d';\r\nimport sunburst from 'highcharts/modules/sunburst';\r\nimport vector from 'highcharts/modules/vector';\r\nimport wordcloud from 'highcharts/modules/wordcloud';\r\n// import gantt from 'highcharts/modules/gantt';\r\nimport highchartsGantt from \"highcharts/modules/gantt\";\r\nimport Widget from '../../../components/Widget';\r\nimport chartsData from './mock';\r\n\r\nvariablePie(Highcharts);\r\nexporting(Highcharts);\r\nexportData(Highcharts);\r\naccessibility(Highcharts);\r\nhighcharts3d(Highcharts);\r\nsunburst(Highcharts);\r\nvector(Highcharts);\r\nwordcloud(Highcharts);\r\n// gantt(Highcharts);\r\nhighchartsGantt(Highcharts);\r\n\r\nvar today = new Date(),\r\n  day = 1000 * 60 * 60 * 24,\r\n  map = Highcharts.map,\r\n  dateFormat = Highcharts.dateFormat,\r\n  series,\r\n  cars;\r\n\r\n// Set to 00:00:00:000 today\r\ntoday.setUTCHours(0);\r\ntoday.setUTCMinutes(0);\r\ntoday.setUTCSeconds(0);\r\ntoday.setUTCMilliseconds(0);\r\ntoday = today.getTime();\r\n\r\ncars = [{\r\n  model: 'Nissan Leaf',\r\n  current: 0,\r\n  deals: [{\r\n    rentedTo: 'Lisa Star',\r\n    from: today - 1 * day,\r\n    to: today + 2 * day\r\n  }, {\r\n    rentedTo: 'Shane Long',\r\n    from: today - 3 * day,\r\n    to: today - 2 * day\r\n  }, {\r\n    rentedTo: 'Jack Coleman',\r\n    from: today + 5 * day,\r\n    to: today + 6 * day\r\n  }]\r\n}, {\r\n  model: 'Jaguar E-type',\r\n  current: 0,\r\n  deals: [{\r\n    rentedTo: 'Martin Hammond',\r\n    from: today - 2 * day,\r\n    to: today + 1 * day\r\n  }, {\r\n    rentedTo: 'Linda Jackson',\r\n    from: today - 2 * day,\r\n    to: today + 1 * day\r\n  }, {\r\n    rentedTo: 'Robert Sailor',\r\n    from: today + 2 * day,\r\n    to: today + 6 * day\r\n  }]\r\n}, {\r\n  model: 'Volvo V60',\r\n  current: 0,\r\n  deals: [{\r\n    rentedTo: 'Mona Ricci',\r\n    from: today + 0 * day,\r\n    to: today + 3 * day\r\n  }, {\r\n    rentedTo: 'Jane Dockerman',\r\n    from: today + 3 * day,\r\n    to: today + 4 * day\r\n  }, {\r\n    rentedTo: 'Bob Shurro',\r\n    from: today + 6 * day,\r\n    to: today + 8 * day\r\n  }]\r\n}, {\r\n  model: 'Volkswagen Golf',\r\n  current: 0,\r\n  deals: [{\r\n    rentedTo: 'Hailie Marshall',\r\n    from: today - 1 * day,\r\n    to: today + 1 * day\r\n  }, {\r\n    rentedTo: 'Morgan Nicholson',\r\n    from: today - 3 * day,\r\n    to: today - 2 * day\r\n  }, {\r\n    rentedTo: 'William Harriet',\r\n    from: today + 2 * day,\r\n    to: today + 3 * day\r\n  }]\r\n}, {\r\n  model: 'Peugeot 208',\r\n  current: 0,\r\n  deals: [{\r\n    rentedTo: 'Harry Peterson',\r\n    from: today - 1 * day,\r\n    to: today + 2 * day\r\n  }, {\r\n    rentedTo: 'Emma Wilson',\r\n    from: today + 3 * day,\r\n    to: today + 4 * day\r\n  }, {\r\n    rentedTo: 'Ron Donald',\r\n    from: today + 5 * day,\r\n    to: today + 6 * day\r\n  }]\r\n}];\r\n\r\n// Parse car data into series.\r\nseries = cars.map(function (car, i) {\r\n  var data = car.deals.map(function (deal) {\r\n    return {\r\n      id: 'deal-' + i,\r\n      rentedTo: deal.rentedTo,\r\n      start: deal.from,\r\n      end: deal.to,\r\n      // color: '#' + Highcharts.getOptions().colors[i],\r\n      parent: 'car-' + 0,\r\n      y: i\r\n    };\r\n  });\r\n  return {\r\n    name: car.model,\r\n    data: data,\r\n    current: car.deals[car.current]\r\n  };\r\n});\r\n\r\nclass HighChartsPage extends PureComponent {\r\n\r\n  state = {\r\n    cd: chartsData,\r\n  }\r\n\r\n  render() {\r\n\r\n    const { cd } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1 className=\"page-title\">Visual - <span className=\"fw-semi-bold\">Highcharts</span></h1>\r\n        <p>For more information please read full <a href=\"https://github.com/highcharts/highcharts-vue\">documentation</a></p>\r\n        <Row>\r\n          <Col lg={12} xs={12}>\r\n          <Widget\r\n              title={<h5>Highcharts <span className=\"fw-semi-bold\">Line Chart</span></h5>}\r\n              close collapse\r\n            >\r\n              <HighchartsReact\r\n              highcharts={Highcharts}\r\n              constructorType={\"ganttChart\"}\r\n              options={{\r\n                  title: {\r\n                    text: 'Gantt Vertical Axis.grid'\r\n                  },\r\n                \r\n                  yAxis: {\r\n                    type: 'category',\r\n                    grid: {      \r\n                      borderColor: '#3a5d96',      \r\n                      columns: [{\r\n                        title: {\r\n                          text: 'Tasks',\r\n                          rotation: 45,\r\n                          y: -15,\r\n                          x: -15,\r\n                        },\r\n                        labels: {\r\n                          format: '{point.assignee}'\r\n                        }\r\n                      }, {\r\n                        title: {\r\n                          text: 'Assignee',\r\n                          rotation: 45,\r\n                          y: -15,\r\n                          x: -15\r\n                        },\r\n                        labels: {\r\n                          format: '{point.assignee}'\r\n                        }\r\n                      }, {\r\n                        title: {\r\n                          text: 'Duration',\r\n                          rotation: 45,\r\n                          y: -15,\r\n                          x: -15\r\n                        },\r\n                        labels: {\r\n                          formatter: function() {\r\n                            var point = this.point,\r\n                              days = (1000 * 60 * 60 * 24),\r\n                              number = (point.end - point.start) / days;\r\n                            return Math.round(number * 100) / 100;\r\n                          }\r\n                        }\r\n                      }]\r\n                    }\r\n                  },\r\n                  series: [{\r\n                    name: 'Project 1',\r\n                    data: [{\r\n                      id: 'Start prototype',\r\n                      name: 'Start prototype',\r\n                      start: Date.UTC(2014, 10, 18),\r\n                      end: Date.UTC(2014, 10, 25),\r\n                      // completed: 0.25,\r\n                      assignee: 'Richards',\r\n                      color: '#3a5d96',\r\n                      y: 0\r\n                    }, {\r\n                      name: 'Test prototype',\r\n                      start: Date.UTC(2014, 10, 27),\r\n                      end: Date.UTC(2014, 10, 29),\r\n                      assignee: 'Richards',\r\n                      parent: 'Start prototype',\r\n                      color: '#3a5d96',\r\n                      y: 1\r\n                    }, {\r\n                      name: 'Develop',\r\n                      start: Date.UTC(2014, 10, 20),\r\n                      end: Date.UTC(2014, 10, 25),\r\n                      assignee: 'Richards',\r\n                      color: '#497248',\r\n                      y: 2\r\n                    }, {\r\n                      name: 'Run acceptance tests',\r\n                      start: Date.UTC(2014, 10, 23),\r\n                      end: Date.UTC(2014, 10, 26),\r\n                      assignee: 'Richards',\r\n                      color: '#497248',\r\n                      y: 3\r\n                    }]\r\n                  },\r\n                ],\r\n                  plotOptions: {\r\n                    series: {\r\n                      animation: false, // Do not animate dependency connectors\r\n                      dragDrop: {\r\n                        draggableX: true,\r\n                        draggableY: true,\r\n                        dragMinY: 0,\r\n                        dragMaxY: 2,\r\n                        dragPrecisionX: day // Snap to eight hours\r\n                      },\r\n                      dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.name}',\r\n                        style: {\r\n                          cursor: 'default',\r\n                          pointerEvents: 'none'\r\n                        }\r\n                      },\r\n                    }\r\n                  },\r\n                title: {\r\n                  text: '프로젝트 명'\r\n                },\r\n                navigator: {\r\n                  enabled: true,\r\n                  liveRedraw: true,\r\n                  series: {\r\n                    type: 'gantt',\r\n                    pointPlacement: 0.5,\r\n                    pointPadding: 0.25\r\n                  },\r\n                },\r\n                rangeSelector: { //1개월, 3개월, 6개월, 1년 바꿀수 있음\r\n                  enabled: true,\r\n                  selected: 0,\r\n                  inputDateFormat: '%Y-%m-%d',\r\n                  buttons: [{\r\n                    type: 'month',\r\n                    count: 1,\r\n                    text: '1m',\r\n                    title: '1개월 보기'\r\n                  }, {\r\n                    type: 'month',\r\n                    count: 3,\r\n                    text: '3m',\r\n                    title: '3개월 보기'\r\n                  }, {\r\n                    type: 'month',\r\n                    count: 6,\r\n                    text: '6m',\r\n                    title: '6개월 보기'\r\n                  }, {\r\n                    type: 'ytd',\r\n                    text: 'YTD',\r\n                    title: '연초부터 현재까지'\r\n                  }, {\r\n                    type: 'year',\r\n                    count: 1,\r\n                    text: '1y',\r\n                    title: '1년 보기'\r\n                  }, {\r\n                    type: 'all',\r\n                    text: 'All',\r\n                    title: '전체보기'\r\n                  }]\r\n                },\r\n              }} />\r\n            </Widget>\r\n            <Widget\r\n              title={<h5>Highcharts <span className=\"fw-semi-bold\">Line Chart</span></h5>}\r\n              close collapse\r\n            >\r\n              <HighchartsReact\r\n              highcharts={Highcharts}\r\n              constructorType={\"ganttChart\"}\r\n              options={{\r\n                  chart: {\r\n                    spacingLeft: 1\r\n                  },\r\n                \r\n                  title: {\r\n                    text: 'Interactive Gantt Chart'\r\n                  },\r\n                \r\n                  subtitle: {\r\n                    text: 'Drag and drop points to edit'\r\n                  },\r\n                \r\n                  plotOptions: {\r\n                    series: {\r\n                      animation: false, // Do not animate dependency connectors\r\n                      dragDrop: {\r\n                        draggableX: true,\r\n                        draggableY: true,\r\n                        dragMinY: 0,\r\n                        dragMaxY: 2,\r\n                        dragPrecisionX: day // Snap to eight hours\r\n                      },\r\n                      dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.nick}',\r\n                        style: {\r\n                          cursor: 'default',\r\n                          pointerEvents: 'none'\r\n                        }\r\n                      },\r\n                    }\r\n                  },\r\n                \r\n                  // yAxis: {\r\n                  //   type: 'category',\r\n                  //   categories: ['Tech', 'Marketing', 'Sales'],\r\n                  //   min: 0,\r\n                  //   max: 2\r\n                  // },\r\n                \r\n                  xAxis: {\r\n                    currentDateIndicator: true\r\n                  },\r\n                \r\n                  tooltip: {\r\n                    xDateFormat: '%a %b %d'\r\n                  },\r\n                \r\n                  series: [{\r\n                    name: 'Project 1',\r\n                    data: [{\r\n                      start: today + 2 * day,\r\n                      end: today + day * 5,\r\n                      name: 'Prototype',\r\n                      id: 'prototype',\r\n                      nick: 'hi',\r\n                      y: 0\r\n                    }, {\r\n                      start: today + day * 7,\r\n                      end: today + day * 11,\r\n                      name: 'Testing',\r\n                      y: 0\r\n                    }, {\r\n                      start: today + day * 5,\r\n                      end: today + day * 8,\r\n                      name: 'Product pages',\r\n                      nick: 'hello',\r\n                      y: 1\r\n                    }, {\r\n                      start: today + day * 9,\r\n                      end: today + day * 10,\r\n                      name: 'Newsletter',\r\n                      y: 1\r\n                    }, {\r\n                      start: today + day * 9,\r\n                      end: today + day * 11,\r\n                      name: 'Licensing',\r\n                      id: 'testing',\r\n                      y: 2\r\n                    }, {\r\n                      start: today + day * 11.5,\r\n                      end: today + day * 12.5,\r\n                      name: 'Publish',\r\n                      parent: 'testing',\r\n                      y: 2\r\n                    }]\r\n                  }],\r\n                  // title: {\r\n                  //   text: 'Gantt Vertical Axis.grid'\r\n                  // },\r\n                \r\n                  // yAxis: {\r\n                  //   // type: 'category',\r\n                  //   grid: {      \r\n                  //     borderColor: '#3a5d96',      \r\n                  //     columns: [{\r\n                  //       title: {\r\n                  //         text: 'Tasks',\r\n                  //         rotation: 45,\r\n                  //         y: -15,\r\n                  //         x: -15\r\n                  //       }\r\n                  //     }, {\r\n                  //       title: {\r\n                  //         text: 'Assignee',\r\n                  //         rotation: 45,\r\n                  //         y: -15,\r\n                  //         x: -15\r\n                  //       },\r\n                  //       labels: {\r\n                  //         format: '{point.assignee}'\r\n                  //       }\r\n                  //     }, {\r\n                  //       title: {\r\n                  //         text: 'Duration',\r\n                  //         rotation: 45,\r\n                  //         y: -15,\r\n                  //         x: -15\r\n                  //       },\r\n                  //       labels: {\r\n                  //         formatter: function() {\r\n                  //           var point = this.point,\r\n                  //             days = (1000 * 60 * 60 * 24),\r\n                  //             number = (point.end - point.start) / days;\r\n                  //           return Math.round(number * 100) / 100;\r\n                  //         }\r\n                  //       }\r\n                  //     }]\r\n                  //   }\r\n                  // },\r\n                  // series: [{\r\n                  //   name: 'Project 1',\r\n                  //   data: [{\r\n                  //     id: 'Start prototype',\r\n                  //     name: 'Start prototype',\r\n                  //     start: Date.UTC(2014, 10, 18),\r\n                  //     end: Date.UTC(2014, 10, 25),\r\n                  //     completed: 0.25,\r\n                  //     assignee: 'Richards',\r\n                  //     y: 0\r\n                  //   }, {\r\n                  //     name: 'Test prototype',\r\n                  //     start: Date.UTC(2014, 10, 27),\r\n                  //     end: Date.UTC(2014, 10, 29),\r\n                  //     assignee: 'Richards',\r\n                  //     parent: 'Start prototype',\r\n                  //     y: 1\r\n                  //   }, {\r\n                  //     name: 'Develop',\r\n                  //     start: Date.UTC(2014, 10, 20),\r\n                  //     end: Date.UTC(2014, 10, 25),\r\n                  //     assignee: 'Richards',\r\n                  //     y: 2\r\n                  //   }, {\r\n                  //     name: 'Run acceptance tests',\r\n                  //     start: Date.UTC(2014, 10, 23),\r\n                  //     end: Date.UTC(2014, 10, 26),\r\n                  //     assignee: 'Richards',\r\n                  //     y: 3\r\n                  //   }]\r\n                  // }]\r\n\r\n  \r\n                // title: {\r\n                //   text: '프로젝트 명'\r\n                // },\r\n                navigator: {\r\n                  enabled: true,\r\n                  liveRedraw: true,\r\n                  series: {\r\n                    type: 'gantt',\r\n                    pointPlacement: 0.5,\r\n                    pointPadding: 0.25\r\n                  },\r\n                },\r\n                rangeSelector: { //1개월, 3개월, 6개월, 1년 바꿀수 있음\r\n                  enabled: true,\r\n                  selected: 0,\r\n                  inputDateFormat: '%Y-%m-%d',\r\n                  buttons: [{\r\n                    type: 'month',\r\n                    count: 1,\r\n                    text: '1m',\r\n                    title: '1개월 보기'\r\n                  }, {\r\n                    type: 'month',\r\n                    count: 3,\r\n                    text: '3m',\r\n                    title: '3개월 보기'\r\n                  }, {\r\n                    type: 'month',\r\n                    count: 6,\r\n                    text: '6m',\r\n                    title: '6개월 보기'\r\n                  }, {\r\n                    type: 'ytd',\r\n                    text: 'YTD',\r\n                    title: '연초부터 현재까지'\r\n                  }, {\r\n                    type: 'year',\r\n                    count: 1,\r\n                    text: '1y',\r\n                    title: '1년 보기'\r\n                  }, {\r\n                    type: 'all',\r\n                    text: 'All',\r\n                    title: '전체보기'\r\n                  }]\r\n                },\r\n                // yAxis: {\r\n                //   title: {\r\n                //     text: '프로젝트'\r\n                //   }\r\n                // },\r\n                // series: [{\r\n                //   name: 'Project 1',\r\n                //   data: [{\r\n                //     id: 's',\r\n                //     name: 'Start prototype',\r\n                //     start: Date.UTC(2021, 10, 18),\r\n                //     end: Date.UTC(2021, 10, 20)\r\n                //   }, {\r\n                //     id: 'b',\r\n                //     name: 'Develop',\r\n                //     start: Date.UTC(2021, 10, 20),\r\n                //     end: Date.UTC(2021, 10, 25),\r\n                //     dependency: 's'\r\n                //   }, {\r\n                //     id: 'a',\r\n                //     name: 'Run acceptance tests',\r\n                //     start: Date.UTC(2021, 10, 23),\r\n                //     end: Date.UTC(2021, 10, 26)\r\n                //   }, {\r\n                //     name: 'Test prototype',\r\n                //     start: Date.UTC(2021, 10, 27),\r\n                //     end: Date.UTC(2021, 10, 29),\r\n                //     dependency: ['a', 'b']\r\n                //   }]\r\n                //   }, {\r\n                //     name: 'Project 2',\r\n                //     data: [{\r\n                //     id: 'ss',\r\n                //     name: '대분류',\r\n                //     pointWidth: 0,\r\n                //   }, {\r\n                //     name: 'Requirements',\r\n                //     id: 'requirements',\r\n                //     parent: 'ss',\r\n                //     start: new Date(2021, 10, 19).getTime(),\r\n                //     end: new Date(2021, 10, 30).getTime(),\r\n                //   }, {\r\n                //     name: 'playing',\r\n                //     id: 'playing',\r\n                //     parent: 'ss',\r\n                //     start: new Date(2021, 11, 1).getTime(),\r\n                //     end: new Date(2021, 11, 10).getTime()\r\n                //   }, {\r\n                //     name: '레이어',\r\n                //     start: new Date(2021, 10, 20),\r\n                //     end: new Date(2021, 10, 25),\r\n                //   }, {\r\n                //     name: '아이콘',\r\n                //     start: new Date(2021, 10, 23),\r\n                //     end: new Date(2021, 10, 26)\r\n                //   }, {\r\n                //     name: '애니메이션',\r\n                //     start: new Date(2021, 10, 27),\r\n                //     end: new Date(2021, 10, 29),\r\n                //   }]\r\n                // }]\r\n              }} />\r\n            </Widget>\r\n\r\n          </Col>\r\n          {/* <Col lg={6} xs={12}>\r\n            <Widget\r\n              title={<h5>Highcharts <span className=\"fw-semi-bold\">Pie Chart</span></h5>}\r\n              close collapse\r\n            >\r\n              <HighchartsReact highcharts={Highcharts} options={cd.pie} />\r\n            </Widget>\r\n          </Col>\r\n          <Col lg={6} xs={12}>\r\n            <Widget\r\n              title={<h5>Highcharts <span className=\"fw-semi-bold\">Column 3D Chart</span></h5>}\r\n              close collapse\r\n            >\r\n              <HighchartsReact highcharts={Highcharts} options={cd.column3D} />\r\n            </Widget>\r\n          </Col> */}\r\n          {/* <Col lg={5} xs={12}>\r\n            <Row>\r\n              <Col lg={12} xs={12}>\r\n                <Widget\r\n                  title={<h5>Highcharts <span className=\"fw-semi-bold\">Vector Chart</span></h5>}\r\n                  close collapse\r\n                  >\r\n                    <HighchartsReact highcharts={Highcharts} options={cd.vector} />\r\n                  </Widget>\r\n              </Col>\r\n              <Col lg={12} xs={12}>\r\n                <Widget\r\n                  title={<h5>Highcharts <span className=\"fw-semi-bold\">Sunburst Chart</span></h5>}\r\n                  close collapse\r\n                  >\r\n                    <HighchartsReact highcharts={Highcharts} options={cd.wordCloud} />\r\n                </Widget>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col lg={7} xs={12}>\r\n            <Widget\r\n              title={<h5>Highcharts <span className=\"fw-semi-bold\">Sunburst Chart</span></h5>}\r\n              close collapse\r\n              >\r\n                <HighchartsReact highcharts={Highcharts} options={cd.sunburst} />\r\n            </Widget>\r\n          </Col> */}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HighChartsPage;\r\n"]},"metadata":{},"sourceType":"module"}