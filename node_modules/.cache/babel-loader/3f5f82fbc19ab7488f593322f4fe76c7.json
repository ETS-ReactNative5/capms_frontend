{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\src\\\\pages\\\\organizationG\\\\organizationG.js\";\nimport React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport Form from \"reactstrap/lib/Form\";\nimport Widget from \"../../components/Widget/Widget\";\nimport styles from \"./organization.module.scss\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\n\nvar organizationG = /*#__PURE__*/function (_React$Component) {\n  _inherits(organizationG, _React$Component);\n\n  var _super = _createSuper(organizationG);\n\n  function organizationG(props) {\n    var _this;\n\n    _classCallCheck(this, organizationG);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      Gteam1: \"\",\n      Gteam2: \"\",\n      Gteam3: \"\",\n      Gteam4: \"\",\n      Gteam5: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(organizationG, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        status: true\n      });\n      this.findTeam1();\n      this.findTeam2();\n      this.InfraTest();\n      this.SWTest();\n      this.findIntern();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        status: false\n      });\n    }\n  }, {\n    key: \"findTeam1\",\n    value: function findTeam1() {\n      var _this2 = this;\n\n      axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/Gteam1\")).then(function (res) {\n        return res.data;\n      }).then(function (data) {\n        _this2.setState({\n          Gteam1: data\n        });\n      });\n    }\n  }, {\n    key: \"findTeam2\",\n    value: function findTeam2() {\n      var _this3 = this;\n\n      axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/Gteam2\")).then(function (res) {\n        return res.data;\n      }).then(function (data) {\n        _this3.setState({\n          Gteam2: data\n        });\n      });\n    }\n  }, {\n    key: \"InfraTest\",\n    value: function InfraTest() {\n      var _this4 = this;\n\n      axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/Gteam3\")).then(function (res) {\n        return res.data;\n      }).then(function (data) {\n        _this4.setState({\n          Gteam3: data\n        });\n      });\n    }\n  }, {\n    key: \"SWTest\",\n    value: function SWTest() {\n      var _this5 = this;\n\n      axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/Gteam4\")).then(function (res) {\n        return res.data;\n      }).then(function (data) {\n        _this5.setState({\n          Gteam4: data\n        });\n      });\n    }\n  }, {\n    key: \"findIntern\",\n    value: function findIntern() {\n      var _this6 = this;\n\n      axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/Gteam5\")).then(function (res) {\n        return res.data;\n      }).then(function (data) {\n        _this6.setState({\n          Gteam5: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          close = _this$props.close;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pricingTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"pricingTable-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, \"\\uC778\\uD504\\uB77C \\uC2DC\\uC2A4\\uD15C\\uC2E4\"), /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"pricingTable-subtitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, \"\\uC815\\uC7AC\\uC6A9 \\uC2E4\\uC7A5\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pricingTable-firstTable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"pricingTable-firstTable_table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"pricingTable-firstTable_table__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, \"\\uC548\\uC804\\uC778\\uD504\\uB77C\\uAC80\\uC99D1\\uD300\"), this.state.Gteam1 ? this.state.Gteam1.map(function (c) {\n        if (c.직위 === '책임' && c.이름 === '') return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"pricingTable-firstTable_table__pricing\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 73\n          }\n        }, c.이름), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 92\n          }\n        }, \"\\uD300\\uC7A5\")) // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pricingTable-firstTable_table__options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, this.state.Gteam1 ? this.state.Gteam1.map(function (c) {\n        if (c.직위 === '수석' || c.직위 === '책임') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_first\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", this.state.Gteam1 ? this.state.Gteam1.map(function (c) {\n        if (c.직위 === '선임') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_second\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", this.state.Gteam1 ? this.state.Gteam1.map(function (c) {\n        if (c.직위 === '전임') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_third\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"pricingTable-firstTable_table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"pricingTable-firstTable_table__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }, \"\\uC548\\uC804\\uC778\\uD504\\uB77C\\uAC80\\uC99D2\\uD300\"), this.state.Gteam2 ? this.state.Gteam2.map(function (c) {\n        if (c.직위 === '책임' && c.이름 === '이은형') return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"pricingTable-firstTable_table__pricing\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 73\n          }\n        }, c.이름), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 92\n          }\n        }, \"\\uD300\\uC7A5\")) // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pricingTable-firstTable_table__options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, this.state.Gteam2 ? this.state.Gteam2.map(function (c) {\n        if (c.직위 === '책임' || c.직위 === '수석') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_first\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", this.state.Gteam2 ? this.state.Gteam2.map(function (c) {\n        if (c.직위 === '선임') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_second\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", this.state.Gteam2 ? this.state.Gteam2.map(function (c) {\n        if (c.직위 === '전임') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_third\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"pricingTable-firstTable_table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"pricingTable-firstTable_table__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, \"\\uC735\\uD569\\uC778\\uD504\\uB77C\\uAC80\\uC99D\\uD300\"), this.state.Gteam3 ? this.state.Gteam3.map(function (c) {\n        if (c.직위 === '수석') return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"pricingTable-firstTable_table__pricing\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 73\n          }\n        }, c.이름), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 92\n          }\n        }, \"\\uD300\\uC7A5\")) // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pricingTable-firstTable_table__options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, this.state.Gteam3 ? this.state.Gteam3.map(function (c) {\n        if (c.직위 === '책임' || c.직위 === '수석') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_first\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", this.state.Gteam3 ? this.state.Gteam3.map(function (c) {\n        if (c.직위 === '선임') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_second\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", this.state.Gteam3 ? this.state.Gteam3.map(function (c) {\n        if (c.직위 === '전임') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_third\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"pricingTable-firstTable_table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"pricingTable-firstTable_table__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, \"SW\\uACF5\\uC778\\uC2DC\\uD5D8\\uD300\"), this.state.Gteam4 ? this.state.Gteam4.map(function (c) {\n        if (c.직위 === '수석') return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"pricingTable-firstTable_table__pricing\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 73\n          }\n        }, c.이름), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 92\n          }\n        }, \"\\uD300\\uC7A5\")) // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pricingTable-firstTable_table__options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, this.state.Gteam4 ? this.state.Gteam4.map(function (c) {\n        if (c.직위 === '책임' || c.직위 === '수석') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_first\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", this.state.Gteam4 ? this.state.Gteam4.map(function (c) {\n        if (c.직위 === '선임') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_second\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\", this.state.Gteam4 ? this.state.Gteam4.map(function (c) {\n        if (c.직위 === '전임') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_third\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.직위, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"pricingTable-firstTable_table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"pricingTable-firstTable_table__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }, \"\\uC778\\uD134\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"pricingTable-firstTable_table__options\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }\n      }, this.state.Gteam5 ? this.state.Gteam5.map(function (c) {\n        if (c.직위 === '인턴') return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"li_last\",\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }\n        }, c.이름, \"(\", c.그룹, \")\") // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\n        ;\n      }) : \"\"), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"pricingTable-firstTable_table__getstart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 16\n        }\n      }, \"\\uAD6C\\uC131\\uC6D0 \\uC0AD\\uC81C\"))));\n    }\n  }]);\n\n  return organizationG;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.register.isFetching,\n    errorMessage: state.register.errorMessage\n  };\n}\n\nexport default organizationG;","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/pages/organizationG/organizationG.js"],"names":["React","Row","Col","Form","Widget","styles","useState","useEffect","axios","PropTypes","organizationG","props","state","Gteam1","Gteam2","Gteam3","Gteam4","Gteam5","setState","status","findTeam1","findTeam2","InfraTest","SWTest","findIntern","get","process","env","REACT_APP_API_URL","then","res","data","isOpen","close","map","c","직위","이름","그룹","Component","mapStateToProps","isFetching","register","errorMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport Form from \"reactstrap/lib/Form\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport styles from \"./organization.module.scss\";\r\nimport { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass organizationG extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n     Gteam1: \"\", \r\n     Gteam2: \"\",\r\n     Gteam3: \"\", \r\n     Gteam4: \"\", \r\n     Gteam5: \"\", \r\n    };\r\n  }\r\n\r\n\r\n    componentDidMount(){\r\n      this.setState({ status: true });\r\n\r\n      this.findTeam1();\r\n      this.findTeam2();\r\n      this.InfraTest();\r\n      this.SWTest();\r\n      this.findIntern();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.setState({ status: false });\r\n    }\r\n\r\n    findTeam1() {\r\n       axios.get(`http://${process.env.REACT_APP_API_URL}/Gteam1`)\r\n       .then(res=>res.data)\r\n        .then((data)=>{\r\n          this.setState({Gteam1:data});\r\n    });\r\n  }\r\n\r\nfindTeam2() {\r\n    axios.get(`http://${process.env.REACT_APP_API_URL}/Gteam2`)\r\n    .then(res=>res.data)\r\n     .then((data)=>{\r\n       this.setState({Gteam2:data});\r\n });\r\n}\r\n\r\nInfraTest() {\r\n  axios.get(`http://${process.env.REACT_APP_API_URL}/Gteam3`)\r\n  .then(res=>res.data)\r\n   .then((data)=>{\r\n     this.setState({Gteam3:data});\r\n});\r\n}\r\n\r\nSWTest() {\r\n  axios.get(`http://${process.env.REACT_APP_API_URL}/Gteam4`)\r\n  .then(res=>res.data)\r\n   .then((data)=>{\r\n     this.setState({Gteam4:data});\r\n});\r\n}\r\n\r\nfindIntern() {\r\n  axios.get(`http://${process.env.REACT_APP_API_URL}/Gteam5`)\r\n  .then(res=>res.data)\r\n   .then((data)=>{\r\n     this.setState({Gteam5:data});\r\n});\r\n}\r\n\r\n\r\n\r\n\r\n   \r\n    \r\n    render() {\r\n      const { isOpen, close } = this.props;\r\n      return (\r\n        <div className=\"pricingTable\">\r\n        <h2 className=\"pricingTable-title\">인프라 시스템실</h2>\r\n        <h3 className=\"pricingTable-subtitle\">정재용 실장</h3>\r\n        \r\n        <ul className=\"pricingTable-firstTable\">\r\n          <li className=\"pricingTable-firstTable_table\">\r\n            <h1 className=\"pricingTable-firstTable_table__header\">안전인프라검증1팀</h1>\r\n            {this.state.Gteam1 ? this.state.Gteam1.map(c => {\r\n              if(c.직위 === '책임' && c.이름 === '')\r\n                return(\r\n                  <p className=\"pricingTable-firstTable_table__pricing\"><span>{c.이름}</span><span>팀장</span></p>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n            <ul className=\"pricingTable-firstTable_table__options\">\r\n            {this.state.Gteam1 ? this.state.Gteam1.map(c => {\r\n              if(c.직위 === '수석' || c.직위 === '책임')\r\n                return(\r\n                <li className=\"li_first\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n              {this.state.Gteam1 ? this.state.Gteam1.map(c => {\r\n              if(c.직위 === '선임')\r\n                return(\r\n                <li className=\"li_second\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n              {this.state.Gteam1 ? this.state.Gteam1.map(c => {\r\n              if(c.직위 === '전임')\r\n                return(\r\n                <li className=\"li_third\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n               </ul>\r\n\r\n               \r\n          </li>\r\n\r\n          <li className=\"pricingTable-firstTable_table\">\r\n            <h1 className=\"pricingTable-firstTable_table__header\">안전인프라검증2팀</h1>\r\n            {this.state.Gteam2 ? this.state.Gteam2.map(c => {\r\n              if(c.직위 === '책임' && c.이름 === '이은형')\r\n                return(\r\n                  <p className=\"pricingTable-firstTable_table__pricing\"><span>{c.이름}</span><span>팀장</span></p>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n            {/* <p className=\"pricingTable-firstTable_table__pricing\"><span>권민혁</span><span>팀장</span></p> */}\r\n            <ul className=\"pricingTable-firstTable_table__options\">\r\n            {this.state.Gteam2 ? this.state.Gteam2.map(c => {\r\n              if(c.직위 === '책임' || c.직위 === '수석')\r\n                return(\r\n                <li className=\"li_first\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n              {this.state.Gteam2 ? this.state.Gteam2.map(c => {\r\n              if(c.직위 === '선임')\r\n                return(\r\n                <li className=\"li_second\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n              {this.state.Gteam2 ? this.state.Gteam2.map(c => {\r\n              if(c.직위 === '전임')\r\n                return(\r\n                <li className=\"li_third\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n               </ul>\r\n\r\n               \r\n          </li>\r\n\r\n          <li className=\"pricingTable-firstTable_table\">\r\n            <h1 className=\"pricingTable-firstTable_table__header\">융합인프라검증팀</h1>\r\n            {this.state.Gteam3 ? this.state.Gteam3.map(c => {\r\n              if(c.직위 === '수석')\r\n                return(\r\n                  <p className=\"pricingTable-firstTable_table__pricing\"><span>{c.이름}</span><span>팀장</span></p>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n            {/* <p className=\"pricingTable-firstTable_table__pricing\"><span>권민혁</span><span>팀장</span></p> */}\r\n            <ul className=\"pricingTable-firstTable_table__options\">\r\n            {this.state.Gteam3 ? this.state.Gteam3.map(c => {\r\n              if(c.직위 === '책임' || c.직위 === '수석')\r\n                return(\r\n                <li className=\"li_first\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n              {this.state.Gteam3 ? this.state.Gteam3.map(c => {\r\n              if(c.직위 === '선임')\r\n                return(\r\n                <li className=\"li_second\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n              {this.state.Gteam3 ? this.state.Gteam3.map(c => {\r\n              if(c.직위 === '전임')\r\n                return(\r\n                <li className=\"li_third\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n               </ul>\r\n\r\n               \r\n          </li>\r\n\r\n          <li className=\"pricingTable-firstTable_table\">\r\n            <h1 className=\"pricingTable-firstTable_table__header\">SW공인시험팀</h1>\r\n            {this.state.Gteam4 ? this.state.Gteam4.map(c => {\r\n              if(c.직위 === '수석')\r\n                return(\r\n                  <p className=\"pricingTable-firstTable_table__pricing\"><span>{c.이름}</span><span>팀장</span></p>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n            {/* <p className=\"pricingTable-firstTable_table__pricing\"><span>권민혁</span><span>팀장</span></p> */}\r\n            <ul className=\"pricingTable-firstTable_table__options\">\r\n            {this.state.Gteam4 ? this.state.Gteam4.map(c => {\r\n              if(c.직위 === '책임' || c.직위 === '수석')\r\n                return(\r\n                <li className=\"li_first\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n              {this.state.Gteam4 ? this.state.Gteam4.map(c => {\r\n              if(c.직위 === '선임')\r\n                return(\r\n                <li className=\"li_second\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n              {this.state.Gteam4 ? this.state.Gteam4.map(c => {\r\n              if(c.직위 === '전임')\r\n                return(\r\n                <li className=\"li_third\">{c.이름}({c.직위})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n               </ul>\r\n\r\n               \r\n          </li>\r\n\r\n          \r\n\r\n       \r\n\r\n          <li className=\"pricingTable-firstTable_table\">\r\n            <h1 className=\"pricingTable-firstTable_table__header\">인턴</h1>\r\n            <ul className=\"pricingTable-firstTable_table__options\">\r\n            {this.state.Gteam5 ? this.state.Gteam5.map(c => {\r\n              if(c.직위 === '인턴')\r\n                return(\r\n                <li className=\"li_last\">{c.이름}({c.그룹})</li>\r\n                 // 위에 선언한 state equips 의 모든 값을 반복문으로 리턴해옴 if문을 해준 이유는 data 를 get 하는 속도보다 코드 읽는 속도가 더 빠르기 때문에 debug를 위해\r\n                  );\r\n              })  :\"\"}\r\n               </ul>\r\n               <button class=\"pricingTable-firstTable_table__getstart\">구성원 삭제</button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n\r\n  function mapStateToProps(state) {\r\n    return {\r\n      isFetching: state.register.isFetching,\r\n      errorMessage: state.register.errorMessage,\r\n    };\r\n  }\r\n  \r\n  export default organizationG;\r\n"]},"metadata":{},"sourceType":"module"}