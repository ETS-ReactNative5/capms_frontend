{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\src\\\\pages\\\\organization\\\\Organization.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useCookies } from \"react-cookie\";\nimport { checkPropTypes } from \"prop-types\";\n\nvar Organization = function Organization() {\n  var _useCookies = useCookies(['token']),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      cookies = _useCookies2[0],\n      removeCookie = _useCookies2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      teams = _useState2[0],\n      setTeams = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      members = _useState4[0],\n      setMembers = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      heads = _useState6[0],\n      setHeads = _useState6[1];\n\n  useEffect(function () {\n    return findAllInfo();\n  }, []);\n\n  var findAllInfo = function findAllInfo() {\n    axios.defaults.headers.common['Authorization'] = cookies.token;\n    axios.all([axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/members\")), axios.get(\"http://\".concat(process.env.REACT_APP_API_URL, \"/teams\"))]).then(axios.spread(function (res1, res2) {\n      setMembers(res1.data);\n      setHeads(res1.data.find(function (member) {\n        return member.직책 == '실장';\n      }).name);\n      setTeams(res2.data.filter(function (team) {\n        return team.year === new Date().getFullYear();\n      }));\n    })).catch(function (err) {\n      console.log(err); // if (cookies.token) {\n      //   removeCookie('token');\n      // }\n      // alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n      // window.location.href = \"/\";\n    });\n  }; // useEffect(() => {\n  //   getHead();\n  // }, [members]);\n\n\n  var getHead = function getHead() {\n    var head = members.find(function (member) {\n      return member.직책 == '실장';\n    });\n    console.log(head.name);\n    return head.name;\n  };\n\n  var getTeamMembers = function getTeamMembers(team) {\n    return members.filter(function (member) {\n      return member.team === team.name;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"\\uBBF8\\uB798\\uCC28\\uAC80\\uC99D\\uC804\\uB7B5\\uC2E4\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, getHead), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, teams.map(function (team) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: team.num,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, team.teamname));\n  }))));\n};\n\nexport default Organization;","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/pages/organization/Organization.js"],"names":["React","useState","useEffect","axios","useCookies","checkPropTypes","Organization","cookies","removeCookie","teams","setTeams","members","setMembers","heads","setHeads","findAllInfo","defaults","headers","common","token","all","get","process","env","REACT_APP_API_URL","then","spread","res1","res2","data","find","member","직책","name","filter","team","year","Date","getFullYear","catch","err","console","log","getHead","head","getTeamMembers","map","num","teamname"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { checkPropTypes } from \"prop-types\";\r\n\r\nconst Organization = () => {\r\n  const [cookies, removeCookie ] = useCookies(['token']);\r\n  const [teams, setTeams] = useState([]);\r\n  const [members, setMembers] = useState([]);\r\n  const [heads, setHeads] = useState(\"\");\r\n\r\n  useEffect(() => findAllInfo(), []);\r\n\r\n  const findAllInfo = () => {\r\n    axios.defaults.headers.common['Authorization'] = cookies.token;\r\n    axios\r\n    .all([\r\n      axios.get(`http://${process.env.REACT_APP_API_URL}/members`),\r\n      axios.get(`http://${process.env.REACT_APP_API_URL}/teams`),\r\n    ])\r\n    .then(axios.spread((res1, res2) => {\r\n      setMembers(res1.data);\r\n      setHeads(res1.data.find(member => member.직책 == '실장').name)\r\n      setTeams(res2.data.filter(team => team.year === new Date().getFullYear()));\r\n    }))\r\n    .catch(err => {\r\n      console.log(err);\r\n      // if (cookies.token) {\r\n      //   removeCookie('token');\r\n      // }\r\n      // alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n      // window.location.href = \"/\";\r\n    });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   getHead();\r\n  // }, [members]);\r\n  const getHead = () => {\r\n    const head = members.find(member => member.직책 == '실장');\r\n    console.log(head.name);\r\n    return head.name;\r\n  };\r\n\r\n  const getTeamMembers = (team) => {\r\n    return members.filter(member => member.team === team.name);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>미래차검증전략실</h1>\r\n      <div>\r\n        <h2>{getHead}</h2>\r\n        <ul>\r\n          {teams.map(team => (\r\n            <li key={team.num}>\r\n              <h3>{team.teamname}</h3>\r\n              {}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Organization;"]},"metadata":{},"sourceType":"module"}