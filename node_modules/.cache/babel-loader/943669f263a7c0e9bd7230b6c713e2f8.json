{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\nexport var useDragAndDrop = function useDragAndDrop(id, callback) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDragging = _useState2[0],\n      setisDragging = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDragOver = _useState4[0],\n      setIsDragOver = _useState4[1];\n\n  var handleDragStart = function handleDragStart(e) {\n    setisDragging(true);\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/plain', id);\n  };\n\n  var handleDrop = function handleDrop(e) {\n    setisDragging(false);\n    setIsDragOver(false);\n    var movingTarget = e.dataTransfer.getData('text/plain');\n    callback(movingTarget, id);\n  };\n\n  var handleDragEnter = function handleDragEnter() {\n    setIsDragOver(true);\n  };\n\n  var handleDragOver = function handleDragOver(e) {\n    e.preventDefault();\n    setIsDragOver(true);\n  };\n\n  var handleDragLeave = function handleDragLeave() {\n    setIsDragOver(false);\n  };\n\n  return {\n    isDragging: isDragging,\n    isDragOver: isDragOver,\n    handleDragStart: handleDragStart,\n    handleDrop: handleDrop,\n    handleDragEnter: handleDragEnter,\n    handleDragOver: handleDragOver,\n    handleDragLeave: handleDragLeave\n  };\n};","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/utils/useDragAndDrop.js"],"names":["useState","useDragAndDrop","id","callback","isDragging","setisDragging","isDragOver","setIsDragOver","handleDragStart","e","dataTransfer","effectAllowed","setData","handleDrop","movingTarget","getData","handleDragEnter","handleDragOver","preventDefault","handleDragLeave"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAKC,QAAL,EAAkB;AAC9C,kBAAoCH,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOI,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAoCL,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOM,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC7BJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAI,IAAAA,CAAC,CAACC,YAAF,CAAeC,aAAf,GAA+B,MAA/B;AACAF,IAAAA,CAAC,CAACC,YAAF,CAAeE,OAAf,CAAuB,YAAvB,EAAqCV,EAArC;AACD,GAJD;;AAMA,MAAMW,UAAU,GAAG,SAAbA,UAAa,CAACJ,CAAD,EAAO;AACxBJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,QAAMO,YAAY,GAAGL,CAAC,CAACC,YAAF,CAAeK,OAAf,CAAuB,YAAvB,CAArB;AACAZ,IAAAA,QAAQ,CAACW,YAAD,EAAeZ,EAAf,CAAR;AACD,GALD;;AAOA,MAAMc,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BT,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,MAAMU,cAAc,GAAG,SAAjBA,cAAiB,CAACR,CAAD,EAAO;AAC5BA,IAAAA,CAAC,CAACS,cAAF;AACAX,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,MAAMY,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BZ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,SAAO;AACLH,IAAAA,UAAU,EAAVA,UADK;AAELE,IAAAA,UAAU,EAAVA,UAFK;AAGLE,IAAAA,eAAe,EAAfA,eAHK;AAILK,IAAAA,UAAU,EAAVA,UAJK;AAKLG,IAAAA,eAAe,EAAfA,eALK;AAMLC,IAAAA,cAAc,EAAdA,cANK;AAOLE,IAAAA,eAAe,EAAfA;AAPK,GAAP;AASD,CAvCM","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport const useDragAndDrop = (id, callback) => {\r\n  const [isDragging, setisDragging] = useState(false);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  \r\n  const handleDragStart = (e) => {\r\n    setisDragging(true);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    e.dataTransfer.setData('text/plain', id);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    setisDragging(false);\r\n    setIsDragOver(false);\r\n    const movingTarget = e.dataTransfer.getData('text/plain');\r\n    callback(movingTarget, id);\r\n  }; \r\n\r\n  const handleDragEnter = () => {\r\n    setIsDragOver(true);\r\n  }\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    setIsDragOver(true);\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setIsDragOver(false);\r\n  };\r\n\r\n  return {\r\n    isDragging,\r\n    isDragOver,\r\n    handleDragStart,\r\n    handleDrop,\r\n    handleDragEnter,\r\n    handleDragOver,\r\n    handleDragLeave\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}