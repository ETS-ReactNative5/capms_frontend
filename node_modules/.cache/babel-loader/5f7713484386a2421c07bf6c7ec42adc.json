{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\suresoft\\\\Desktop\\\\vomproject\\\\sure-frontend\\\\src\\\\components\\\\Manage\\\\Team.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Input } from \"reactstrap\";\nimport moment from 'moment';\nimport axios from \"axios\"; // import { Cookies } from \"react-cookie\";\n\nimport { useCookies } from 'react-cookie'; // const cookies = new Cookies();\n\nvar Team = function Team() {\n  var _useCookies = useCookies(['token']),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      cookies = _useCookies2[0],\n      setCookie = _useCookies2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      teams = _useState2[0],\n      setTeams = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      team = _useState4[0],\n      setTeam = _useState4[1];\n\n  var _useState5 = useState(moment(new Date()).format('YYYY')),\n      _useState6 = _slicedToArray(_useState5, 2),\n      year = _useState6[0],\n      setYear = _useState6[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"team\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginBottom: 0.5 + 'rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: 700,\n      fontSize: 1.5 + 'rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"\\uD300\\uAD00\\uB9AC\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    style: {\n      width: 8 + 'rem'\n    },\n    id: \"year\",\n    value: year,\n    onChange: function onChange(e) {\n      return setYear(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, _toConsumableArray(Array(moment(new Date()).format('YYYY') - 2018 + 1).keys()).map(function (i) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: moment(new Date()).format('YYYY') - i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, moment(new Date()).format('YYYY') - i);\n  })))));\n}; // class Team extends React.Component{\n//     constructor(props){\n//       super(props);\n//       this.state={\n//         teams:\"\", \n//         num:\"\",\n//         teamname:\"\",\n//         saveDate:\"\",\n//         updateEdit :[],\n//         onEdit : this.onEdit,\n//         onDelete : this.onDelete,\n//         updateValue : this.updateValue,\n//         onSave : this.onSave,\n//         year: moment(new Date()).format(\"YYYY\"),\n//       };\n//     }\n//     getRecord = (num) => {\n//       const product = this.state.teams.find(item => item.num === num);\n//       return product;\n//     }\n//     onEdit = (num) =>{\n//       const tempProduct = this.state.teams;\n//       const index  = tempProduct.indexOf(this.getRecord(num));\n//       const selectedRecord = tempProduct[index];\n//       this.setState({\n//         num : selectedRecord['num'],\n//         teamname : selectedRecord['teamname'],\n//         firstorder : selectedRecord['firstorder'],\n//         firstsale : selectedRecord['firstsale'],\n//         lastorder : selectedRecord['lastorder'],\n//         lastsale : selectedRecord['lastsale'],\n//         year : selectedRecord['year'],\n//       })\n//     }\n//     updateValue= (e,test) =>{\n//       if(test === \"teamname\"){\n//         this.state.teamname = e.target.value;\n//       }\n//       if(test === \"firstorder\"){\n//         this.state.firstorder = e.target.value;\n//       }\n//       if(test === \"firstsale\"){\n//         this.state.firstsale = e.target.value;\n//       }\n//       if(test === \"lastorder\"){\n//         this.state.lastorder = e.target.value;\n//       }\n//       if(test === \"lastsale\"){\n//         this.state.lastsale = e.target.value;\n//       }\n//       if(test === \"year\"){\n//         this.state.year = e.target.value;\n//       }\n//       const tempArr = [this.state.teamname, this.state.firstorder, this.state.firstsale, this.state.lastorder, this.state.lastsale, this.state.year];\n//       this.setState({\n//         updateEdit : tempArr\n//       })\n//     }\n//     onSave = (num) =>{\n//       if(num!==''){ // Update 조건문\n//         const SaveRecord = this.state.teams;\n//         const index = SaveRecord.indexOf(this.getRecord(num));\n//         const Record = SaveRecord[index];\n//         Record['num'] = this.state.updateEdit[0];\n//         Record['teamname'] = this.state.updateEdit[1];\n//         Record['firstorder'] = this.state.updateEdit[2];\n//         Record['firstsale'] = this.state.updateEdit[3];\n//         Record['lastorder'] = this.state.updateEdit[4];\n//         Record['lastsale'] = this.state.updateEdit[5];\n//         Record['year'] = this.state.updateEdit[6];\n//         this.setState({\n//           teams : [...this.state.teams],\n//           num :\"\" , teamname:\"\", firstorder:\"\", firstsale:\"\", lastorder:\"\", lastsale:\"\", year: \"\",\n//         })\n//         axios.post(`http://${process.env.REACT_APP_API_URL}/teams/update`, //DB연동\n//         {num: this.state.num, teamname: this.state.teamname, firstorder: this.state.firstorder, firstsale: this.state.firstsale, lastorder: this.state.lastorder, lastsale: this.state.lastsale, year: this.state.year})\n//         .then((response)=>{\n//           console.log(response);\n//         })\n//         .catch(err => {\n//           if (cookies.get(\"token\")) {\n//             cookies.remove(\"token\");\n//           }\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n//           window.location.href = \"/\";\n//         });\n//         window.location.reload();\n//       }\n//       // Insert 조건문\n//       else{ \n//         const MaxNum = Math.max(...this.state.teams.map(item=>item.num))\n//         const num = MaxNum + 1;\n//         const newArr = [];\n//         newArr['teamname'] = this.state.updateEdit[0];\n//         newArr['firstorder'] = this.state.updateEdit[1];\n//         newArr['firstsale'] = this.state.updateEdit[2];\n//         newArr['lastorder'] = this.state.updateEdit[3];\n//         newArr['lastsale'] = this.state.updateEdit[4];\n//         newArr['year'] = this.state.updateEdit[5];\n//         this.setState({\n//           teams : [...this.state.teams, newArr],\n//           num :\"\" , teamname:\"\", firstorder:\"\", firstsale:\"\", lastorder:\"\", lastsale:\"\", year:\"\",\n//         })\n//         axios.post(`http://${process.env.REACT_APP_API_URL}/teams/add`, //DB연동\n//         {num: MaxNum+1, teamname: this.state.teamname, firstorder: this.state.firstorder, firstsale: this.state.firstsale, lastorder: this.state.lastorder, lastsale: this.state.lastsale, year: this.state.year})\n//         .then((response)=>{\n//           console.log(response);\n//         })\n//         .catch(err => {\n//           if (cookies.get(\"token\")) {\n//             cookies.remove(\"token\");\n//           }\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n//           window.location.href = \"/\";\n//         });\n//         window.location.reload();\n//       }\n//     }\n//      //DELETE 하기 \n//      onDelete = (num) => {\n//       if (window.confirm(\"정말 삭제하시겠습니까??\") == true){    //확인\n//         const tempProduct = this.state.teams.filter(item=> item.num !== num);\n//       this.setState({\n//         members : tempProduct,\n//         num :\"\" , id:\"\", password:\"\", name:\"\",\n//       })\n//       axios.post(`http://${process.env.REACT_APP_API_URL}/teams/delete`, //DB연동\n//         {num: num})\n//         .then((response)=>{})\n//         .catch(err => {\n//           if (cookies.get(\"token\")) {\n//             cookies.remove(\"token\");\n//           }\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n//           window.location.href = \"/\";\n//         });\n//         window.location.reload();\n//       }else{   //취소\n//         return;\n//       }\n//     }\n//     componentDidMount(){\n//       axios.defaults.headers.common['Authorization'] = cookies.get(\"token\");\n//       this.findAllTeams();\n//     }\n//     findAllTeams(){\n//       axios.get(`http://${process.env.REACT_APP_API_URL}/teams`)\n//       .then(res=>res.data)\n//       .then((data)=>{\n//         this.setState({teams:data});\n//       })\n//       .catch(err => {\n//         if (cookies.get(\"token\")) {\n//           cookies.remove(\"token\");\n//         }\n//         alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\n//         window.location.href = \"/\";\n//       });\n//     }\n//     render(){\n//         return(\n// <>\n//   <div className=\"team\">\n//     <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: 0.5+'rem'}}>\n//       <p style={{ fontWeight: 700, fontSize: 1.5+'rem' }}>팀관리</p>\n//       <select className=\"form-control\" style={{width: 8+'rem'}} id=\"Year\" value={this.state.year} onChange={(e) => {this.state.updateValue(e,\"year\")}}>\n//         <option key={2020} value=\"2020\">2020</option>\n//         <option key={2021} value=\"2021\">2021</option>\n//         <option key={2022} value=\"2022\">2022</option>\n//         <option key={2023} value=\"2023\">2023</option>\n//       </select>\n//     </div>\n//     <Table className=\"manage__table table-sm\">\n//         <thead>\n//           <tr>\n//             <th>팀명<br /><br /><Input type=\"text\" value={this.state.teamname} onChange={(e) => {this.state.updateValue(e,\"teamname\")}}/></th>\n//             <th>상반기 목표수주<br /><br /><Input type=\"text\" value={this.state.firstorder} onChange={(e) => {this.state.updateValue(e,\"firstorder\")}}/></th>\n//             <th>상반기 목표매출<br /><br /><Input type=\"text\" value={this.state.firstsale} onChange={(e) => {this.state.updateValue(e,\"firstsale\")}}/></th>\n//             <th>하반기 목표수주<br /><br /><Input type=\"text\" value={this.state.lastorder} onChange={(e) => {this.state.updateValue(e,\"lastorder\")}}/></th>\n//             <th>하반기 목표매출<br /><br /><Input type=\"text\" value={this.state.lastsale} onChange={(e) => {this.state.updateValue(e,\"lastsale\")}}/></th>\n//             <th>Action<br /><br /><Button size=\"sm\" onClick={()=>{this.state.onSave(this.state.num)}}>{this.state.num ? \"변경\" : \"추가\"}</Button></th>\n//           </tr>\n//         </thead>\n//         <tbody>  \n//           {this.state.teams ? this.state.teams.map(c => {\n//             if(c.year == this.state.year){\n//               return( \n//               <tr key={c.num}>\n//                 <td style={{ textAlign: \"center\" }}>{c.teamname}</td> \n//                 <td style={{ textAlign: \"center\" }}>{c.firstorder}</td> \n//                 <td style={{ textAlign: \"center\" }}>{c.firstsale}</td>\n//                 <td style={{ textAlign: \"center\" }}>{c.lastorder}</td>\n//                 <td style={{ textAlign: \"center\" }}>{c.lastsale}</td>\n//                 <td><Button color={\"warning\"} className=\"UpdateBtn\" size=\"sm\" variant=\"primary\" onClick={()=>{this.state.onEdit(c.num)}}>수정</Button>&nbsp;&nbsp;\n//                   <Button color={\"default\"} className=\"UpdateBtn\" size=\"sm\" variant=\"danger\"onClick={()=>{this.state.onDelete(c.num)}}>삭제</Button></td>\n//               </tr> \n//               );\n//           }})  :<tr><td colSpan=\"7\">데이터가 없습니다.</td></tr>}\n//         </tbody>\n//       </Table>\n//     </div>\n//   </>\n//         )\n//     }\n// }\n\n\nexport default Team;","map":{"version":3,"sources":["C:/Users/suresoft/Desktop/vomproject/sure-frontend/src/components/Manage/Team.js"],"names":["React","useState","useEffect","Table","Button","Input","moment","axios","useCookies","Team","cookies","setCookie","teams","setTeams","team","setTeam","Date","format","year","setYear","display","flexDirection","justifyContent","marginBottom","fontWeight","fontSize","width","e","target","value","Array","keys","map","i"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACIC,KADJ,EAEIC,MAFJ,EAGIC,KAHJ,QAIO,YAJP;AAKA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,oBAA6BD,UAAU,CAAC,CAAC,OAAD,CAAD,CAAvC;AAAA;AAAA,MAAOE,OAAP;AAAA,MAAgBC,SAAhB;;AACA,kBAA0BV,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwBZ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOa,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBd,QAAQ,CAACK,MAAM,CAAC,IAAIU,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,MAA1B,CAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAE,KAAjC;AAAwCC,MAAAA,cAAc,EAAE,eAAxD;AAAyEC,MAAAA,YAAY,EAAE,MAAI;AAA3F,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,GAAd;AAAmBC,MAAAA,QAAQ,EAAE,MAAI;AAAjC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,IAAE;AAAV,KAAxC;AAA0D,IAAA,EAAE,EAAC,MAA7D;AAAoE,IAAA,KAAK,EAAER,IAA3E;AAAiF,IAAA,QAAQ,EAAE,kBAACS,CAAD;AAAA,aAAOR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,KAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,mBAAIC,KAAK,CAACxB,MAAM,CAAC,IAAIU,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,MAA1B,IAAoC,IAApC,GAA2C,CAA5C,CAAL,CAAoDc,IAApD,EAAJ,EAAgEC,GAAhE,CAAoE,UAACC,CAAD;AAAA,wBACnE;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAE3B,MAAM,CAAC,IAAIU,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,MAA1B,IAAoCgB,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+D3B,MAAM,CAAC,IAAIU,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,MAA1B,IAAoCgB,CAAnG,CADmE;AAAA,GAApE,CADH,CAFF,CADF,CADF,CADF;AA8CD,CApDD,C,CAueAAexB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Table,\r\n    Button,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport moment from 'moment';\r\nimport axios from \"axios\";\r\n// import { Cookies } from \"react-cookie\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\n// const cookies = new Cookies();\r\n\r\nconst Team = () => {\r\n  const [cookies, setCookie] = useCookies(['token']);\r\n  const [teams, setTeams] = useState([]);\r\n  const [team, setTeam] = useState({});\r\n  const [year, setYear] = useState(moment(new Date()).format('YYYY'));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"team\">\r\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: 0.5+'rem'}}>\r\n          <p style={{ fontWeight: 700, fontSize: 1.5+'rem' }}>팀관리</p>\r\n          <select className=\"form-control\" style={{width: 8+'rem'}} id=\"year\" value={year} onChange={(e) => setYear(e.target.value)}>\r\n            {[...Array(moment(new Date()).format('YYYY') - 2018 + 1).keys()].map((i) => (\r\n              <option key={i} value={moment(new Date()).format('YYYY') - i}>{moment(new Date()).format('YYYY') - i}</option>\r\n            ))}\r\n            {/* <option key={2020} value=\"2020\">2020</option>\r\n            <option key={2021} value=\"2021\">2021</option>\r\n            <option key={2022} value=\"2022\">2022</option>\r\n            <option key={2023} value=\"2023\">2023</option> */}\r\n          </select>\r\n        </div>\r\n        {/* <Table className=\"manage__table table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>팀명<br /><br /><Input type=\"text\" value={this.state.teamname} onChange={(e) => {this.state.updateValue(e,\"teamname\")}}/></th>\r\n              <th>상반기 목표수주<br /><br /><Input type=\"text\" value={this.state.firstorder} onChange={(e) => {this.state.updateValue(e,\"firstorder\")}}/></th>\r\n              <th>상반기 목표매출<br /><br /><Input type=\"text\" value={this.state.firstsale} onChange={(e) => {this.state.updateValue(e,\"firstsale\")}}/></th>\r\n              <th>하반기 목표수주<br /><br /><Input type=\"text\" value={this.state.lastorder} onChange={(e) => {this.state.updateValue(e,\"lastorder\")}}/></th>\r\n              <th>하반기 목표매출<br /><br /><Input type=\"text\" value={this.state.lastsale} onChange={(e) => {this.state.updateValue(e,\"lastsale\")}}/></th>\r\n              <th>Action<br /><br /><Button size=\"sm\" onClick={()=>{this.state.onSave(this.state.num)}}>{this.state.num ? \"변경\" : \"추가\"}</Button></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>  \r\n            {this.state.teams ? this.state.teams.map(c => {\r\n              if(c.year == this.state.year){\r\n                return( \r\n                <tr key={c.num}>\r\n                  <td style={{ textAlign: \"center\" }}>{c.teamname}</td> \r\n                  <td style={{ textAlign: \"center\" }}>{c.firstorder}</td> \r\n                  <td style={{ textAlign: \"center\" }}>{c.firstsale}</td>\r\n                  <td style={{ textAlign: \"center\" }}>{c.lastorder}</td>\r\n                  <td style={{ textAlign: \"center\" }}>{c.lastsale}</td>\r\n                  <td><Button color={\"warning\"} className=\"UpdateBtn\" size=\"sm\" variant=\"primary\" onClick={()=>{this.state.onEdit(c.num)}}>수정</Button>&nbsp;&nbsp;\r\n                    <Button color={\"default\"} className=\"UpdateBtn\" size=\"sm\" variant=\"danger\"onClick={()=>{this.state.onDelete(c.num)}}>삭제</Button></td>\r\n                </tr> \r\n                );\r\n            }})  :<tr><td colSpan=\"7\">데이터가 없습니다.</td></tr>}\r\n          </tbody>\r\n        </Table> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// class Team extends React.Component{\r\n     \r\n//     constructor(props){\r\n//       super(props);\r\n\r\n//       this.state={\r\n//         teams:\"\", \r\n//         num:\"\",\r\n//         teamname:\"\",\r\n//         saveDate:\"\",\r\n//         updateEdit :[],\r\n//         onEdit : this.onEdit,\r\n//         onDelete : this.onDelete,\r\n//         updateValue : this.updateValue,\r\n//         onSave : this.onSave,\r\n//         year: moment(new Date()).format(\"YYYY\"),\r\n//       };\r\n//     }\r\n\r\n//     getRecord = (num) => {\r\n//       const product = this.state.teams.find(item => item.num === num);\r\n//       return product;\r\n//     }\r\n\r\n//     onEdit = (num) =>{\r\n//       const tempProduct = this.state.teams;\r\n//       const index  = tempProduct.indexOf(this.getRecord(num));\r\n//       const selectedRecord = tempProduct[index];\r\n//       this.setState({\r\n//         num : selectedRecord['num'],\r\n//         teamname : selectedRecord['teamname'],\r\n//         firstorder : selectedRecord['firstorder'],\r\n//         firstsale : selectedRecord['firstsale'],\r\n//         lastorder : selectedRecord['lastorder'],\r\n//         lastsale : selectedRecord['lastsale'],\r\n//         year : selectedRecord['year'],\r\n//       })\r\n//     }\r\n\r\n//     updateValue= (e,test) =>{\r\n//       if(test === \"teamname\"){\r\n//         this.state.teamname = e.target.value;\r\n//       }\r\n//       if(test === \"firstorder\"){\r\n//         this.state.firstorder = e.target.value;\r\n//       }\r\n//       if(test === \"firstsale\"){\r\n//         this.state.firstsale = e.target.value;\r\n//       }\r\n//       if(test === \"lastorder\"){\r\n//         this.state.lastorder = e.target.value;\r\n//       }\r\n//       if(test === \"lastsale\"){\r\n//         this.state.lastsale = e.target.value;\r\n//       }\r\n//       if(test === \"year\"){\r\n//         this.state.year = e.target.value;\r\n//       }\r\n//       const tempArr = [this.state.teamname, this.state.firstorder, this.state.firstsale, this.state.lastorder, this.state.lastsale, this.state.year];\r\n//       this.setState({\r\n//         updateEdit : tempArr\r\n//       })\r\n//     }\r\n\r\n//     onSave = (num) =>{\r\n//       if(num!==''){ // Update 조건문\r\n//         const SaveRecord = this.state.teams;\r\n//         const index = SaveRecord.indexOf(this.getRecord(num));\r\n//         const Record = SaveRecord[index];\r\n//         Record['num'] = this.state.updateEdit[0];\r\n//         Record['teamname'] = this.state.updateEdit[1];\r\n//         Record['firstorder'] = this.state.updateEdit[2];\r\n//         Record['firstsale'] = this.state.updateEdit[3];\r\n//         Record['lastorder'] = this.state.updateEdit[4];\r\n//         Record['lastsale'] = this.state.updateEdit[5];\r\n//         Record['year'] = this.state.updateEdit[6];\r\n//         this.setState({\r\n//           teams : [...this.state.teams],\r\n//           num :\"\" , teamname:\"\", firstorder:\"\", firstsale:\"\", lastorder:\"\", lastsale:\"\", year: \"\",\r\n//         })\r\n\r\n//         axios.post(`http://${process.env.REACT_APP_API_URL}/teams/update`, //DB연동\r\n//         {num: this.state.num, teamname: this.state.teamname, firstorder: this.state.firstorder, firstsale: this.state.firstsale, lastorder: this.state.lastorder, lastsale: this.state.lastsale, year: this.state.year})\r\n//         .then((response)=>{\r\n//           console.log(response);\r\n//         })\r\n//         .catch(err => {\r\n//           if (cookies.get(\"token\")) {\r\n//             cookies.remove(\"token\");\r\n//           }\r\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n//           window.location.href = \"/\";\r\n//         });\r\n//         window.location.reload();\r\n//       }\r\n//       // Insert 조건문\r\n//       else{ \r\n//         const MaxNum = Math.max(...this.state.teams.map(item=>item.num))\r\n//         const num = MaxNum + 1;\r\n//         const newArr = [];\r\n//         newArr['teamname'] = this.state.updateEdit[0];\r\n//         newArr['firstorder'] = this.state.updateEdit[1];\r\n//         newArr['firstsale'] = this.state.updateEdit[2];\r\n//         newArr['lastorder'] = this.state.updateEdit[3];\r\n//         newArr['lastsale'] = this.state.updateEdit[4];\r\n//         newArr['year'] = this.state.updateEdit[5];\r\n//         this.setState({\r\n//           teams : [...this.state.teams, newArr],\r\n//           num :\"\" , teamname:\"\", firstorder:\"\", firstsale:\"\", lastorder:\"\", lastsale:\"\", year:\"\",\r\n//         })\r\n\r\n//         axios.post(`http://${process.env.REACT_APP_API_URL}/teams/add`, //DB연동\r\n//         {num: MaxNum+1, teamname: this.state.teamname, firstorder: this.state.firstorder, firstsale: this.state.firstsale, lastorder: this.state.lastorder, lastsale: this.state.lastsale, year: this.state.year})\r\n//         .then((response)=>{\r\n//           console.log(response);\r\n//         })\r\n//         .catch(err => {\r\n//           if (cookies.get(\"token\")) {\r\n//             cookies.remove(\"token\");\r\n//           }\r\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n//           window.location.href = \"/\";\r\n//         });\r\n//         window.location.reload();\r\n//       }\r\n//     }\r\n\r\n//      //DELETE 하기 \r\n//      onDelete = (num) => {\r\n//       if (window.confirm(\"정말 삭제하시겠습니까??\") == true){    //확인\r\n//         const tempProduct = this.state.teams.filter(item=> item.num !== num);\r\n//       this.setState({\r\n//         members : tempProduct,\r\n//         num :\"\" , id:\"\", password:\"\", name:\"\",\r\n//       })\r\n//       axios.post(`http://${process.env.REACT_APP_API_URL}/teams/delete`, //DB연동\r\n//         {num: num})\r\n//         .then((response)=>{})\r\n//         .catch(err => {\r\n//           if (cookies.get(\"token\")) {\r\n//             cookies.remove(\"token\");\r\n//           }\r\n//           alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n//           window.location.href = \"/\";\r\n//         });\r\n//         window.location.reload();\r\n//       }else{   //취소\r\n//         return;\r\n//       }\r\n//     }\r\n//     componentDidMount(){\r\n//       axios.defaults.headers.common['Authorization'] = cookies.get(\"token\");\r\n//       this.findAllTeams();\r\n//     }\r\n\r\n//     findAllTeams(){\r\n//       axios.get(`http://${process.env.REACT_APP_API_URL}/teams`)\r\n//       .then(res=>res.data)\r\n//       .then((data)=>{\r\n//         this.setState({teams:data});\r\n//       })\r\n//       .catch(err => {\r\n//         if (cookies.get(\"token\")) {\r\n//           cookies.remove(\"token\");\r\n//         }\r\n//         alert(\"세션이 만료되었습니다. 다시 로그인 해주세요\");\r\n//         window.location.href = \"/\";\r\n//       });\r\n//     }\r\n\r\n//     render(){\r\n//         return(\r\n        // <>\r\n        //   <div className=\"team\">\r\n        //     <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginBottom: 0.5+'rem'}}>\r\n        //       <p style={{ fontWeight: 700, fontSize: 1.5+'rem' }}>팀관리</p>\r\n        //       <select className=\"form-control\" style={{width: 8+'rem'}} id=\"Year\" value={this.state.year} onChange={(e) => {this.state.updateValue(e,\"year\")}}>\r\n        //         <option key={2020} value=\"2020\">2020</option>\r\n        //         <option key={2021} value=\"2021\">2021</option>\r\n        //         <option key={2022} value=\"2022\">2022</option>\r\n        //         <option key={2023} value=\"2023\">2023</option>\r\n        //       </select>\r\n        //     </div>\r\n        //     <Table className=\"manage__table table-sm\">\r\n        //         <thead>\r\n        //           <tr>\r\n        //             <th>팀명<br /><br /><Input type=\"text\" value={this.state.teamname} onChange={(e) => {this.state.updateValue(e,\"teamname\")}}/></th>\r\n        //             <th>상반기 목표수주<br /><br /><Input type=\"text\" value={this.state.firstorder} onChange={(e) => {this.state.updateValue(e,\"firstorder\")}}/></th>\r\n        //             <th>상반기 목표매출<br /><br /><Input type=\"text\" value={this.state.firstsale} onChange={(e) => {this.state.updateValue(e,\"firstsale\")}}/></th>\r\n        //             <th>하반기 목표수주<br /><br /><Input type=\"text\" value={this.state.lastorder} onChange={(e) => {this.state.updateValue(e,\"lastorder\")}}/></th>\r\n        //             <th>하반기 목표매출<br /><br /><Input type=\"text\" value={this.state.lastsale} onChange={(e) => {this.state.updateValue(e,\"lastsale\")}}/></th>\r\n        //             <th>Action<br /><br /><Button size=\"sm\" onClick={()=>{this.state.onSave(this.state.num)}}>{this.state.num ? \"변경\" : \"추가\"}</Button></th>\r\n        //           </tr>\r\n        //         </thead>\r\n        //         <tbody>  \r\n        //           {this.state.teams ? this.state.teams.map(c => {\r\n        //             if(c.year == this.state.year){\r\n        //               return( \r\n        //               <tr key={c.num}>\r\n        //                 <td style={{ textAlign: \"center\" }}>{c.teamname}</td> \r\n        //                 <td style={{ textAlign: \"center\" }}>{c.firstorder}</td> \r\n        //                 <td style={{ textAlign: \"center\" }}>{c.firstsale}</td>\r\n        //                 <td style={{ textAlign: \"center\" }}>{c.lastorder}</td>\r\n        //                 <td style={{ textAlign: \"center\" }}>{c.lastsale}</td>\r\n        //                 <td><Button color={\"warning\"} className=\"UpdateBtn\" size=\"sm\" variant=\"primary\" onClick={()=>{this.state.onEdit(c.num)}}>수정</Button>&nbsp;&nbsp;\r\n        //                   <Button color={\"default\"} className=\"UpdateBtn\" size=\"sm\" variant=\"danger\"onClick={()=>{this.state.onDelete(c.num)}}>삭제</Button></td>\r\n        //               </tr> \r\n        //               );\r\n        //           }})  :<tr><td colSpan=\"7\">데이터가 없습니다.</td></tr>}\r\n        //         </tbody>\r\n        //       </Table>\r\n        //     </div>\r\n        //   </>\r\n//         )\r\n//     }\r\n// }\r\n\r\nexport default Team;"]},"metadata":{},"sourceType":"module"}